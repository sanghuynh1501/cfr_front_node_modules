{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _defineProperty from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/recordings/ModalShareRecord.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport client, { Q_GET_RECORD, Q_SEARCH_USERS, M_UPDATE_RECORD } from '@graphql';\nimport { newNotification } from '@utils';\nimport debounce from 'lodash/debounce';\nvar Option = _Select.Option;\n\nvar ModalShareRecord = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalShareRecord, _React$PureComponent);\n\n  var _super = _createSuper(ModalShareRecord);\n\n  function ModalShareRecord(props) {\n    var _this;\n\n    _classCallCheck(this, ModalShareRecord);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function () {\n      _this.props.setRef(_this.showModal);\n\n      _this.props.form.validateFields();\n    };\n\n    _this.queryRecord = function (recordId) {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_GET_RECORD,\n          fetchPolicy: 'network-only',\n          variables: {\n            recordId: recordId\n          }\n        }).then(function (_ref) {\n          var data = _ref.data;\n          resolve(data.recordPrivate);\n        }).catch(function (err) {\n          var message = err === null || err === void 0 ? void 0 : err.graphQLErrors.map(function (er) {\n            return er.message;\n          }).join(',');\n          newNotification(_this.props.i18n.t(message), 'danger');\n          resolve(null);\n        });\n      });\n    };\n\n    _this.showModal = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(recordId) {\n        var record;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.queryRecord(recordId);\n\n              case 2:\n                record = _context.sent;\n\n                _this.setState({\n                  visible: true,\n                  record: record,\n                  listUsers: record.users.filter(function (obj) {\n                    return obj.permission === 'view';\n                  }).map(function (obj) {\n                    return obj.user;\n                  })\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseModal = function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          record: null\n        });\n      }, 200);\n    };\n\n    _this.handleUpdateRecord = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.props.form.validateFields(function (err, values) {\n                  if (!err) {\n                    var name = values.name,\n                        userIds = values.userIds;\n                    client.mutate({\n                      mutation: M_UPDATE_RECORD,\n                      variables: {\n                        recordId: _this.state.record._id,\n                        input: {\n                          name: name,\n                          userIds: userIds\n                        }\n                      }\n                    }).then(function (_ref4) {\n                      var data = _ref4.data;\n\n                      if (!data.updateRecord) {\n                        throw new Error('Cập nhật bản ghi thất bại.');\n                      }\n\n                      newNotification('Đã cập nhật bản ghi thành công.', 'success');\n\n                      _this.props.refetchRecords();\n\n                      _this.handleCloseModal();\n                    }).catch(function (err) {\n                      var _err$graphQLErrors;\n\n                      var message = (err === null || err === void 0 ? void 0 : (_err$graphQLErrors = err.graphQLErrors) === null || _err$graphQLErrors === void 0 ? void 0 : _err$graphQLErrors.map(function (er) {\n                        return er.message;\n                      }).join(',')) || (err === null || err === void 0 ? void 0 : err.message) || 'Có lỗi xảy ra';\n                      newNotification(_this.props.i18n.t(message), 'danger');\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.onSearchUsers = function (text) {\n      _this.setState({\n        fetching: true\n      });\n\n      client.query({\n        query: Q_SEARCH_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          text: text,\n          limit: 15\n        }\n      }).then(function (_ref5) {\n        var data = _ref5.data;\n        var users = data.searchUsers || [];\n\n        var hashUserIdUsed = _defineProperty({}, _this.state.record.conference.createdBy._id, 1);\n\n        _this.props.form.validateFields(function (err, values) {\n          if (!err) {\n            values.userIds.map(function (userId) {\n              return hashUserIdUsed[userId] = 1;\n            }); // đánh dấu những userId đang select\n          }\n        });\n\n        var newListUser = _this.state.listUsers.filter(function (user) {\n          return hashUserIdUsed[user._id] === 1;\n        }); // lọc lấy những data đã có trong list\n\n\n        users.forEach(function (user) {\n          if (hashUserIdUsed[user._id] !== 1) {\n            newListUser.unshift(user);\n          }\n        });\n\n        _this.setState({\n          listUsers: newListUser,\n          fetching: false\n        });\n      }).catch(function (err) {\n        var _err$graphQLErrors2;\n\n        var message = (err === null || err === void 0 ? void 0 : (_err$graphQLErrors2 = err.graphQLErrors) === null || _err$graphQLErrors2 === void 0 ? void 0 : _err$graphQLErrors2.map(function (er) {\n          return er.message;\n        }).join(',')) || (err === null || err === void 0 ? void 0 : err.message) || 'Có lỗi xảy ra';\n\n        _this.setState({\n          fetching: false\n        });\n\n        return newNotification(_this.props.i18n.t(message), 'danger');\n      });\n    };\n\n    _this.handleChange = function (value) {\n      _this.setState({\n        fetching: false\n      });\n    };\n\n    _this.state = {\n      visible: false,\n      record: null,\n      listUsers: [],\n      fetching: false\n    };\n    _this.onSearchUsers = debounce(_this.onSearchUsers, 200);\n    return _this;\n  }\n\n  _createClass(ModalShareRecord, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          record = _this$state.record,\n          listUsers = _this$state.listUsers,\n          fetching = _this$state.fetching;\n      return /*#__PURE__*/React.createElement(_Modal, {\n        title: \"Share Recording\",\n        visible: this.state.visible,\n        onOk: this.handleUpdateRecord,\n        onCancel: this.handleCloseModal,\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 7\n        }\n      }, record && /*#__PURE__*/React.createElement(_Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Name Recording\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('name', {\n        initialValue: record === null || record === void 0 ? void 0 : record.name,\n        rules: [{\n          required: true,\n          message: 'Please input name recording!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 18\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Share Recording\",\n        hasFeedback: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('userIds', {\n        initialValue: record ? record.users.filter(function (obj) {\n          return obj.permission === 'view';\n        }).map(function (obj) {\n          return obj.user._id;\n        }) : []\n      })( /*#__PURE__*/React.createElement(_Select, {\n        onSearch: this.onSearchUsers,\n        mode: \"multiple\",\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Ch\\u1ECDn users\",\n        filterOption: false,\n        notFoundContent: fetching ? /*#__PURE__*/React.createElement(_Spin, {\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 47\n          }\n        }) : null,\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 17\n        }\n      }, !fetching && listUsers.map(function (obj) {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: obj._id,\n          key: obj._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }\n        }, \"\".concat(obj.firstname, \" \").concat(obj.lastname), \" (\", obj.username, \")\");\n      }))))));\n    }\n  }]);\n\n  return ModalShareRecord;\n}(React.PureComponent);\n\nexport default withTranslation()(_Form.create({\n  name: 'updateRecord'\n})(ModalShareRecord));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/recordings/ModalShareRecord.jsx"],"names":["React","withTranslation","client","Q_GET_RECORD","Q_SEARCH_USERS","M_UPDATE_RECORD","newNotification","debounce","Option","ModalShareRecord","props","componentDidMount","setRef","showModal","form","validateFields","queryRecord","recordId","Promise","resolve","reject","query","fetchPolicy","variables","then","data","recordPrivate","catch","err","message","graphQLErrors","map","er","join","i18n","t","record","setState","visible","listUsers","users","filter","obj","permission","user","handleCloseModal","e","setTimeout","handleUpdateRecord","preventDefault","values","name","userIds","mutate","mutation","state","_id","input","updateRecord","Error","refetchRecords","onSearchUsers","text","fetching","limit","searchUsers","hashUserIdUsed","conference","createdBy","userId","newListUser","forEach","unshift","handleChange","value","getFieldDecorator","initialValue","rules","required","width","firstname","lastname","username","PureComponent","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Form, Input, Select, Spin } from 'antd'\nimport { withTranslation } from 'react-i18next'\nimport client, { Q_GET_RECORD, Q_SEARCH_USERS, M_UPDATE_RECORD } from '@graphql'\nimport { newNotification } from '@utils'\nimport debounce from 'lodash/debounce'\nconst { Option } = Select\n\nclass ModalShareRecord extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      record: null,\n      listUsers: [],\n      fetching: false\n    }\n    this.onSearchUsers = debounce(this.onSearchUsers, 200)\n  }\n  componentDidMount = () => {\n    this.props.setRef(this.showModal)\n    this.props.form.validateFields()\n  }\n\n  queryRecord = recordId => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_GET_RECORD,\n          fetchPolicy: 'network-only',\n          variables: {\n            recordId\n          }\n        })\n        .then(({ data }) => {\n          resolve(data.recordPrivate)\n        })\n        .catch(err => {\n          const message = err?.graphQLErrors.map(er => er.message).join(',')\n          newNotification(this.props.i18n.t(message), 'danger')\n          resolve(null)\n        })\n    })\n  }\n  showModal = async recordId => {\n    const record = await this.queryRecord(recordId)\n    this.setState({\n      visible: true,\n      record,\n      listUsers: record.users.filter(obj => obj.permission === 'view').map(obj => obj.user)\n    })\n  }\n\n\n  handleCloseModal = e => {\n    this.setState({\n      visible: false\n    })\n    setTimeout(() => {\n      this.setState({\n        record: null\n      })\n    }, 200)\n  }\n\n  handleUpdateRecord = async e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { name, userIds } = values\n        client\n          .mutate({\n            mutation: M_UPDATE_RECORD,\n            variables: {\n              recordId: this.state.record._id,\n              input: {\n                name,\n                userIds\n              }\n            }\n          }).then(({ data }) => {\n            if (!data.updateRecord) {\n              throw new Error('Cập nhật bản ghi thất bại.')\n            }\n            newNotification('Đã cập nhật bản ghi thành công.', 'success')\n            this.props.refetchRecords()\n            this.handleCloseModal()\n          }).catch(err => {\n            const message = err?.graphQLErrors?.map(er => er.message).join(',') || err?.message || 'Có lỗi xảy ra'\n            newNotification(this.props.i18n.t(message), 'danger')\n          })\n      }\n    })\n  }\n\n  onSearchUsers = text => {\n    this.setState({ fetching: true })\n    client\n      .query({\n        query: Q_SEARCH_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          text,\n          limit: 15\n        }\n      })\n      .then(({ data }) => {\n        const users = data.searchUsers || []\n        const hashUserIdUsed = {\n          [this.state.record.conference.createdBy._id]: 1 // Đánh dấu người tạo record\n        }\n\n        this.props.form.validateFields((err, values) => {\n          if (!err) {\n            values.userIds.map(userId => hashUserIdUsed[userId] = 1) // đánh dấu những userId đang select\n          }\n        })\n\n        const newListUser = this.state.listUsers.filter(user => hashUserIdUsed[user._id] === 1) // lọc lấy những data đã có trong list\n        users.forEach(user => {\n          if (hashUserIdUsed[user._id] !== 1) {\n            newListUser.unshift(user)\n          }\n        })\n        this.setState({\n          listUsers: newListUser,\n          fetching: false\n        })\n      })\n      .catch(err => {\n        const message = err?.graphQLErrors?.map(er => er.message).join(',') || err?.message || 'Có lỗi xảy ra'\n\n        this.setState({ fetching: false })\n        return newNotification(this.props.i18n.t(message), 'danger')\n      })\n  }\n\n  handleChange = value => {\n    this.setState({\n      fetching: false,\n    });\n  };\n\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    const { record, listUsers, fetching } = this.state\n\n    return (\n      <Modal\n        title='Share Recording'\n        visible={this.state.visible}\n        onOk={this.handleUpdateRecord}\n        onCancel={this.handleCloseModal}\n        centered\n      >\n        {record && (\n          <Form>\n            <Form.Item label='Name Recording'>\n              {getFieldDecorator('name', {\n                initialValue: record?.name,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Please input name recording!'\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label='Share Recording' hasFeedback>\n              {getFieldDecorator('userIds', {\n                initialValue: record ?\n                  record.users\n                    .filter(obj => obj.permission === 'view')\n                    .map(obj => obj.user._id)\n                  :\n                  [],\n              })(\n                <Select\n                  onSearch={this.onSearchUsers}\n                  mode='multiple'\n                  style={{ width: '100%' }}\n                  placeholder='Chọn users'\n                  filterOption={false}\n                  notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n                  onChange={this.handleChange}\n\n                >\n                  {!fetching && listUsers.map(obj => (\n                    <Option value={obj._id} key={obj._id}>\n                      {`${obj.firstname} ${obj.lastname}`} ({obj.username})\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          </Form>\n        )}\n      </Modal>\n    )\n  }\n}\n\nexport default withTranslation()(Form.create({ name: 'updateRecord' })(ModalShareRecord))\n"]},"metadata":{},"sourceType":"module"}