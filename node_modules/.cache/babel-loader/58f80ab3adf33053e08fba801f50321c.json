{"ast":null,"code":"export * from './gumErrors';\n/**\n * The set of media types.\n * @enum {string}\n */\n\nexport var MEDIA_TYPE = {\n  AUDIO: 'audio',\n  PRESENTER: 'presenter',\n  VIDEO: 'video',\n  DESKTOP: 'desktop'\n};\n/**\n * The types of video tracks.\n * @enum {string}\n */\n\nexport var VIDEO_TYPE = {\n  CAMERA: 'camera',\n  DESKTOP: 'desktop'\n};\n/**\n * The supported remote video resolutions. The values are currently based on available simulcast layers.\n * @type {object}\n */\n\nexport var VIDEO_QUALITY_LEVELS = {\n  PERFECT: 1080,\n  HIGH: 720,\n  STANDARD: 360,\n  LOW: 180\n};\n/**\n * The types of media devices.\n * @type {object}\n */\n\nexport var MEDIA_DEVICE_TYPES = {\n  AUDIO_INPUT: 'audioinput',\n  AUDIO_OUTPUT: 'audiooutput',\n  VIDEO_INPUT: 'videoinput'\n};\nexport var webrtcKindToJitsiKindTranslator = {\n  audioinput: 'audioInput',\n  audiooutput: 'audioOutput',\n  videoinput: 'videoInput'\n};\nexport var TRANSCRIBER_DISPLAY_NAME = 'Transcriber';\nexport var LAYOUT_MODEL = {\n  SINGLE: 'SINGLE',\n  MULTI: 'MULTI',\n  SHARE_SLIDE: 'SHARE_SLIDE'\n};\nexport var resourceType = {\n  SLIDE: 'SLIDE',\n  FILES: 'FILES',\n  IMAGE: 'IMAGE',\n  PDF: 'PDF'\n};","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/constants/index.ts"],"names":["MEDIA_TYPE","AUDIO","PRESENTER","VIDEO","DESKTOP","VIDEO_TYPE","CAMERA","VIDEO_QUALITY_LEVELS","PERFECT","HIGH","STANDARD","LOW","MEDIA_DEVICE_TYPES","AUDIO_INPUT","AUDIO_OUTPUT","VIDEO_INPUT","webrtcKindToJitsiKindTranslator","audioinput","audiooutput","videoinput","TRANSCRIBER_DISPLAY_NAME","LAYOUT_MODEL","SINGLE","MULTI","SHARE_SLIDE","resourceType","SLIDE","FILES","IMAGE","PDF"],"mappings":"AAAA,cAAc,aAAd;AAEA;;;;;AAIA,OAAO,IAAMA,UAAU,GAAG;AACxBC,EAAAA,KAAK,EAAE,OADiB;AAExBC,EAAAA,SAAS,EAAE,WAFa;AAGxBC,EAAAA,KAAK,EAAE,OAHiB;AAIxBC,EAAAA,OAAO,EAAE;AAJe,CAAnB;AAOP;;;;;AAIA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,MAAM,EAAE,QADgB;AAExBF,EAAAA,OAAO,EAAE;AAFe,CAAnB;AAKP;;;;;AAIA,OAAO,IAAMG,oBAAoB,GAAG;AAClCC,EAAAA,OAAO,EAAE,IADyB;AAElCC,EAAAA,IAAI,EAAE,GAF4B;AAGlCC,EAAAA,QAAQ,EAAE,GAHwB;AAIlCC,EAAAA,GAAG,EAAE;AAJ6B,CAA7B;AAOP;;;;;AAIA,OAAO,IAAMC,kBAAkB,GAAG;AAChCC,EAAAA,WAAW,EAAE,YADmB;AAEhCC,EAAAA,YAAY,EAAE,aAFkB;AAGhCC,EAAAA,WAAW,EAAE;AAHmB,CAA3B;AAMP,OAAO,IAAMC,+BAA+B,GAAG;AAC7CC,EAAAA,UAAU,EAAE,YADiC;AAE7CC,EAAAA,WAAW,EAAE,aAFgC;AAG7CC,EAAAA,UAAU,EAAE;AAHiC,CAAxC;AAMP,OAAO,IAAMC,wBAAwB,GAAG,aAAjC;AAEP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,QADkB;AAE1BC,EAAAA,KAAK,EAAE,OAFmB;AAG1BC,EAAAA,WAAW,EAAE;AAHa,CAArB;AAMP,OAAO,IAAMC,YAAY,GAAG;AAC1BC,EAAAA,KAAK,EAAE,OADmB;AAE1BC,EAAAA,KAAK,EAAE,OAFmB;AAG1BC,EAAAA,KAAK,EAAE,OAHmB;AAI1BC,EAAAA,GAAG,EAAE;AAJqB,CAArB","sourcesContent":["export * from './gumErrors'\n\n/**\n * The set of media types.\n * @enum {string}\n */\nexport const MEDIA_TYPE = {\n  AUDIO: 'audio',\n  PRESENTER: 'presenter',\n  VIDEO: 'video',\n  DESKTOP: 'desktop'\n}\n\n/**\n * The types of video tracks.\n * @enum {string}\n */\nexport const VIDEO_TYPE = {\n  CAMERA: 'camera',\n  DESKTOP: 'desktop'\n}\n\n/**\n * The supported remote video resolutions. The values are currently based on available simulcast layers.\n * @type {object}\n */\nexport const VIDEO_QUALITY_LEVELS = {\n  PERFECT: 1080,\n  HIGH: 720,\n  STANDARD: 360,\n  LOW: 180\n}\n\n/**\n * The types of media devices.\n * @type {object}\n */\nexport const MEDIA_DEVICE_TYPES = {\n  AUDIO_INPUT: 'audioinput',\n  AUDIO_OUTPUT: 'audiooutput',\n  VIDEO_INPUT: 'videoinput'\n}\n\nexport const webrtcKindToJitsiKindTranslator = {\n  audioinput: 'audioInput',\n  audiooutput: 'audioOutput',\n  videoinput: 'videoInput'\n}\n\nexport const TRANSCRIBER_DISPLAY_NAME = 'Transcriber'\n\nexport const LAYOUT_MODEL = {\n  SINGLE: 'SINGLE',\n  MULTI: 'MULTI',\n  SHARE_SLIDE: 'SHARE_SLIDE'\n}\n\nexport const resourceType = {\n  SLIDE: 'SLIDE',\n  FILES: 'FILES',\n  IMAGE: 'IMAGE',\n  PDF: 'PDF'\n}\n"]},"metadata":{},"sourceType":"module"}