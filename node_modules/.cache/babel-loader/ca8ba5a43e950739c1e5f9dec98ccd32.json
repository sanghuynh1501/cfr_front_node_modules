{"ast":null,"code":"import _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { returnError, newNotification } from '@utils';\nimport { GUM_ERROR_CODES } from '../constants';\nvar defaultErrorMessageSettings = {\n  type: 'warning',\n  dismiss: {\n    duration: 0,\n    onScreen: true,\n    hover: true\n  }\n}; // *_: Media devices permission\n// *__: Audio\n\nexport function requestUserAudioAccess(callback) {\n  if (process.env.NODE_ENV === 'production') {\n    if (window.location.protocol !== 'https:') {\n      return newNotification('Please use https protocol for open this page.', 'danger');\n    }\n  }\n\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n  if (!navigator.getUserMedia) {\n    return newNotification('Uncompatible browser!', 'danger');\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: true,\n    video: false\n  }).then(function (_stream) {\n    return typeof callback === 'function' && callback(true);\n  }).catch(function (error) {\n    var title = 'Unknown error!';\n    var errorMessage = 'Unknown error!';\n\n    switch (error.name) {\n      case GUM_ERROR_CODES.PERMISSION_DENIED:\n      case GUM_ERROR_CODES.SECURITY:\n      case GUM_ERROR_CODES.NOT_ALLOWED:\n        {\n          title = 'Error obtaining microphone permission';\n          errorMessage = \"You haven't granted permission to use your microphone.\";\n          break;\n        }\n\n      case GUM_ERROR_CODES.DEVICES_NOTFOUND:\n      case GUM_ERROR_CODES.NOT_FOUND:\n        {\n          title = 'Failed to access your microphone';\n          errorMessage = error.message;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n\n    returnError('requestAudioAccess', {\n      error: error,\n      errorMessage: errorMessage\n    }, _objectSpread({\n      title: title\n    }, defaultErrorMessageSettings));\n    return typeof callback === 'function' && callback(false);\n  });\n} // *__: Camera\n\nexport function requestUserCameraAccess(callback) {\n  if (process.env.NODE_ENV === 'production') {\n    if (window.location.protocol !== 'https:') {\n      return newNotification('Please use https protocol for open this page.', 'danger');\n    }\n  }\n\n  navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n\n  if (!navigator.getUserMedia) {\n    return newNotification('Uncompatible browser!', 'danger');\n  }\n\n  return navigator.mediaDevices.getUserMedia({\n    audio: false,\n    video: true\n  }).then(function (_stream) {\n    return typeof callback === 'function' && callback(true);\n  }).catch(function (error) {\n    var title = 'Unknown error!';\n    var errorMessage = 'Unknown error!';\n\n    switch (error.name) {\n      case GUM_ERROR_CODES.PERMISSION_DENIED:\n      case GUM_ERROR_CODES.SECURITY:\n      case GUM_ERROR_CODES.NOT_ALLOWED:\n        {\n          title = 'Error obtaining camera permission';\n          errorMessage = \"You haven't granted permission to use your camera.\";\n          break;\n        }\n\n      case GUM_ERROR_CODES.DEVICES_NOTFOUND:\n      case GUM_ERROR_CODES.NOT_FOUND:\n        {\n          title = 'Failed to access your camera';\n          errorMessage = error.message;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n\n    returnError('requestCameraAccess', {\n      error: error,\n      errorMessage: errorMessage\n    }, _objectSpread({\n      title: title\n    }, defaultErrorMessageSettings));\n    return typeof callback === 'function' && callback(false);\n  });\n}","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/devices/device-permissions.jsx"],"names":["returnError","newNotification","GUM_ERROR_CODES","defaultErrorMessageSettings","type","dismiss","duration","onScreen","hover","requestUserAudioAccess","callback","process","env","NODE_ENV","window","location","protocol","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","video","then","_stream","catch","error","title","errorMessage","name","PERMISSION_DENIED","SECURITY","NOT_ALLOWED","DEVICES_NOTFOUND","NOT_FOUND","message","requestUserCameraAccess"],"mappings":"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","sourcesContent":["import { returnError, newNotification } from '@utils'\n\nimport { GUM_ERROR_CODES } from '../constants'\n\nconst defaultErrorMessageSettings = {\n  type: 'warning',\n  dismiss: { duration: 0, onScreen: true, hover: true }\n}\n\n// *_: Media devices permission\n\n// *__: Audio\n\nexport function requestUserAudioAccess(callback) {\n  if (process.env.NODE_ENV === 'production') {\n    if (window.location.protocol !== 'https:') {\n      return newNotification('Please use https protocol for open this page.', 'danger')\n    }\n  }\n\n  navigator.getUserMedia =\n    navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia\n\n  if (!navigator.getUserMedia) {\n    return newNotification('Uncompatible browser!', 'danger')\n  }\n\n  return navigator.mediaDevices\n    .getUserMedia({ audio: true, video: false })\n    .then(_stream => {\n      return typeof callback === 'function' && callback(true)\n    })\n    .catch(error => {\n      let title = 'Unknown error!'\n      let errorMessage = 'Unknown error!'\n      switch (error.name) {\n        case GUM_ERROR_CODES.PERMISSION_DENIED:\n        case GUM_ERROR_CODES.SECURITY:\n        case GUM_ERROR_CODES.NOT_ALLOWED: {\n          title = 'Error obtaining microphone permission'\n          errorMessage = `You haven't granted permission to use your microphone.`\n          break\n        }\n\n        case GUM_ERROR_CODES.DEVICES_NOTFOUND:\n        case GUM_ERROR_CODES.NOT_FOUND: {\n          title = 'Failed to access your microphone'\n          errorMessage = error.message\n          break\n        }\n\n        default: {\n          break\n        }\n      }\n\n      returnError('requestAudioAccess', { error, errorMessage }, { title, ...defaultErrorMessageSettings })\n      return typeof callback === 'function' && callback(false)\n    })\n}\n\n// *__: Camera\n\nexport function requestUserCameraAccess(callback) {\n  if (process.env.NODE_ENV === 'production') {\n    if (window.location.protocol !== 'https:') {\n      return newNotification('Please use https protocol for open this page.', 'danger')\n    }\n  }\n\n  navigator.getUserMedia =\n    navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia\n\n  if (!navigator.getUserMedia) {\n    return newNotification('Uncompatible browser!', 'danger')\n  }\n\n  return navigator.mediaDevices\n    .getUserMedia({ audio: false, video: true })\n    .then(_stream => {\n      return typeof callback === 'function' && callback(true)\n    })\n    .catch(error => {\n      let title = 'Unknown error!'\n      let errorMessage = 'Unknown error!'\n      switch (error.name) {\n        case GUM_ERROR_CODES.PERMISSION_DENIED:\n        case GUM_ERROR_CODES.SECURITY:\n        case GUM_ERROR_CODES.NOT_ALLOWED: {\n          title = 'Error obtaining camera permission'\n          errorMessage = `You haven't granted permission to use your camera.`\n          break\n        }\n\n        case GUM_ERROR_CODES.DEVICES_NOTFOUND:\n        case GUM_ERROR_CODES.NOT_FOUND: {\n          title = 'Failed to access your camera'\n          errorMessage = error.message\n          break\n        }\n\n        default: {\n          break\n        }\n      }\n\n      returnError('requestCameraAccess', { error, errorMessage }, { title, ...defaultErrorMessageSettings })\n      return typeof callback === 'function' && callback(false)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}