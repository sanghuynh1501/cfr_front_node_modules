{"ast":null,"code":"import _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport moment from 'moment';\nimport client, { M_SAVE_EVENT_CALENDAR } from '@graphql';\nimport { CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES } from '@constants';\nimport { returnError } from '@utils';\n\nvar validateEmail = function validateEmail(email) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nvar googleCalendarAPI = {\n  importScript: function importScript(url) {\n    var onload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    var script = document.createElement('script');\n    script.src = url;\n    document.head.appendChild(script);\n    script.onload = onload;\n  },\n  load: function load() {\n    var _this = this;\n\n    this.importScript('https://apis.google.com/js/platform.js', function () {\n      _this.importScript('https://apis.google.com/js/api.js', function () {\n        window.gapi.load('client:auth2', _this.initClient);\n      });\n    });\n  },\n  initClient: function initClient() {\n    window.gapi.client.init({\n      apiKey: API_KEY,\n      clientId: CLIENT_ID,\n      discoveryDocs: DISCOVERY_DOCS,\n      scope: 'profile'\n    }).then(function () {}, function (error) {});\n  },\n  getCurrentUserProfile: function getCurrentUserProfile() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              return _context.abrupt(\"return\", window.gapi.auth2.getAuthInstance().currentUser.get().getAuthResponse().id_token);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  },\n  signOutGoogle: function signOutGoogle() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      window.gapi.auth2.getAuthInstance().signOut();\n    }\n  },\n  signOption: function signOption() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var googleUser, options;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              googleUser = window.gapi.auth2.getAuthInstance().currentUser.get();\n              options = new window.gapi.auth2.SigninOptionsBuilder();\n\n              if (googleUser.hasGrantedScopes(SCOPES)) {\n                _context2.next = 7;\n                break;\n              }\n\n              options.setScope(SCOPES);\n              _context2.next = 7;\n              return googleUser.grant(options);\n\n            case 7:\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](0);\n              return _context2.abrupt(\"return\", false);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 9]]);\n    }))();\n  },\n  insertEvent: function insertEvent(data, callback) {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var emails, resource, request;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context3.next = 3;\n                break;\n              }\n\n              _context3.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              _context3.next = 5;\n              return _this2.signOption();\n\n            case 5:\n              emails = data.users.map(function (item) {\n                return {\n                  email: item.user.email\n                };\n              }).filter(function (item) {\n                return validateEmail(item.email);\n              });\n              resource = {\n                summary: data.name,\n                start: {\n                  dateTime: moment(data.startAt).format()\n                },\n                end: {\n                  dateTime: moment(data.startAt + data.duration).format()\n                },\n                attendees: emails,\n                reminders: {\n                  useDefault: false,\n                  overrides: [{\n                    method: 'email',\n                    minutes: 24 * 60\n                  }, {\n                    method: 'popup',\n                    minutes: 10\n                  }]\n                }\n              };\n              request = window.gapi.client.calendar.events.insert({\n                calendarId: 'primary',\n                resource: resource,\n                sendNotifications: true\n              });\n              request.execute(function (resp) {\n                if (resp) {\n                  client.mutate({\n                    mutation: M_SAVE_EVENT_CALENDAR,\n                    variables: {\n                      conferenceId: data._id || '',\n                      eventId: resp.id || '',\n                      htmlLink: resp.htmlLink || ''\n                    }\n                  }).then(function (_ref) {\n                    var saveEventCalendar = _ref.data.saveEventCalendar;\n\n                    if (saveEventCalendar) {\n                      callback(data._id);\n                    }\n                  }).catch(function (error) {\n                    returnError('Insert Event', {\n                      error: error,\n                      errorMessage: 'Thêm sự kiện thất bại. Vui lòng thử lại'\n                    }, {\n                      container: 'top-right'\n                    });\n                  });\n\n                  if (resp.htmlLink) {\n                    window.open(resp.htmlLink);\n                  }\n                }\n              });\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  inviteAttendee: function inviteAttendee(eventId, emails) {\n    var _this3 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var request, newEmails;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context4.next = 3;\n                break;\n              }\n\n              _context4.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              _context4.next = 5;\n              return _this3.signOption();\n\n            case 5:\n              request = window.gapi.client.calendar.events.get({\n                calendarId: 'primary',\n                eventId: eventId\n              });\n              newEmails = emails.filter(function (item) {\n                return validateEmail(item.email);\n              });\n              request.execute(function (resp) {\n                var attendees = resp.attendees;\n\n                if (attendees) {\n                  resp.attendees = [].concat(_toConsumableArray(attendees), _toConsumableArray(newEmails));\n                } else {\n                  resp.attendees = emails;\n                }\n\n                var request = window.gapi.client.calendar.events.update({\n                  calendarId: 'primary',\n                  eventId: eventId,\n                  resource: resp,\n                  sendNotifications: true\n                });\n                request.execute(function (event) {});\n              });\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }))();\n  },\n  updateEvent: function updateEvent(eventId, summary, startAt, duration) {\n    var _this4 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var request;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context5.next = 3;\n                break;\n              }\n\n              _context5.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              _context5.next = 5;\n              return _this4.signOption();\n\n            case 5:\n              request = window.gapi.client.calendar.events.get({\n                calendarId: 'primary',\n                eventId: eventId\n              });\n              request.execute(function (resp) {\n                resp.summary = summary;\n                resp.start.dateTime = moment(startAt).format();\n                resp.end.dateTime = moment(startAt + duration).format();\n                var request = window.gapi.client.calendar.events.update({\n                  calendarId: 'primary',\n                  eventId: eventId,\n                  resource: resp,\n                  sendNotifications: true\n                });\n                request.execute(function (event) {});\n              });\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }))();\n  },\n  deleteEvent: function deleteEvent(eventId) {\n    var _this5 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n      var request;\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context6.next = 3;\n                break;\n              }\n\n              _context6.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              _context6.next = 5;\n              return _this5.signOption();\n\n            case 5:\n              request = window.gapi.client.calendar.events.delete({\n                calendarId: 'primary',\n                eventId: eventId,\n                sendNotifications: true,\n                sendUpdates: 'all'\n              });\n              request.execute(function (event) {});\n\n            case 7:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }))();\n  },\n  getEvent: function getEvent(eventId) {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7() {\n      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n                _context7.next = 3;\n                break;\n              }\n\n              _context7.next = 3;\n              return window.gapi.auth2.getAuthInstance().signIn();\n\n            case 3:\n              if (!window.gapi.client.calendar) {\n                _context7.next = 5;\n                break;\n              }\n\n              return _context7.abrupt(\"return\", window.gapi.client.calendar.events.get({\n                calendarId: 'primary',\n                eventId: eventId\n              }));\n\n            case 5:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, _callee7);\n    }))();\n  }\n};\nexport default googleCalendarAPI;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/calendar/GoogleCalendarAPI.js"],"names":["moment","client","M_SAVE_EVENT_CALENDAR","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","returnError","validateEmail","email","re","test","String","toLowerCase","googleCalendarAPI","importScript","url","onload","script","document","createElement","src","head","appendChild","load","window","gapi","initClient","init","apiKey","clientId","discoveryDocs","scope","then","error","getCurrentUserProfile","auth2","getAuthInstance","isSignedIn","get","signIn","currentUser","getAuthResponse","id_token","signOutGoogle","signOut","signOption","googleUser","options","SigninOptionsBuilder","hasGrantedScopes","setScope","grant","insertEvent","data","callback","emails","users","map","item","user","filter","resource","summary","name","start","dateTime","startAt","format","end","duration","attendees","reminders","useDefault","overrides","method","minutes","request","calendar","events","insert","calendarId","sendNotifications","execute","resp","mutate","mutation","variables","conferenceId","_id","eventId","id","htmlLink","saveEventCalendar","catch","errorMessage","container","open","inviteAttendee","newEmails","update","event","updateEvent","deleteEvent","delete","sendUpdates","getEvent"],"mappings":"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","sourcesContent":["import moment from 'moment'\nimport client, { M_SAVE_EVENT_CALENDAR } from '@graphql'\nimport { CLIENT_ID, API_KEY, DISCOVERY_DOCS, SCOPES } from '@constants'\nimport { returnError } from '@utils'\n\n\nconst validateEmail = email => {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  return re.test(String(email).toLowerCase())\n}\n\nconst googleCalendarAPI = {\n\n  importScript(url, onload = () => { }) {\n    const script = document.createElement('script')\n    script.src = url\n    document.head.appendChild(script)\n    script.onload = onload\n  },\n\n  load() {\n    this.importScript('https://apis.google.com/js/platform.js', () => {\n      this.importScript('https://apis.google.com/js/api.js', () => {\n        window.gapi.load('client:auth2', this.initClient)\n      })\n    })\n  },\n\n  initClient() {\n    window.gapi.client\n      .init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: 'profile'\n      })\n      .then(\n        function () { },\n        function (error) {\n        }\n      )\n  },\n\n  async getCurrentUserProfile() {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    return window.gapi.auth2\n      .getAuthInstance()\n      .currentUser.get()\n      .getAuthResponse().id_token\n  },\n\n  signOutGoogle() {\n    if (window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      window.gapi.auth2.getAuthInstance().signOut()\n    }\n  },\n\n  async signOption() {\n    try {\n      const googleUser = window.gapi.auth2.getAuthInstance().currentUser.get()\n      const options = new window.gapi.auth2.SigninOptionsBuilder()\n      if (!googleUser.hasGrantedScopes(SCOPES)) {\n        options.setScope(SCOPES)\n\n        await googleUser.grant(options)\n      }\n    } catch (error) {\n      return false\n    }\n  },\n\n  async insertEvent(data, callback) {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    await this.signOption()\n\n    const emails = data.users\n      .map(item => {\n        return { email: item.user.email }\n      })\n      .filter(item => validateEmail(item.email))\n\n    const resource = {\n      summary: data.name,\n      start: {\n        dateTime: moment(data.startAt).format()\n      },\n      end: {\n        dateTime: moment(data.startAt + data.duration).format()\n      },\n      attendees: emails,\n      reminders: {\n        useDefault: false,\n        overrides: [\n          { method: 'email', minutes: 24 * 60 },\n          { method: 'popup', minutes: 10 }\n        ]\n      }\n    }\n\n    var request = window.gapi.client.calendar.events.insert({\n      calendarId: 'primary',\n      resource: resource,\n      sendNotifications: true\n    })\n\n    request.execute(function (resp) {\n      if (resp) {\n        client\n          .mutate({\n            mutation: M_SAVE_EVENT_CALENDAR,\n            variables: {\n              conferenceId: data._id || '',\n              eventId: resp.id || '',\n              htmlLink: resp.htmlLink || ''\n            }\n          })\n          .then(({ data: { saveEventCalendar } }) => {\n            if (saveEventCalendar) {\n              callback(data._id)\n            }\n          })\n          .catch(error => {\n            returnError(\n              'Insert Event',\n              {\n                error,\n                errorMessage: 'Thêm sự kiện thất bại. Vui lòng thử lại'\n              },\n              { container: 'top-right' }\n            )\n          })\n\n        if (resp.htmlLink) {\n          window.open(resp.htmlLink)\n        }\n      }\n    })\n  },\n\n  async inviteAttendee(eventId, emails) {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    await this.signOption()\n\n    var request = window.gapi.client.calendar.events.get({\n      calendarId: 'primary',\n      eventId: eventId\n    })\n\n    const newEmails = emails.filter(item => validateEmail(item.email))\n\n    request.execute(function (resp) {\n      const attendees = resp.attendees\n      if (attendees) {\n        resp.attendees = [...attendees, ...newEmails]\n      } else {\n        resp.attendees = emails\n      }\n\n      var request = window.gapi.client.calendar.events.update({\n        calendarId: 'primary',\n        eventId: eventId,\n        resource: resp,\n        sendNotifications: true\n      })\n\n      request.execute(function (event) { })\n    })\n  },\n\n  async updateEvent(eventId, summary, startAt, duration) {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    await this.signOption()\n\n    var request = window.gapi.client.calendar.events.get({\n      calendarId: 'primary',\n      eventId: eventId\n    })\n\n    request.execute(function (resp) {\n      resp.summary = summary\n      resp.start.dateTime = moment(startAt).format()\n      resp.end.dateTime = moment(startAt + duration).format()\n\n      var request = window.gapi.client.calendar.events.update({\n        calendarId: 'primary',\n        eventId: eventId,\n        resource: resp,\n        sendNotifications: true\n      })\n\n      request.execute(function (event) { })\n    })\n  },\n\n  async deleteEvent(eventId) {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    await this.signOption()\n\n    var request = window.gapi.client.calendar.events.delete({\n      calendarId: 'primary',\n      eventId: eventId,\n      sendNotifications: true,\n      sendUpdates: 'all'\n    })\n\n    request.execute(function (event) { })\n  },\n\n  async getEvent(eventId) {\n    if (!window.gapi.auth2.getAuthInstance().isSignedIn.get()) {\n      await window.gapi.auth2.getAuthInstance().signIn()\n    }\n\n    if (window.gapi.client.calendar) {\n      return window.gapi.client.calendar.events.get({\n        calendarId: 'primary',\n        eventId: eventId\n      })\n    }\n  }\n}\n\nexport default googleCalendarAPI\n"]},"metadata":{},"sourceType":"module"}