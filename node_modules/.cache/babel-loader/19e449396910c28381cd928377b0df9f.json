{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec, _class, _temp;\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport { client, Q_MY_INFO } from '@graphql';\nimport { returnError } from '@utils';\nvar AuthenRoutesWrapper = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(AuthenRoutesWrapper, _React$PureComponent);\n\n  var _super = _createSuper(AuthenRoutesWrapper);\n\n  function AuthenRoutesWrapper() {\n    var _this;\n\n    _classCallCheck(this, AuthenRoutesWrapper);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.queryMyInfo = function () {\n      return client.query({\n        query: Q_MY_INFO,\n        fetchPolicy: 'network-only'\n      }).then(function (_ref2) {\n        var myInfo = _ref2.data.myInfo;\n\n        if (myInfo) {\n          _this.props.globalState.setMyInfo(myInfo);\n        }\n      }).catch(function (error) {\n        return returnError('myInfo', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryInfoError')\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AuthenRoutesWrapper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.queryMyInfo();\n      this.props.globalState.setQueryMyInfo(this.queryMyInfo);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.children);\n    }\n  }]);\n\n  return AuthenRoutesWrapper;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default withTranslation()(AuthenRoutesWrapper);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/components/AuthenRoutes/Wrapper.jsx"],"names":["React","withTranslation","inject","observer","client","Q_MY_INFO","returnError","AuthenRoutesWrapper","stores","queryMyInfo","query","fetchPolicy","then","myInfo","data","props","globalState","setMyInfo","catch","error","errorMessage","i18n","t","setQueryMyInfo","children","PureComponent"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,UAAlC;AACA,SAASC,WAAT,QAA4B,QAA5B;IAIMC,mB,WAFLL,MAAM,CAAC;AAAA,MAAGM,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,gBACNL,Q;;;;;;;;;;;;;;;;UAECM,W,GAAc;AAAA,aACZL,MAAM,CACHM,KADH,CACS;AAAEA,QAAAA,KAAK,EAAEL,SAAT;AAAoBM,QAAAA,WAAW,EAAE;AAAjC,OADT,EAEGC,IAFH,CAEQ,iBAA0B;AAAA,YAAfC,MAAe,SAAvBC,IAAuB,CAAfD,MAAe;;AAC9B,YAAIA,MAAJ,EAAY;AACV,gBAAKE,KAAL,CAAWC,WAAX,CAAuBC,SAAvB,CAAiCJ,MAAjC;AACD;AACF,OANH,EAOGK,KAPH,CAOS,UAAAC,KAAK;AAAA,eACVb,WAAW,CAAC,QAAD,EAAW;AACpBa,UAAAA,KAAK,EAALA,KADoB;AAEpBC,UAAAA,YAAY,EAAE,MAAKL,KAAL,CAAWM,IAAX,CAAgBC,CAAhB,CAAkB,6BAAlB;AAFM,SAAX,CADD;AAAA,OAPd,CADY;AAAA,K;;;;;;;wCAeM;AAClB,WAAKb,WAAL;AACA,WAAKM,KAAL,CAAWC,WAAX,CAAuBO,cAAvB,CAAsC,KAAKd,WAA3C;AACD;;;6BAEQ;AACP,0BAAO,0CAAG,KAAKM,KAAL,CAAWS,QAAd,CAAP;AACD;;;;EAvB+BxB,KAAK,CAACyB,a;AA0BxC,eAAexB,eAAe,GAAGM,mBAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { inject, observer } from 'mobx-react'\n\nimport { client, Q_MY_INFO } from '@graphql'\nimport { returnError } from '@utils'\n\n@inject(({ stores }) => stores)\n@observer\nclass AuthenRoutesWrapper extends React.PureComponent {\n  queryMyInfo = () =>\n    client\n      .query({ query: Q_MY_INFO, fetchPolicy: 'network-only' })\n      .then(({ data: { myInfo } }) => {\n        if (myInfo) {\n          this.props.globalState.setMyInfo(myInfo)\n        }\n      })\n      .catch(error =>\n        returnError('myInfo', {\n          error,\n          errorMessage: this.props.i18n.t('notification.queryInfoError')\n        })\n      )\n\n  componentDidMount() {\n    this.queryMyInfo()\n    this.props.globalState.setQueryMyInfo(this.queryMyInfo)\n  }\n\n  render() {\n    return <>{this.props.children}</>\n  }\n}\n\nexport default withTranslation()(AuthenRoutesWrapper)\n"]},"metadata":{},"sourceType":"module"}