{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/popover/style\";\nimport _Popover from \"antd/es/popover\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/users/VerifyUserList.jsx\";\n\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router';\nimport moment from 'moment';\nimport ModalDelete from '../components/ModalDelete';\nimport SelectColumnForm from './SelectColumnForm';\nimport { ROLE_TYPE } from '@constants';\nimport client, { M_VERIFY_USERS } from '@graphql';\nimport { newNotification, returnError, parseError } from '@utils';\nvar VerifyUserList = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), withRouter(_class = _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(VerifyUserList, _Component);\n\n  var _super = _createSuper(VerifyUserList);\n\n  function VerifyUserList(props) {\n    var _this;\n\n    _classCallCheck(this, VerifyUserList);\n\n    _this = _super.call(this, props);\n\n    _this.onSelectChange = function (selectedRowKeys) {\n      _this.setState({\n        selectedRowKeys: selectedRowKeys\n      });\n    };\n\n    _this.mutationVerifyUsers = function (userIds) {\n      var refetchData = _this.props.refetchData;\n      client.mutate({\n        mutation: M_VERIFY_USERS,\n        variables: {\n          userIds: userIds\n        }\n      }).then(function (_ref2) {\n        var verifyUsers = _ref2.data.verifyUsers;\n\n        if (!verifyUsers) {\n          throw new Error('notification.verifyUserError');\n        }\n\n        refetchData('NOT_VERIFIED');\n        return newNotification(_this.props.i18n.t('notification.verifyUserSuccess'), 'success');\n      }).catch(function (error) {\n        return returnError('deleteUsers', {\n          error: error,\n          errorMessage: _this.props.i18n.t(parseError(error))\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.state = {\n      columnsToShow: ['name', 'username', 'email', 'createdAt'],\n      visiblePopover: false,\n      filterKeys: '',\n      roles: [],\n      roleToFilter: '',\n      expandInput: false,\n      expandAdvancedSearch: false,\n      selectedRowKeys: []\n    };\n    _this.inputSearchRef = React.createRef();\n    _this.roleSelectRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(VerifyUserList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          users = _this$props.users,\n          mutationDeleteUsers = _this$props.mutationDeleteUsers,\n          i18n = _this$props.i18n;\n      var _this$state = this.state,\n          columnsToShow = _this$state.columnsToShow,\n          visiblePopover = _this$state.visiblePopover;\n      var rowSelection = {\n        selectedRowKeys: this.state.selectedRowKeys,\n        onChange: this.onSelectChange\n      };\n      var rowData = users.map(function (user) {\n        var _user$profiles, _user$profiles$find;\n\n        var role = user === null || user === void 0 ? void 0 : (_user$profiles = user.profiles) === null || _user$profiles === void 0 ? void 0 : (_user$profiles$find = _user$profiles.find(function (profile) {\n          var _profile$role;\n\n          return (profile === null || profile === void 0 ? void 0 : (_profile$role = profile.role) === null || _profile$role === void 0 ? void 0 : _profile$role.type) === ROLE_TYPE.ROLE_APP;\n        })) === null || _user$profiles$find === void 0 ? void 0 : _user$profiles$find.role;\n        return _objectSpread({}, user, {\n          key: user._id,\n          roleCode: role === null || role === void 0 ? void 0 : role.code,\n          role: role === null || role === void 0 ? void 0 : role.name\n        });\n      });\n      var columns = [{\n        title: i18n.t('user.name'),\n        sorter: function sorter(a, b) {\n          return \"\".concat(a.firstname, \" \").concat(a.lastname).localeCompare(\"\".concat(b.firstname, \" \").concat(b.lastname));\n        },\n        width: 200,\n        render: function render(user) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"clickableSpan\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 11\n            }\n          }, \"\".concat(user.firstname, \" \").concat(user.lastname));\n        }\n      }, {\n        title: 'Email',\n        dataIndex: 'email',\n        sorter: function sorter(a, b) {\n          return a.email.localeCompare(b.email);\n        },\n        width: 300\n      }, {\n        title: i18n.t('user.account'),\n        dataIndex: 'username',\n        sorter: function sorter(a, b) {\n          return a.username.localeCompare(b.username);\n        },\n        width: 200\n      }, {\n        title: i18n.t('user.role'),\n        dataIndex: 'role',\n        sorter: function sorter(a, b) {\n          return a.role.localeCompare(b.role);\n        }\n      }, {\n        title: i18n.t('user.createdAt'),\n        dataIndex: 'createdAt',\n        render: function render(createdAt) {\n          return moment(createdAt).format('MMM Do YYYY, hh:mm a');\n        }\n      }, {\n        title: '',\n        key: 'x',\n        render: function render(e, i) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            className: \"columnBtnHolder\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(_Button, {\n            style: {\n              margin: '0 12px 0 0'\n            },\n            type: \"primary\",\n            className: \"btn-create\",\n            onClick: function onClick() {\n              return _this2.mutationVerifyUsers([i._id]);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }\n          }, i18n.t('user.verify')), /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              visibility: 'visible'\n            },\n            className: \"columnBtnHolder\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(ModalDelete, {\n            itemToDelete: i,\n            handleDeleteItem: mutationDeleteUsers,\n            title: i18n.t('user.deleteUser'),\n            textButtonDelete: i18n.t('common.delete'),\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }\n          })));\n        }\n      }];\n\n      var handleVisiblePopoverChange = function handleVisiblePopoverChange(visiblePopover) {\n        _this2.setState({\n          visiblePopover: visiblePopover\n        });\n      };\n\n      var handleSelectColumn = function handleSelectColumn(columnsToShow) {\n        _this2.setState({\n          columnsToShow: columnsToShow\n        });\n      };\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }\n      }, i18n.t('user.selected'), \" \", this.state.selectedRowKeys.length, \" \", i18n.t('user.users')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        disabled: this.state.selectedRowKeys.length === 0,\n        onClick: function onClick() {\n          if (_this2.state.selectedRowKeys.length > 0) {\n            _this2.mutationVerifyUsers(_this2.state.selectedRowKeys);\n\n            _this2.setState({\n              selectedRowKeys: []\n            });\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }\n      }, i18n.t('user.verify'))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tableWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Popover, {\n        className: \"selectColumnFormPopover\",\n        placement: \"bottomRight\",\n        visible: visiblePopover,\n        onVisibleChange: handleVisiblePopoverChange,\n        content: /*#__PURE__*/React.createElement(SelectColumnForm, {\n          handleVisiblePopoverChange: handleVisiblePopoverChange,\n          handleSelectColumn: handleSelectColumn,\n          allValues: columns,\n          initValues: columnsToShow,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }\n        }),\n        title: null,\n        trigger: \"click\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"setting\",\n        theme: \"filled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(_Table, {\n        className: \"common-table\",\n        rowSelection: rowSelection,\n        dataSource: rowData,\n        columns: columns.filter(function (e) {\n          return columnsToShow.includes(e.dataIndex) || e.dataIndex === undefined;\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return VerifyUserList;\n}(Component), _temp)) || _class) || _class) || _class);\nexport default withTranslation()(VerifyUserList);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/users/VerifyUserList.jsx"],"names":["React","Component","withTranslation","inject","observer","withRouter","moment","ModalDelete","SelectColumnForm","ROLE_TYPE","client","M_VERIFY_USERS","newNotification","returnError","parseError","VerifyUserList","stores","props","onSelectChange","selectedRowKeys","setState","mutationVerifyUsers","userIds","refetchData","mutate","mutation","variables","then","verifyUsers","data","Error","i18n","t","catch","error","errorMessage","container","state","columnsToShow","visiblePopover","filterKeys","roles","roleToFilter","expandInput","expandAdvancedSearch","inputSearchRef","createRef","roleSelectRef","users","mutationDeleteUsers","rowSelection","onChange","rowData","map","user","role","profiles","find","profile","type","ROLE_APP","key","_id","roleCode","code","name","columns","title","sorter","a","b","firstname","lastname","localeCompare","width","render","dataIndex","email","username","createdAt","format","e","i","margin","visibility","handleVisiblePopoverChange","handleSelectColumn","length","filter","includes","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { inject, observer } from 'mobx-react'\nimport { Table, Icon, Popover, Button } from 'antd'\nimport { withRouter } from 'react-router'\nimport moment from 'moment'\n\n\nimport ModalDelete from '../components/ModalDelete'\nimport SelectColumnForm from './SelectColumnForm'\nimport { ROLE_TYPE } from '@constants'\nimport client, { M_VERIFY_USERS } from '@graphql'\nimport { newNotification, returnError, parseError } from '@utils'\n\n@withRouter\n@inject(({ stores }) => stores)\n@observer\nclass VerifyUserList extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      columnsToShow: ['name', 'username', 'email', 'createdAt'],\n      visiblePopover: false,\n      filterKeys: '',\n      roles: [],\n      roleToFilter: '',\n      expandInput: false,\n      expandAdvancedSearch: false,\n      selectedRowKeys: []\n    }\n    this.inputSearchRef = React.createRef()\n    this.roleSelectRef = React.createRef()\n  }\n\n  onSelectChange = selectedRowKeys => {\n    this.setState({ selectedRowKeys })\n  };\n\n\n\n  mutationVerifyUsers = (userIds) => {\n    const { refetchData } = this.props\n    client\n      .mutate({\n        mutation: M_VERIFY_USERS,\n        variables: {\n          userIds: userIds\n        }\n      })\n      .then(({ data: { verifyUsers } }) => {\n        if (!verifyUsers) {\n          throw new Error('notification.verifyUserError')\n        }\n\n        refetchData('NOT_VERIFIED')\n\n        return newNotification(this.props.i18n.t('notification.verifyUserSuccess'), 'success')\n      })\n      .catch(error =>\n        returnError(\n          'deleteUsers',\n          { error, errorMessage: this.props.i18n.t(parseError(error)) },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  render() {\n    const {\n      users,\n      mutationDeleteUsers,\n      i18n\n    } = this.props\n\n    const {\n      state: { columnsToShow, visiblePopover }\n    } = this\n\n    const rowSelection = {\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: this.onSelectChange,\n    }\n\n\n    let rowData = users\n      .map(user => {\n        const role = user?.profiles?.find(profile => profile?.role?.type === ROLE_TYPE.ROLE_APP)?.role\n        return {\n          ...user,\n          key: user._id,\n          roleCode: role?.code,\n          role: role?.name\n        }\n      })\n\n    const columns = [\n      {\n        title: i18n.t('user.name'),\n        sorter: (a, b) => {\n          return `${a.firstname} ${a.lastname}`.localeCompare(`${b.firstname} ${b.lastname}`)\n        },\n        width: 200,\n        render: user => (\n          <span className='clickableSpan'>\n            {`${user.firstname} ${user.lastname}`}\n          </span>\n        )\n      },\n      {\n        title: 'Email',\n        dataIndex: 'email',\n        sorter: (a, b) => a.email.localeCompare(b.email),\n        width: 300\n      },\n      {\n        title: i18n.t('user.account'),\n        dataIndex: 'username',\n        sorter: (a, b) => a.username.localeCompare(b.username),\n        width: 200\n      },\n      {\n        title: i18n.t('user.role'),\n        dataIndex: 'role',\n        sorter: (a, b) => a.role.localeCompare(b.role)\n      },\n      {\n        title: i18n.t('user.createdAt'),\n        dataIndex: 'createdAt',\n        render: createdAt => moment(createdAt).format('MMM Do YYYY, hh:mm a')\n      },\n      {\n        title: '',\n        key: 'x',\n        render: (e, i) => (\n          <span className='columnBtnHolder'>\n            <Button\n              style={{ margin: '0 12px 0 0' }}\n              type='primary'\n              className='btn-create'\n              onClick={() => this.mutationVerifyUsers([i._id])}\n            >\n              {i18n.t('user.verify')}\n            </Button>\n            <span\n              style={{\n                visibility: 'visible'\n              }}\n              className='columnBtnHolder'\n            >\n              <ModalDelete\n                itemToDelete={i}\n                handleDeleteItem={mutationDeleteUsers}\n                title={i18n.t('user.deleteUser')}\n                textButtonDelete={i18n.t('common.delete')}\n              />\n            </span>\n          </span>\n        )\n      }\n    ]\n\n    const handleVisiblePopoverChange = visiblePopover => {\n      this.setState({ visiblePopover })\n    }\n\n    const handleSelectColumn = columnsToShow => {\n      this.setState({ columnsToShow })\n    }\n\n    return (\n      <>\n        <div className='wrapper-select'>\n          <p>{i18n.t('user.selected')} {this.state.selectedRowKeys.length} {i18n.t('user.users')}</p>\n          <Button\n            type='primary'\n            disabled={this.state.selectedRowKeys.length === 0}\n            onClick={() => {\n              if (this.state.selectedRowKeys.length > 0) {\n                this.mutationVerifyUsers(this.state.selectedRowKeys)\n                this.setState({ selectedRowKeys: [] })\n              }\n            }}\n          >\n            {i18n.t('user.verify')}\n          </Button>\n        </div>\n        <div className='tableWrapper'>\n          <Popover\n            className='selectColumnFormPopover'\n            placement='bottomRight'\n            visible={visiblePopover}\n            onVisibleChange={handleVisiblePopoverChange}\n            content={\n              <SelectColumnForm\n                handleVisiblePopoverChange={handleVisiblePopoverChange}\n                handleSelectColumn={handleSelectColumn}\n                allValues={columns}\n                initValues={columnsToShow}\n              />\n            }\n            title={null}\n            trigger='click'\n          >\n            <Icon type='setting' theme='filled' />\n          </Popover>\n\n          <Table\n            className='common-table'\n            rowSelection={rowSelection}\n            dataSource={rowData}\n            columns={columns.filter(e => columnsToShow.includes(e.dataIndex) || e.dataIndex === undefined)}\n          />\n        </div>\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(VerifyUserList)\n"]},"metadata":{},"sourceType":"module"}