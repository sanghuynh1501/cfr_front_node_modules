{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/webinars/components/ModalCreateWebinar.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, M_CREATE_WEBINAR_TEMPLATE } from '@graphql';\nimport { returnError, newNotification } from '@utils';\n\nvar ModalCreateWebinar = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalCreateWebinar, _React$PureComponent);\n\n  var _super = _createSuper(ModalCreateWebinar);\n\n  function ModalCreateWebinar() {\n    var _this;\n\n    _classCallCheck(this, ModalCreateWebinar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visible: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      var webinar = _this.props.webinar;\n      client.mutate({\n        mutation: M_CREATE_WEBINAR_TEMPLATE,\n        variables: {\n          newWebinarTemplate: {\n            name: _this.refs['name-template'].state.value || 'New template',\n            defaultParticipantRole: webinar.role,\n            hostVideo: webinar.hostVideo,\n            panelistsVideo: webinar.panelistsVideo,\n            QnA: webinar.QnA,\n            practiceSession: webinar.practiceSession,\n            authenticatedOnly: webinar.authenticatedOnly,\n            automaticallyRecord: webinar.automaticallyRecord\n          }\n        }\n      }).then(function (_ref) {\n        var createWebinarTeamplate = _ref.data.createWebinarTeamplate;\n\n        if (createWebinarTeamplate) {\n          _this.props.queryWebinarTemplates();\n\n          newNotification('Create webinar template success', 'success', {\n            container: 'top-right'\n          });\n\n          _this.handleCancel();\n        }\n      }).catch(function (error) {\n        return returnError('Get Link', {\n          error: error,\n          errorMessage: 'looix'\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalCreateWebinar, [{\n    key: \"render\",\n    value: function render() {\n      var i18n = this.props.i18n;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn-save-template\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, i18n.t('saveAs')), /*#__PURE__*/React.createElement(_Modal, {\n        title: i18n.t('saveAs'),\n        className: \"common-modal\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        okText: \"Save as Template\",\n        destroyOnClose: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      }, \"This template will copy all settings from the original Webinar except for Panelists, Alternative host, and Time.\"), /*#__PURE__*/React.createElement(_Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Col, {\n        span: 8,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, i18n.t('templateName')), /*#__PURE__*/React.createElement(_Col, {\n        span: 16,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Input, {\n        ref: \"name-template\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }\n      })))));\n    }\n  }]);\n\n  return ModalCreateWebinar;\n}(React.PureComponent);\n\nexport default withTranslation()(ModalCreateWebinar);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/webinars/components/ModalCreateWebinar.jsx"],"names":["React","withTranslation","client","M_CREATE_WEBINAR_TEMPLATE","returnError","newNotification","ModalCreateWebinar","state","visible","showModal","setState","handleOk","e","webinar","props","mutate","mutation","variables","newWebinarTemplate","name","refs","value","defaultParticipantRole","role","hostVideo","panelistsVideo","QnA","practiceSession","authenticatedOnly","automaticallyRecord","then","createWebinarTeamplate","data","queryWebinarTemplates","container","handleCancel","catch","error","errorMessage","i18n","t","PureComponent"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAGA,SAASC,MAAT,EAAiBC,yBAAjB,QAAkD,UAAlD;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,QAA7C;;IAEMC,kB;;;;;;;;;;;;;;;UACJC,K,GAAQ;AAAEC,MAAAA,OAAO,EAAE;AAAX,K;;UAERC,S,GAAY,YAAM;AAChB,YAAKC,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;UAEDG,Q,GAAW,UAAAC,CAAC,EAAI;AAAA,UACNC,OADM,GACM,MAAKC,KADX,CACND,OADM;AAEdX,MAAAA,MAAM,CACHa,MADH,CACU;AACNC,QAAAA,QAAQ,EAAEb,yBADJ;AAENc,QAAAA,SAAS,EAAE;AACTC,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,IAAI,EAAE,MAAKC,IAAL,CAAU,eAAV,EAA2Bb,KAA3B,CAAiCc,KAAjC,IAA0C,cAD9B;AAElBC,YAAAA,sBAAsB,EAAET,OAAO,CAACU,IAFd;AAGlBC,YAAAA,SAAS,EAAEX,OAAO,CAACW,SAHD;AAIlBC,YAAAA,cAAc,EAAEZ,OAAO,CAACY,cAJN;AAKlBC,YAAAA,GAAG,EAAEb,OAAO,CAACa,GALK;AAMlBC,YAAAA,eAAe,EAAEd,OAAO,CAACc,eANP;AAOlBC,YAAAA,iBAAiB,EAAEf,OAAO,CAACe,iBAPT;AAQlBC,YAAAA,mBAAmB,EAAEhB,OAAO,CAACgB;AARX;AADX;AAFL,OADV,EAgBGC,IAhBH,CAgBQ,gBAA0C;AAAA,YAA/BC,sBAA+B,QAAvCC,IAAuC,CAA/BD,sBAA+B;;AAC9C,YAAIA,sBAAJ,EAA4B;AAC1B,gBAAKjB,KAAL,CAAWmB,qBAAX;;AACA5B,UAAAA,eAAe,CAAC,iCAAD,EAAoC,SAApC,EAA+C;AAAE6B,YAAAA,SAAS,EAAE;AAAb,WAA/C,CAAf;;AACA,gBAAKC,YAAL;AACD;AACF,OAtBH,EAuBGC,KAvBH,CAuBS,UAAAC,KAAK;AAAA,eACVjC,WAAW,CACT,UADS,EAET;AACEiC,UAAAA,KAAK,EAALA,KADF;AAEEC,UAAAA,YAAY,EAAE;AAFhB,SAFS,EAMT;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SANS,CADD;AAAA,OAvBd;AAiCD,K;;UAEDC,Y,GAAe,UAAAvB,CAAC,EAAI;AAClB,YAAKF,QAAL,CAAc;AACZF,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD,K;;;;;;;6BAEQ;AAAA,UAEL+B,IAFK,GAGH,KAAKzB,KAHF,CAELyB,IAFK;AAIP,0BACE,uDACE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAE,KAAK9B,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG8B,IAAI,CAACC,CAAL,CAAO,QAAP,CADH,CADF,eAIE;AACE,QAAA,KAAK,EAAED,IAAI,CAACC,CAAL,CAAO,QAAP,CADT;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,OAAO,EAAE,KAAKjC,KAAL,CAAWC,OAHtB;AAIE,QAAA,IAAI,EAAE,KAAKG,QAJb;AAKE,QAAA,QAAQ,EAAE,KAAKwB,YALjB;AAME,QAAA,MAAM,EAAC,kBANT;AAOE,QAAA,cAAc,MAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4HATF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,IAAI,EAAE,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAeI,IAAI,CAACC,CAAL,CAAO,cAAP,CAAf,CADF,eAEE;AAAK,QAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAe;AAAO,QAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAf,CAFF,CAXF,CAJF,CADF;AAuBD;;;;EA/E8BxC,KAAK,CAACyC,a;;AAkFvC,eAAexC,eAAe,GAAGK,kBAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Modal, Row, Col, Input } from 'antd'\n\nimport { client, M_CREATE_WEBINAR_TEMPLATE } from '@graphql'\nimport { returnError, newNotification } from '@utils'\n\nclass ModalCreateWebinar extends React.PureComponent {\n  state = { visible: false }\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n    })\n  }\n\n  handleOk = e => {\n    const { webinar } = this.props\n    client\n      .mutate({\n        mutation: M_CREATE_WEBINAR_TEMPLATE,\n        variables: {\n          newWebinarTemplate: {\n            name: this.refs['name-template'].state.value || 'New template',\n            defaultParticipantRole: webinar.role,\n            hostVideo: webinar.hostVideo,\n            panelistsVideo: webinar.panelistsVideo,\n            QnA: webinar.QnA,\n            practiceSession: webinar.practiceSession,\n            authenticatedOnly: webinar.authenticatedOnly,\n            automaticallyRecord: webinar.automaticallyRecord\n          }\n        }\n      })\n      .then(({ data: { createWebinarTeamplate } }) => {\n        if (createWebinarTeamplate) {\n          this.props.queryWebinarTemplates()\n          newNotification('Create webinar template success', 'success', { container: 'top-right' })\n          this.handleCancel()\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Get Link',\n          {\n            error,\n            errorMessage: 'looix'\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false,\n    })\n  }\n\n  render() {\n    const {\n      i18n\n    } = this.props\n    return (\n      <>\n        <button className='btn-save-template' onClick={this.showModal}>\n          {i18n.t('saveAs')}\n        </button>\n        <Modal\n          title={i18n.t('saveAs')}\n          className='common-modal'\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          okText='Save as Template'\n          destroyOnClose\n        >\n          <p>This template will copy all settings from the original Webinar\n            except for Panelists, Alternative host, and Time.</p>\n          <Row>\n            <Col span={8}>{i18n.t('templateName')}</Col>\n            <Col span={16}><Input ref='name-template' /></Col>\n          </Row>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(ModalCreateWebinar)"]},"metadata":{},"sourceType":"module"}