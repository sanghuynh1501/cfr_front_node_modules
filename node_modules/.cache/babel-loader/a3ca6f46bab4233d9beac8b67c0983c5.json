{"ast":null,"code":"import \"antd/es/breadcrumb/style\";\nimport _Breadcrumb from \"antd/es/breadcrumb\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/users/index.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, Q_USERS, M_DELETE_USERS } from '@graphql';\nimport { returnError, newNotification, hasPermission, isSupperAdmin } from '@utils';\nimport VerifyUserList from './VerifyUserList';\nimport ListUsers from './ListUsers';\nimport './index.less';\nimport { withRouter } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport { PER } from '@constants';\nvar TabPane = _Tabs.TabPane;\nvar User = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), withRouter(_class = _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(User, _React$PureComponent);\n\n  var _super = _createSuper(User);\n\n  function User() {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selectUser: '',\n      verifiedUsers: [],\n      notVerifiedUsers: [],\n      breadcrumbPath: ['All Users'],\n      inputSearch: {}\n    };\n\n    _this.queryUsersVerified = function (inputSearch) {\n      client.query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          inputSearch: _objectSpread({}, inputSearch, {\n            type: 'VERIFIED'\n          })\n        }\n      }).then(function (_ref2) {\n        var users = _ref2.data.users;\n\n        _this.setState(function (_preState) {\n          return {\n            verifiedUsers: users\n          };\n        });\n      }).catch(function (error) {\n        return returnError('users', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryUserError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.queryUsersNotVerified = function () {\n      client.query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          inputSearch: {\n            type: 'NOT_VERIFIED'\n          }\n        }\n      }).then(function (_ref3) {\n        var users = _ref3.data.users;\n\n        _this.setState(function (_preState) {\n          return {\n            notVerifiedUsers: users\n          };\n        });\n      }).catch(function (error) {\n        return returnError('users', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryUserError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.mutationDeleteUsers = function (_id) {\n      client.mutate({\n        mutation: M_DELETE_USERS,\n        variables: {\n          userIds: [_id]\n        }\n      }).then(function (_ref4) {\n        var deleteUser = _ref4.data.deleteUser;\n\n        if (deleteUser) {\n          _this.queryUsersVerified(_this.state.inputSearch);\n\n          _this.queryUsersNotVerified();\n\n          return newNotification(_this.props.i18n.t('notification.deleteUserSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('deleteUsers', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.deleteUserError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleSelectUser = function (user) {\n      _this.props.history.push(\"/userInfo/\".concat(user._id));\n    };\n\n    _this.handleChangeTab = function (key) {\n      switch (key) {\n        case 'VERIFIED':\n          {\n            _this.queryUsersVerified(_this.state.inputSearch);\n\n            break;\n          }\n\n        case 'NOT_VERIFIED':\n          {\n            _this.queryUsersNotVerified();\n\n            break;\n          }\n\n        default:\n      }\n    };\n\n    _this.setInputSearch = function (input) {\n      var callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n\n      _this.setState({\n        inputSearch: input\n      }, callback);\n    };\n\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          myInfo = _this$props.globalState.myInfo,\n          history = _this$props.history;\n      var profiles = myInfo === null || myInfo === void 0 ? void 0 : myInfo.profiles;\n      var isAllowViewListUser = isSupperAdmin(profiles) || hasPermission(profiles, PER.P_USER_VIEW);\n\n      if (!isAllowViewListUser) {\n        history.push('/');\n      }\n\n      this.queryUsersVerified(this.state.inputSearch);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var breadcrumbPath = this.state.breadcrumbPath,\n          _this$props2 = this.props,\n          myInfo = _this$props2.myInfo,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, breadcrumbPath.length !== 1 && /*#__PURE__*/React.createElement(_Breadcrumb, {\n        separator: \">\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }, breadcrumbPath.map(function (e, i) {\n        return /*#__PURE__*/React.createElement(_Breadcrumb.Item, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }\n        }, e === 'All Users' ? /*#__PURE__*/React.createElement(\"span\", {\n          className: \"clickableSpan\",\n          onClick: _this2.backToDefault,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }\n        }, _this2.props.i18n.t('user.allUsers')) : /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 21\n          }\n        }, i18n.t(e)));\n      })), /*#__PURE__*/React.createElement(_Tabs, {\n        className: \"conferenceTabs\",\n        onChange: this.handleChangeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tab: i18n.t('user.userList'),\n        key: \"VERIFIED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(ListUsers, {\n        setInputSearch: this.setInputSearch,\n        inputSearch: this.state.inputSearch,\n        queryUsersVerified: this.queryUsersVerified,\n        myInfo: myInfo,\n        users: this.state.verifiedUsers,\n        handleSelectUser: this.handleSelectUser,\n        mutationDeleteUsers: this.mutationDeleteUsers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: i18n.t('user.waitingList'),\n        key: \"NOT_VERIFIED\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(VerifyUserList, {\n        myInfo: myInfo,\n        users: this.state.notVerifiedUsers,\n        mutationDeleteUsers: this.mutationDeleteUsers,\n        refetchData: this.queryUsersNotVerified,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return User;\n}(React.PureComponent), _temp)) || _class) || _class) || _class);\nexport default withTranslation()(User);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/users/index.jsx"],"names":["React","withTranslation","client","Q_USERS","M_DELETE_USERS","returnError","newNotification","hasPermission","isSupperAdmin","VerifyUserList","ListUsers","withRouter","inject","observer","PER","TabPane","User","stores","state","selectUser","verifiedUsers","notVerifiedUsers","breadcrumbPath","inputSearch","queryUsersVerified","query","fetchPolicy","variables","type","then","users","data","setState","_preState","catch","error","errorMessage","props","i18n","t","container","queryUsersNotVerified","mutationDeleteUsers","_id","mutate","mutation","userIds","deleteUser","handleSelectUser","user","history","push","handleChangeTab","key","setInputSearch","input","callback","myInfo","globalState","profiles","isAllowViewListUser","P_USER_VIEW","length","map","e","i","backToDefault","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Breadcrumb, Tabs } from 'antd'\n\nimport {\n  client, Q_USERS,\n  M_DELETE_USERS\n} from '@graphql'\n\nimport { returnError, newNotification, hasPermission, isSupperAdmin } from '@utils'\nimport VerifyUserList from './VerifyUserList'\n\nimport ListUsers from './ListUsers'\nimport './index.less'\nimport { withRouter } from 'react-router-dom'\nimport { inject, observer } from 'mobx-react'\nimport { PER } from '@constants'\n\n\nconst { TabPane } = Tabs\n\n@withRouter\n@inject(({ stores }) => stores)\n@observer\nclass User extends React.PureComponent {\n  state = {\n    selectUser: '',\n    verifiedUsers: [],\n    notVerifiedUsers: [],\n    breadcrumbPath: ['All Users'],\n    inputSearch: {}\n  }\n\n  queryUsersVerified = (inputSearch) => {\n    client\n      .query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          inputSearch: {\n            ...inputSearch,\n            type: 'VERIFIED'\n          }\n        }\n      })\n      .then(({ data: { users } }) => {\n        this.setState(_preState => ({\n          verifiedUsers: users\n        }))\n      })\n      .catch(error =>\n        returnError(\n          'users',\n          { error, errorMessage: this.props.i18n.t('notification.queryUserError') },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  queryUsersNotVerified = () => {\n    client\n      .query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          inputSearch: {\n            type: 'NOT_VERIFIED'\n          }\n        }\n      })\n      .then(({ data: { users } }) => {\n        this.setState(_preState => ({\n          notVerifiedUsers: users\n        }))\n      })\n      .catch(error =>\n        returnError(\n          'users',\n          { error, errorMessage: this.props.i18n.t('notification.queryUserError') },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n\n  mutationDeleteUsers = (_id) => {\n    client\n      .mutate({\n        mutation: M_DELETE_USERS,\n        variables: {\n          userIds: [_id]\n        }\n      })\n      .then(({ data: { deleteUser } }) => {\n        if (deleteUser) {\n          this.queryUsersVerified(this.state.inputSearch)\n          this.queryUsersNotVerified()\n          return newNotification(this.props.i18n.t('notification.deleteUserSuccess'), 'success')\n        }\n      })\n      .catch(error =>\n        returnError(\n          'deleteUsers',\n          { error, errorMessage: this.props.i18n.t('notification.deleteUserError') },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n\n  componentDidMount() {\n    const {\n      globalState: {\n        myInfo\n      },\n      history\n    } = this.props\n\n    const profiles = myInfo?.profiles\n    const isAllowViewListUser = isSupperAdmin(profiles) || hasPermission(profiles, PER.P_USER_VIEW)\n    if (!isAllowViewListUser) {\n      history.push('/')\n    }\n\n    this.queryUsersVerified(this.state.inputSearch)\n  }\n\n\n  handleSelectUser = user => {\n    this.props.history.push(`/userInfo/${user._id}`)\n  }\n\n  handleChangeTab = (key) => {\n    switch (key) {\n      case 'VERIFIED': {\n        this.queryUsersVerified(this.state.inputSearch)\n        break;\n      }\n\n      case 'NOT_VERIFIED': {\n        this.queryUsersNotVerified()\n        break;\n      }\n\n      default:\n    }\n  }\n\n  setInputSearch = (input, callback = () => { }) => {\n    this.setState({\n      inputSearch: input\n    }, callback)\n  }\n\n  render() {\n    const {\n      state: { breadcrumbPath },\n      props: { myInfo, i18n }\n    } = this\n\n\n    return (\n      <>\n        {breadcrumbPath.length !== 1 && (\n          <Breadcrumb separator='>'>\n            {breadcrumbPath.map((e, i) => (\n              <Breadcrumb.Item key={i}>\n                {e === 'All Users' ? (\n                  <span className='clickableSpan' onClick={this.backToDefault}>\n                    {this.props.i18n.t('user.allUsers')}\n                  </span>\n                ) : (\n                    <span>{i18n.t(e)}</span>\n                  )}\n              </Breadcrumb.Item>\n            ))}\n          </Breadcrumb>\n        )}\n\n\n        <Tabs className='conferenceTabs' onChange={this.handleChangeTab}>\n          <TabPane tab={i18n.t('user.userList')} key='VERIFIED'>\n            <ListUsers\n              setInputSearch={this.setInputSearch}\n              inputSearch={this.state.inputSearch}\n              queryUsersVerified={this.queryUsersVerified}\n              myInfo={myInfo}\n              users={this.state.verifiedUsers}\n              handleSelectUser={this.handleSelectUser}\n              mutationDeleteUsers={this.mutationDeleteUsers}\n            />\n          </TabPane>\n          <TabPane tab={i18n.t('user.waitingList')} key='NOT_VERIFIED'>\n            <VerifyUserList\n              myInfo={myInfo}\n              users={this.state.notVerifiedUsers}\n              mutationDeleteUsers={this.mutationDeleteUsers}\n              refetchData={this.queryUsersNotVerified}\n            />\n          </TabPane>\n        </Tabs>\n\n\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(User)\n"]},"metadata":{},"sourceType":"module"}