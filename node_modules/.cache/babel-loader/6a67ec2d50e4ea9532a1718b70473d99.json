{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/users/SelectColumnForm.jsx\";\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\n\nvar SelectColumnForm = /*#__PURE__*/function (_Component) {\n  _inherits(SelectColumnForm, _Component);\n\n  var _super = _createSuper(SelectColumnForm);\n\n  function SelectColumnForm(props) {\n    var _this;\n\n    _classCallCheck(this, SelectColumnForm);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      columnsToShow: _toConsumableArray(_this.props.initValues)\n    };\n    return _this;\n  }\n\n  _createClass(SelectColumnForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          allValues = _this$props.allValues,\n          handleSelectColumn = _this$props.handleSelectColumn,\n          getFieldDecorator = _this$props.form.getFieldDecorator,\n          i18n = _this$props.i18n,\n          handleVisiblePopoverChange = _this$props.handleVisiblePopoverChange,\n          columnsToShow = this.state.columnsToShow;\n\n      var handleSelect = function handleSelect(e) {\n        _this2.setState(function (_ref) {\n          var columnsToShow = _ref.columnsToShow;\n          return columnsToShow.includes(e) ? {\n            columnsToShow: columnsToShow.filter(function (i) {\n              return i !== e;\n            })\n          } : {\n            columnsToShow: [].concat(_toConsumableArray(columnsToShow), [e])\n          };\n        });\n      };\n\n      var handleConfirm = function handleConfirm() {\n        handleSelectColumn(_this2.state.columnsToShow);\n        handleVisiblePopoverChange(false);\n      };\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"selectColumnForm\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, allValues.filter(function (e) {\n        return e.dataIndex !== undefined;\n      }).map(function (e, i) {\n        return /*#__PURE__*/React.createElement(_Form.Item, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        }, getFieldDecorator(\"\".concat(e.dataIndex))( /*#__PURE__*/React.createElement(\"span\", {\n          className: \"checkboxHolder\",\n          onClick: function onClick() {\n            return handleSelect(e.dataIndex);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(_Checkbox, {\n          // onChange={() => handleSelect(e.dataIndex)}\n          checked: columnsToShow.includes(e.dataIndex),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 23\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"label\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }\n        }, e.title))));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"line\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(_Button, {\n        onClick: handleConfirm,\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, i18n.t('user.confirm'))));\n    }\n  }]);\n\n  return SelectColumnForm;\n}(Component);\n\nexport default _Form.create({\n  name: 'selectColumnForm'\n})(withTranslation()(SelectColumnForm));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/users/SelectColumnForm.jsx"],"names":["React","Component","withTranslation","SelectColumnForm","props","state","columnsToShow","initValues","allValues","handleSelectColumn","getFieldDecorator","form","i18n","handleVisiblePopoverChange","handleSelect","e","setState","includes","filter","i","handleConfirm","dataIndex","undefined","map","title","t","create","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Form, Checkbox, Button } from 'antd'\nimport { withTranslation } from 'react-i18next'\n\nclass SelectColumnForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      columnsToShow: [...this.props.initValues]\n    }\n  }\n\n  render() {\n    const {\n      props: {\n        allValues,\n        // initValues,\n        handleSelectColumn,\n        form: { getFieldDecorator },\n        i18n,\n        handleVisiblePopoverChange\n      },\n      state: { columnsToShow }\n    } = this\n\n    const handleSelect = e => {\n      this.setState(({ columnsToShow }) => {\n        return columnsToShow.includes(e)\n          ? { columnsToShow: columnsToShow.filter(i => i !== e) }\n          : { columnsToShow: [...columnsToShow, e] }\n      })\n    }\n\n    const handleConfirm = () => {\n      handleSelectColumn(this.state.columnsToShow)\n      handleVisiblePopoverChange(false)\n    }\n\n    return (\n      <div className='selectColumnForm'>\n        <Form>\n          {allValues\n            .filter(e => e.dataIndex !== undefined)\n            .map((e, i) => {\n              return (\n                <Form.Item key={i}>\n                  {getFieldDecorator(`${e.dataIndex}`)(\n                    <span className='checkboxHolder' onClick={() => handleSelect(e.dataIndex)}>\n                      <Checkbox\n                        // onChange={() => handleSelect(e.dataIndex)}\n                        checked={columnsToShow.includes(e.dataIndex)}\n                      />\n                      <span className='label'>{e.title}</span>\n                    </span>\n                  )}\n                </Form.Item>\n              )\n            })}\n        </Form>\n        <div className='footer'>\n          <div className='line'></div>\n\n          <Button onClick={handleConfirm} type='primary'>\n            {i18n.t('user.confirm')}\n          </Button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Form.create({ name: 'selectColumnForm' })(withTranslation()(SelectColumnForm))\n"]},"metadata":{},"sourceType":"module"}