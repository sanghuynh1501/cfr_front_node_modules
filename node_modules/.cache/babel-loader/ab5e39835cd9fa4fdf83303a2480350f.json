{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/settings/EmailSetting/WrapperEmail.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, Q_EMAIL_SETTING, M_CREATE_EMAIL_SETTING, M_UPDATE_EMAIL_SETTING, M_DELETE_EMAIL_SETTING, M_ACTIVE_AND_INACTIVE_EMAIL_SETTING } from '@graphql';\nimport { returnError, newNotification } from '@utils';\nimport FormAddEmail from './FormAddEmail';\nimport deleteIcon from \"@misc/images/delete-setting.svg\";\nimport editIcon from \"@misc/images/edit.svg\";\n\nvar WrapperEmail = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(WrapperEmail, _React$PureComponent);\n\n  var _super = _createSuper(WrapperEmail);\n\n  function WrapperEmail() {\n    var _this;\n\n    _classCallCheck(this, WrapperEmail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      emailSettings: [],\n      idUpdate: '',\n      type: ''\n    };\n\n    _this.queryEmailSetting = function () {\n      client.query({\n        query: Q_EMAIL_SETTING,\n        fetchPolicy: 'network-only'\n      }).then(function (_ref) {\n        var getEmailSetting = _ref.data.getEmailSetting;\n\n        _this.setState({\n          emailSettings: getEmailSetting\n        });\n      }).catch(function (error) {\n        return returnError('Get conferences', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryEmailSettingError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleDeleteItem = function (_id) {\n      client.mutate({\n        mutation: M_DELETE_EMAIL_SETTING,\n        variables: {\n          idEmailSetting: _id\n        }\n      }).then(function (_ref2) {\n        var deleteEmailSetting = _ref2.data.deleteEmailSetting;\n\n        if (deleteEmailSetting) {\n          _this.queryEmailSetting();\n\n          return newNotification(_this.props.i18n.t('notification.deleteEmailSettingSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('Delete Email Setting', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.deleteEmailSettingError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleCreateItem = function (email) {\n      client.mutate({\n        mutation: M_CREATE_EMAIL_SETTING,\n        variables: {\n          rootEmail: email\n        }\n      }).then(function (_ref3) {\n        var createEmailSetting = _ref3.data.createEmailSetting;\n\n        if (createEmailSetting) {\n          _this.queryEmailSetting();\n\n          _this.handleCancelEmailSetting();\n\n          return newNotification(_this.props.i18n.t('notification.createEmailSettingSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('Delete Email Setting', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.createEmailSettingError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleUpdateItem = function (email, active) {\n      client.mutate({\n        mutation: M_UPDATE_EMAIL_SETTING,\n        variables: {\n          idEmailSetting: _this.state.idUpdate,\n          input: {\n            rootEmail: email,\n            isActive: active\n          }\n        }\n      }).then(function (_ref4) {\n        var updateEmailSetting = _ref4.data.updateEmailSetting;\n\n        if (updateEmailSetting) {\n          _this.queryEmailSetting();\n\n          _this.handleCancelEmailSetting();\n\n          return newNotification(_this.props.i18n.t('notification.updateEmailSettingSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('Delete Email Setting', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.updateEmailSettingError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleActiveItem = function (data) {\n      client.mutate({\n        mutation: M_UPDATE_EMAIL_SETTING,\n        variables: {\n          idEmailSetting: data._id,\n          input: {\n            rootEmail: data.rootEmail,\n            isActive: !data.isActive\n          }\n        }\n      }).then(function (_ref5) {\n        var updateEmailSetting = _ref5.data.updateEmailSetting;\n\n        if (updateEmailSetting) {\n          _this.queryEmailSetting();\n\n          _this.handleCancelEmailSetting();\n\n          return newNotification(_this.props.i18n.t('notification.changeEmailSettingSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('Delete Email Setting', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.changeEmailSettingError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleActiveAndInactive = function (type) {\n      client.mutate({\n        mutation: M_ACTIVE_AND_INACTIVE_EMAIL_SETTING,\n        variables: {\n          type: type\n        }\n      }).then(function (_ref6) {\n        var activeAndInactiveAllEmailSetting = _ref6.data.activeAndInactiveAllEmailSetting;\n\n        if (activeAndInactiveAllEmailSetting) {\n          _this.queryEmailSetting();\n\n          _this.handleCancelEmailSetting();\n\n          return newNotification(type === 'ACTIVE' ? _this.props.i18n.t('notification.turnOnEmailSettingSuccess') : _this.props.i18n.t('notification.turnOffEmailSettingSuccess'), 'success');\n        }\n      }).catch(function (error) {\n        return returnError('Delete Email Setting', {\n          error: error,\n          errorMessage: type === 'ACTIVE' ? _this.props.i18n.t('notification.turnOnEmailSettingError') : _this.props.i18n.t('notification.turnOffEmailSettingErr0r')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.handleCreateEmailSetting = function () {\n      _this.setState({\n        type: 'CREATE'\n      });\n    };\n\n    _this.handleCancelEmailSetting = function () {\n      _this.setState({\n        type: '',\n        idUpdate: ''\n      });\n    };\n\n    _this.handleEditEmailSetting = function (id) {\n      _this.setState({\n        type: 'UPDATE',\n        idUpdate: id\n      });\n    };\n\n    _this.checkAllActive = function (type) {\n      if (type === 'INACTIVE') {\n        return _this.state.emailSettings.some(function (item) {\n          return item.isActive;\n        });\n      }\n\n      if (type === 'ACTIVE') {\n        return _this.state.emailSettings.some(function (item) {\n          return !item.isActive;\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(WrapperEmail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.queryEmailSetting();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var i18n = this.props.i18n;\n      var hasInactive = this.checkAllActive('ACTIVE');\n      var hasActive = this.checkAllActive('INACTIVE');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-action-all\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        disabled: !hasInactive,\n        onClick: function onClick() {\n          if (hasInactive) {\n            _this2.handleActiveAndInactive('ACTIVE');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }\n      }, i18n.t('setting.turnOnAll'))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        disabled: !hasActive,\n        onClick: function onClick() {\n          if (hasActive) {\n            _this2.handleActiveAndInactive('INACTIVE');\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status not-active\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, i18n.t('setting.turnOffAll')))), this.state.emailSettings.map(function (item, index) {\n        return item._id === _this2.state.idUpdate && _this2.state.type === 'UPDATE' ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-email\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(FormAddEmail, {\n          type: \"UPDATE\",\n          data: item,\n          handleCreateItem: _this2.handleCreateItem,\n          handleUpdateItem: _this2.handleUpdateItem,\n          handleCancelEmailSetting: _this2.handleCancelEmailSetting,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 19\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          className: \"email-item\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          className: \"email-title\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }\n        }, \"@\"), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"email-content\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 19\n          }\n        }, item.rootEmail), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"group-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"status \".concat(item.isActive ? 'active' : 'not-active'),\n          onClick: function onClick() {\n            return _this2.handleActiveItem(item);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(_Popconfirm, {\n          title: _this2.props.i18n.t('setting.titleDeleteEmail'),\n          onConfirm: function onConfirm() {\n            return _this2.handleDeleteItem(item._id);\n          },\n          onCancel: function onCancel() {},\n          okText: _this2.props.i18n.t('common.yes'),\n          cancelText: _this2.props.i18n.t('common.no'),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: deleteIcon,\n          alt: \"delete-icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.handleEditEmailSetting(item._id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: editIcon,\n          alt: \"edit-icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 23\n          }\n        }))));\n      }), this.state.type === 'CREATE' ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"input-email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FormAddEmail, {\n        type: \"CREATE\",\n        handleCreateItem: this.handleCreateItem,\n        handleCancelEmailSetting: this.handleCancelEmailSetting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        className: \"btn-add-setting\",\n        onClick: this.handleCreateEmailSetting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }\n      }, i18n.t('setting.addSetting')));\n    }\n  }]);\n\n  return WrapperEmail;\n}(React.PureComponent);\n\nexport default withTranslation()(WrapperEmail);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/settings/EmailSetting/WrapperEmail.jsx"],"names":["React","withTranslation","client","Q_EMAIL_SETTING","M_CREATE_EMAIL_SETTING","M_UPDATE_EMAIL_SETTING","M_DELETE_EMAIL_SETTING","M_ACTIVE_AND_INACTIVE_EMAIL_SETTING","returnError","newNotification","FormAddEmail","WrapperEmail","state","emailSettings","idUpdate","type","queryEmailSetting","query","fetchPolicy","then","getEmailSetting","data","setState","catch","error","errorMessage","props","i18n","t","container","handleDeleteItem","_id","mutate","mutation","variables","idEmailSetting","deleteEmailSetting","handleCreateItem","email","rootEmail","createEmailSetting","handleCancelEmailSetting","handleUpdateItem","active","input","isActive","updateEmailSetting","handleActiveItem","handleActiveAndInactive","activeAndInactiveAllEmailSetting","handleCreateEmailSetting","handleEditEmailSetting","id","checkAllActive","some","item","hasInactive","hasActive","map","index","deleteIcon","editIcon","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Button, Popconfirm } from 'antd'\n\nimport {\n  client,\n  Q_EMAIL_SETTING,\n  M_CREATE_EMAIL_SETTING,\n  M_UPDATE_EMAIL_SETTING,\n  M_DELETE_EMAIL_SETTING,\n  M_ACTIVE_AND_INACTIVE_EMAIL_SETTING\n} from '@graphql'\nimport { returnError, newNotification } from '@utils'\n\nimport FormAddEmail from './FormAddEmail'\n\nimport deleteIcon from '@misc/images/delete-setting.svg'\nimport editIcon from '@misc/images/edit.svg'\n\nclass WrapperEmail extends React.PureComponent {\n  state = {\n    emailSettings: [],\n    idUpdate: '',\n    type: ''\n  }\n\n  componentDidMount() {\n    this.queryEmailSetting()\n  }\n\n  queryEmailSetting = () => {\n    client\n      .query({\n        query: Q_EMAIL_SETTING,\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { getEmailSetting } }) => {\n        this.setState({ emailSettings: getEmailSetting })\n      })\n      .catch(error =>\n        returnError(\n          'Get conferences',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.queryEmailSettingError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleDeleteItem = (_id) => {\n    client\n      .mutate({\n        mutation: M_DELETE_EMAIL_SETTING,\n        variables: { idEmailSetting: _id }\n      })\n      .then(({ data: { deleteEmailSetting } }) => {\n        if (deleteEmailSetting) {\n          this.queryEmailSetting()\n          return newNotification(this.props.i18n.t('notification.deleteEmailSettingSuccess'), 'success')\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Delete Email Setting',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.deleteEmailSettingError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleCreateItem = (email) => {\n    client\n      .mutate({\n        mutation: M_CREATE_EMAIL_SETTING,\n        variables: { rootEmail: email }\n      })\n      .then(({ data: { createEmailSetting } }) => {\n        if (createEmailSetting) {\n          this.queryEmailSetting()\n          this.handleCancelEmailSetting()\n          return newNotification(this.props.i18n.t('notification.createEmailSettingSuccess'), 'success')\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Delete Email Setting',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.createEmailSettingError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleUpdateItem = (email, active) => {\n    client\n      .mutate({\n        mutation: M_UPDATE_EMAIL_SETTING,\n        variables: {\n          idEmailSetting: this.state.idUpdate,\n          input: {\n            rootEmail: email,\n            isActive: active\n          }\n        }\n      })\n      .then(({ data: { updateEmailSetting } }) => {\n        if (updateEmailSetting) {\n          this.queryEmailSetting()\n          this.handleCancelEmailSetting()\n          return newNotification(this.props.i18n.t('notification.updateEmailSettingSuccess'), 'success')\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Delete Email Setting',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.updateEmailSettingError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleActiveItem = (data) => {\n    client\n      .mutate({\n        mutation: M_UPDATE_EMAIL_SETTING,\n        variables: {\n          idEmailSetting: data._id,\n          input: {\n            rootEmail: data.rootEmail,\n            isActive: !data.isActive\n          }\n        }\n      })\n      .then(({ data: { updateEmailSetting } }) => {\n        if (updateEmailSetting) {\n          this.queryEmailSetting()\n          this.handleCancelEmailSetting()\n          return newNotification(this.props.i18n.t('notification.changeEmailSettingSuccess'), 'success')\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Delete Email Setting',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.changeEmailSettingError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  handleActiveAndInactive = (type) => {\n    client\n      .mutate({\n        mutation: M_ACTIVE_AND_INACTIVE_EMAIL_SETTING,\n        variables: {\n          type\n        }\n      })\n      .then(({ data: { activeAndInactiveAllEmailSetting } }) => {\n        if (activeAndInactiveAllEmailSetting) {\n          this.queryEmailSetting()\n          this.handleCancelEmailSetting()\n          return newNotification(\n            type === 'ACTIVE'\n              ? this.props.i18n.t('notification.turnOnEmailSettingSuccess')\n              : this.props.i18n.t('notification.turnOffEmailSettingSuccess')\n            , 'success'\n          )\n        }\n      })\n      .catch(error =>\n        returnError(\n          'Delete Email Setting',\n          {\n            error,\n            errorMessage: type === 'ACTIVE'\n            ? this.props.i18n.t('notification.turnOnEmailSettingError')\n            : this.props.i18n.t('notification.turnOffEmailSettingErr0r')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n\n  handleCreateEmailSetting = () => {\n    this.setState({ type: 'CREATE' })\n  }\n\n  handleCancelEmailSetting = () => {\n    this.setState({ type: '', idUpdate: '' })\n  }\n\n  handleEditEmailSetting = (id) => {\n    this.setState({ type: 'UPDATE', idUpdate: id })\n  }\n\n  checkAllActive = (type) => {\n    if(type === 'INACTIVE') {\n      return this.state.emailSettings.some(item => item.isActive)\n    }\n\n    if(type === 'ACTIVE') {\n      return this.state.emailSettings.some(item => !item.isActive)\n    }\n  }\n\n  render() {\n\n    const { i18n } = this.props\n\n    const hasInactive = this.checkAllActive('ACTIVE')\n    const hasActive = this.checkAllActive('INACTIVE')\n\n    return (\n      <div className='wrapper-email'>\n        <div className='wrapper-action-all'>\n          <button \n            type='button' \n            disabled={!hasInactive}\n            onClick={() => {\n              if(hasInactive) {\n                this.handleActiveAndInactive('ACTIVE')\n              }\n            }}\n          >\n            <div className='status active'></div>\n            <span>{i18n.t('setting.turnOnAll')}</span>\n          </button>\n          <button \n            type='button' \n            disabled={!hasActive}\n            onClick={() => {\n              if(hasActive) {\n                this.handleActiveAndInactive('INACTIVE')\n              }\n            }}\n          >\n            <div className='status not-active'></div>\n            <span>{i18n.t('setting.turnOffAll')}</span>\n          </button>\n        </div>\n        {\n          this.state.emailSettings.map((item, index) => {\n            return item._id === this.state.idUpdate && this.state.type === 'UPDATE' ?\n              (\n                <div className='input-email'>\n                  <FormAddEmail\n                    type='UPDATE'\n                    data={item}\n                    handleCreateItem={this.handleCreateItem}\n                    handleUpdateItem={this.handleUpdateItem}\n                    handleCancelEmailSetting={this.handleCancelEmailSetting}\n                  />\n                </div>\n              ) : (\n                <div className='email-item'>\n                  <p className='email-title'>@</p>\n                  <p className='email-content'>{item.rootEmail}</p>\n                  <div className='group-action'>\n                    <div\n                      className={`status ${item.isActive ? 'active' : 'not-active'}`}\n                      onClick={() => this.handleActiveItem(item)}>\n                    </div>\n                    <Popconfirm\n                      title={this.props.i18n.t('setting.titleDeleteEmail')}\n                      onConfirm={() => this.handleDeleteItem(item._id)}\n                      onCancel={() => { }}\n                      okText={this.props.i18n.t('common.yes')}\n                      cancelText={this.props.i18n.t('common.no')}\n                    >\n                      <button><img src={deleteIcon} alt='delete-icon' /></button>\n                    </Popconfirm>\n                    <button onClick={() => this.handleEditEmailSetting(item._id)}>\n                      <img src={editIcon} alt='edit-icon' />\n                    </button>\n                  </div>\n                </div>\n              )\n          })\n        }\n        {\n          this.state.type === 'CREATE' ? (\n            <div className='input-email'>\n              <FormAddEmail\n                type='CREATE'\n                handleCreateItem={this.handleCreateItem}\n                handleCancelEmailSetting={this.handleCancelEmailSetting}\n              />\n            </div>\n          ) : <React.Fragment />\n        }\n        <Button\n          type='primary'\n          className='btn-add-setting'\n          onClick={this.handleCreateEmailSetting}\n        >\n          {i18n.t('setting.addSetting')}\n        </Button>\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(WrapperEmail)"]},"metadata":{},"sourceType":"module"}