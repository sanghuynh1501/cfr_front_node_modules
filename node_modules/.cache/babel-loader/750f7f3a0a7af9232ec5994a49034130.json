{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  } else {\n    root.Scrollparent = factory();\n  }\n})(this, function () {\n  var regex = /(auto|scroll)/;\n\n  var parents = function parents(node, ps) {\n    if (node.parentNode === null) {\n      return ps;\n    }\n\n    return parents(node.parentNode, ps.concat([node]));\n  };\n\n  var style = function style(node, prop) {\n    return getComputedStyle(node, null).getPropertyValue(prop);\n  };\n\n  var overflow = function overflow(node) {\n    return style(node, \"overflow\") + style(node, \"overflow-y\") + style(node, \"overflow-x\");\n  };\n\n  var scroll = function scroll(node) {\n    return regex.test(overflow(node));\n  };\n\n  var scrollParent = function scrollParent(node) {\n    if (!(node instanceof HTMLElement || node instanceof SVGElement)) {\n      return;\n    }\n\n    var ps = parents(node.parentNode, []);\n\n    for (var i = 0; i < ps.length; i += 1) {\n      if (scroll(ps[i])) {\n        return ps[i];\n      }\n    }\n\n    return document.scrollingElement || document.documentElement;\n  };\n\n  return scrollParent;\n});","map":null,"metadata":{},"sourceType":"script"}