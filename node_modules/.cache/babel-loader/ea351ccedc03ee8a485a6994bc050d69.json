{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/spin/style\";\nimport _Spin from \"antd/es/spin\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/groupDetail2/components/ModalInviteMember.jsx\";\nimport React from 'react';\nimport debounce from 'lodash/debounce';\nimport { withTranslation } from 'react-i18next';\nimport { newNotification, parseError } from '@utils';\nimport { client, M_ADD_USER_TO_NODE, Q_SEARCH_USERS } from '@graphql';\nvar Option = _Select.Option;\n\nvar ModalInviteMember = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalInviteMember, _React$PureComponent);\n\n  var _super = _createSuper(ModalInviteMember);\n\n  function ModalInviteMember(props) {\n    var _this;\n\n    _classCallCheck(this, ModalInviteMember);\n\n    _this = _super.call(this, props);\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.listRoles = [{\n      name: \"User Group\",\n      code: 'R_NODE_USER'\n    }, {\n      name: \"Mod Group\",\n      code: 'R_NODE_MOD'\n    }, {\n      name: \"Admin Group\",\n      code: 'R_NODE_ADMIN'\n    }];\n\n    _this.handleOk = function (e) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          queryNode = _assertThisInitialize2.queryNode,\n          node = _assertThisInitialize2.node;\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          var userIds = values.userIds,\n              roleCode = values.roleCode;\n          client.mutate({\n            mutation: M_ADD_USER_TO_NODE,\n            variables: {\n              nodeId: node._id,\n              userIds: userIds,\n              roleCode: roleCode\n            }\n          }).then(function (_ref) {\n            var data = _ref.data;\n\n            if (!data.addUserToNode) {\n              throw new Error('notification.addUserToNodeError');\n            }\n\n            newNotification(_this.props.i18n.t('notification.addUserToNodeSuccess'), 'success');\n            queryNode(node._id);\n\n            _this.handleCancel();\n\n            _this.props.form.resetFields();\n          }).catch(function (err) {\n            newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n          });\n        }\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.onSearchUsers = function (text) {\n      var currentUsers = _this.props.currentUsers;\n\n      _this.setState({\n        fetching: true\n      });\n\n      client.query({\n        query: Q_SEARCH_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          text: text,\n          limit: 15\n        }\n      }).then(function (_ref2) {\n        var data = _ref2.data;\n        var users = data.searchUsers || [];\n        var hashUserIdUsed = {};\n        currentUsers.forEach(function (u) {\n          return hashUserIdUsed[u._id] = 1;\n        });\n        var newListUser = [];\n        users.forEach(function (user) {\n          if (hashUserIdUsed[user._id] !== 1) {\n            newListUser.unshift(user);\n          }\n        });\n\n        _this.setState({\n          listUsers: newListUser,\n          fetching: false\n        });\n      }).catch(function (err) {\n        _this.setState({\n          fetching: false\n        });\n\n        newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n      });\n    };\n\n    _this.state = {\n      visible: false,\n      record: null,\n      listUsers: [],\n      fetching: false\n    };\n    _this.onSearchUsers = debounce(_this.onSearchUsers, 200);\n    return _this;\n  }\n\n  _createClass(ModalInviteMember, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          fetching = _this$state.fetching,\n          listUsers = _this$state.listUsers,\n          i18n = this.props.i18n;\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n        className: \"btn-default\",\n        icon: \"plus\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }\n      }, i18n.t('group.addMember')), /*#__PURE__*/React.createElement(_Modal, {\n        className: \"common-modal\",\n        title: i18n.t('group.titleMember'),\n        visible: this.state.visible,\n        onCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('group.labelMember'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('userIds', {\n        rules: [{\n          required: true,\n          message: i18n.t('group.pleaseSelectUsers')\n        }]\n      })( /*#__PURE__*/React.createElement(_Select, {\n        onSearch: this.onSearchUsers,\n        mode: \"multiple\",\n        style: {\n          width: '100%'\n        },\n        placeholder: i18n.t('group.placeholderSelectUser'),\n        filterOption: false,\n        notFoundContent: fetching ? /*#__PURE__*/React.createElement(_Spin, {\n          size: \"small\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 47\n          }\n        }) : null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 17\n        }\n      }, !fetching && listUsers.map(function (obj) {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: obj._id,\n          key: obj._id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 21\n          }\n        }, \"\".concat(obj.firstname, \" \").concat(obj.lastname), \" (\", obj.username, \")\");\n      })))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('group.labelSelectRole'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('roleCode', {\n        initialValue: 'R_NODE_USER',\n        rules: [{\n          required: true,\n          message: i18n.t('group.pleaseSelectRole')\n        }]\n      })( /*#__PURE__*/React.createElement(_Select, {\n        style: {\n          width: '100%'\n        },\n        placeholder: i18n.t('group.labelSelectRole'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 17\n        }\n      }, this.listRoles.map(function (obj) {\n        return /*#__PURE__*/React.createElement(Option, {\n          value: obj.code,\n          key: obj.code,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 21\n          }\n        }, obj.name);\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }\n      }, i18n.t('common.add')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        ghost: true,\n        onClick: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')))));\n    }\n  }]);\n\n  return ModalInviteMember;\n}(React.PureComponent);\n\nexport default withTranslation()(_Form.create({\n  name: 'inviteMember'\n})(ModalInviteMember));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/groupDetail2/components/ModalInviteMember.jsx"],"names":["React","debounce","withTranslation","newNotification","parseError","client","M_ADD_USER_TO_NODE","Q_SEARCH_USERS","Option","ModalInviteMember","props","showModal","setState","visible","listRoles","name","code","handleOk","e","queryNode","node","form","validateFields","err","values","userIds","roleCode","mutate","mutation","variables","nodeId","_id","then","data","addUserToNode","Error","i18n","t","handleCancel","resetFields","catch","onSearchUsers","text","currentUsers","fetching","query","fetchPolicy","limit","users","searchUsers","hashUserIdUsed","forEach","u","newListUser","user","unshift","listUsers","state","record","getFieldDecorator","rules","required","message","width","map","obj","firstname","lastname","username","initialValue","PureComponent","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport debounce from 'lodash/debounce'\nimport { Modal, Button, Select, Spin, Form } from 'antd'\nimport { withTranslation } from 'react-i18next'\n\nimport { newNotification, parseError } from '@utils'\nimport { client, M_ADD_USER_TO_NODE, Q_SEARCH_USERS } from '@graphql'\nconst { Option } = Select\n\nclass ModalInviteMember extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      record: null,\n      listUsers: [],\n      fetching: false\n    }\n    this.onSearchUsers = debounce(this.onSearchUsers, 200)\n  }\n  showModal = () => {\n    this.setState({\n      visible: true\n    })\n  }\n\n  listRoles = [\n    {\n      name: \"User Group\",\n      code: 'R_NODE_USER'\n    },\n    {\n      name: \"Mod Group\",\n      code: 'R_NODE_MOD'\n    },\n    {\n      name: \"Admin Group\",\n      code: 'R_NODE_ADMIN'\n    }\n  ]\n\n  handleOk = e => {\n    const {\n      props: { queryNode, node },\n    } = this\n\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { userIds, roleCode } = values\n        client\n          .mutate({\n            mutation: M_ADD_USER_TO_NODE,\n            variables: {\n              nodeId: node._id,\n              userIds,\n              roleCode\n            }\n          }).then(({ data }) => {\n            if (!data.addUserToNode) {\n              throw new Error('notification.addUserToNodeError')\n            }\n\n            newNotification(this.props.i18n.t('notification.addUserToNodeSuccess'), 'success')\n            queryNode(node._id)\n            this.handleCancel()\n            this.props.form.resetFields()\n          }).catch(err => {\n            newNotification(this.props.i18n.t(parseError(err)), 'danger')\n          })\n      }\n    })\n\n\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    })\n  }\n\n  onSearchUsers = text => {\n    const { currentUsers } = this.props\n    this.setState({ fetching: true })\n    client\n      .query({\n        query: Q_SEARCH_USERS,\n        fetchPolicy: 'network-only',\n        variables: {\n          text,\n          limit: 15\n        }\n      })\n      .then(({ data }) => {\n        const users = data.searchUsers || []\n\n        const hashUserIdUsed = {}\n        currentUsers.forEach(u => hashUserIdUsed[u._id] = 1)\n        const newListUser = []\n        users.forEach(user => {\n          if (hashUserIdUsed[user._id] !== 1) {\n            newListUser.unshift(user)\n          }\n        })\n        this.setState({\n          listUsers: newListUser,\n          fetching: false\n        })\n      })\n      .catch(err => {\n        this.setState({ fetching: false })\n        newNotification(this.props.i18n.t(parseError(err)), 'danger')\n      })\n  }\n\n  render() {\n    const {\n      state: { fetching, listUsers },\n      props: { i18n }\n    } = this\n\n    const { getFieldDecorator } = this.props.form\n\n    return (\n      <>\n        <Button className='btn-default' icon='plus' onClick={this.showModal}>\n          {i18n.t('group.addMember')}\n        </Button>\n        <Modal\n          className='common-modal'\n          title={i18n.t('group.titleMember')}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n        >\n          <Form>\n            <Form.Item label={i18n.t('group.labelMember')}>\n              {getFieldDecorator('userIds', {\n                rules: [\n                  {\n                    required: true,\n                    message: i18n.t('group.pleaseSelectUsers')\n                  }\n                ]\n              })(\n\n                <Select\n                  onSearch={this.onSearchUsers}\n                  mode='multiple'\n                  style={{ width: '100%' }}\n                  placeholder={i18n.t('group.placeholderSelectUser')}\n                  filterOption={false}\n                  notFoundContent={fetching ? <Spin size=\"small\" /> : null}\n                >\n                  {!fetching && listUsers.map(obj => (\n                    <Option value={obj._id} key={obj._id}>\n                      {`${obj.firstname} ${obj.lastname}`} ({obj.username})\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n\n\n            <Form.Item label={i18n.t('group.labelSelectRole')}>\n              {getFieldDecorator('roleCode', {\n                initialValue: 'R_NODE_USER',\n                rules: [\n                  {\n                    required: true,\n                    message: i18n.t('group.pleaseSelectRole')\n                  }\n                ]\n              })(\n\n                <Select\n                  style={{ width: '100%' }}\n                  placeholder={i18n.t('group.labelSelectRole')}\n                >\n                  {this.listRoles.map(obj => (\n                    <Option value={obj.code} key={obj.code}>\n                      {obj.name}\n                    </Option>\n                  ))}\n                </Select>\n              )}\n            </Form.Item>\n          </Form>\n\n          <div className='wrapper-button'>\n            <Button type='primary'\n              onClick={this.handleOk}>\n              {i18n.t('common.add')}\n            </Button>\n            <Button type='primary' ghost onClick={this.handleCancel}>\n              {i18n.t('common.cancel')}\n            </Button>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(Form.create({ name: 'inviteMember' })(ModalInviteMember))\n"]},"metadata":{},"sourceType":"module"}