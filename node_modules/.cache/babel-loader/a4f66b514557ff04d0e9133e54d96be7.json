{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/media/Audio.jsx\";\nimport React from 'react';\nimport { JitsiMeetJS } from '../core';\n\nvar Audio = /*#__PURE__*/function (_React$Component) {\n  _inherits(Audio, _React$Component);\n\n  var _super = _createSuper(Audio);\n\n  function Audio() {\n    var _this;\n\n    _classCallCheck(this, Audio);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._audioElement = null;\n\n    _this._attachTrack = function (audioTrack) {\n      if (audioTrack) audioTrack.attach(_this._audioElement);\n    };\n\n    _this._detachTrack = function (audioTrack) {\n      if (_this._audioElement && audioTrack) {\n        audioTrack.removeAllListeners(JitsiMeetJS.events.track.TRACK_MUTE_CHANGED);\n        audioTrack.removeAllListeners(JitsiMeetJS.events.track.TRACK_VIDEOTYPE_CHANGED);\n        audioTrack.removeAllListeners(JitsiMeetJS.events.track.NO_DATA_FROM_SOURCE);\n        audioTrack.detach(_this._audioElement);\n      }\n    };\n\n    _this._setVideoElement = function (element) {\n      _this._audioElement = element;\n    };\n\n    return _this;\n  }\n\n  _createClass(Audio, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._attachTrack(this.props.audioTrack);\n\n      this._audioElement.play();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._detachTrack(this.props.audioTrack);\n    } // *_:\n\n  }, {\n    key: \"render\",\n    // *_:\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"audio\", {\n        autoPlay: true,\n        id: this.props.id,\n        ref: this._setVideoElement,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return Audio;\n}(React.Component);\n\nexport { Audio as default };","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/media/Audio.jsx"],"names":["React","JitsiMeetJS","Audio","_audioElement","_attachTrack","audioTrack","attach","_detachTrack","removeAllListeners","events","track","TRACK_MUTE_CHANGED","TRACK_VIDEOTYPE_CHANGED","NO_DATA_FROM_SOURCE","detach","_setVideoElement","element","props","play","id","Component"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;;IAEqBC,K;;;;;;;;;;;;;;;UACnBC,a,GAAgB,I;;UAahBC,Y,GAAe,UAAAC,UAAU,EAAI;AAC3B,UAAIA,UAAJ,EAAgBA,UAAU,CAACC,MAAX,CAAkB,MAAKH,aAAvB;AACjB,K;;UAEDI,Y,GAAe,UAAAF,UAAU,EAAI;AAC3B,UAAI,MAAKF,aAAL,IAAsBE,UAA1B,EAAsC;AACpCA,QAAAA,UAAU,CAACG,kBAAX,CAA8BP,WAAW,CAACQ,MAAZ,CAAmBC,KAAnB,CAAyBC,kBAAvD;AACAN,QAAAA,UAAU,CAACG,kBAAX,CAA8BP,WAAW,CAACQ,MAAZ,CAAmBC,KAAnB,CAAyBE,uBAAvD;AACAP,QAAAA,UAAU,CAACG,kBAAX,CAA8BP,WAAW,CAACQ,MAAZ,CAAmBC,KAAnB,CAAyBG,mBAAvD;AAEAR,QAAAA,UAAU,CAACS,MAAX,CAAkB,MAAKX,aAAvB;AACD;AACF,K;;UAEDY,gB,GAAmB,UAAAC,OAAO,EAAI;AAC5B,YAAKb,aAAL,GAAqBa,OAArB;AACD,K;;;;;;;wCA3BmB;AAClB,WAAKZ,YAAL,CAAkB,KAAKa,KAAL,CAAWZ,UAA7B;;AACA,WAAKF,aAAL,CAAmBe,IAAnB;AACD;;;2CAEsB;AACrB,WAAKX,YAAL,CAAkB,KAAKU,KAAL,CAAWZ,UAA7B;AACD,K,CAED;;;;AAoBA;6BAES;AACP,0BAAO;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,EAAE,EAAE,KAAKY,KAAL,CAAWE,EAA/B;AAAmC,QAAA,GAAG,EAAE,KAAKJ,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EApCgCf,KAAK,CAACoB,S;;SAApBlB,K","sourcesContent":["import React from 'react'\nimport { JitsiMeetJS } from '../core'\n\nexport default class Audio extends React.Component {\n  _audioElement = null\n\n  componentDidMount() {\n    this._attachTrack(this.props.audioTrack)\n    this._audioElement.play()\n  }\n\n  componentWillUnmount() {\n    this._detachTrack(this.props.audioTrack)\n  }\n\n  // *_:\n\n  _attachTrack = audioTrack => {\n    if (audioTrack) audioTrack.attach(this._audioElement)\n  }\n\n  _detachTrack = audioTrack => {\n    if (this._audioElement && audioTrack) {\n      audioTrack.removeAllListeners(JitsiMeetJS.events.track.TRACK_MUTE_CHANGED)\n      audioTrack.removeAllListeners(JitsiMeetJS.events.track.TRACK_VIDEOTYPE_CHANGED)\n      audioTrack.removeAllListeners(JitsiMeetJS.events.track.NO_DATA_FROM_SOURCE)\n\n      audioTrack.detach(this._audioElement)\n    }\n  }\n\n  _setVideoElement = element => {\n    this._audioElement = element\n  }\n\n  // *_:\n\n  render() {\n    return <audio autoPlay id={this.props.id} ref={this._setVideoElement} />\n  }\n}\n"]},"metadata":{},"sourceType":"module"}