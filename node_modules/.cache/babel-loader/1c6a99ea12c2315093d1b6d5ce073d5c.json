{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalAttendance.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { client, M_VOTE, M_END_POLL } from '@graphql';\nimport { newNotification } from '@utils';\nimport './ModalAttendance.less';\nvar ModalAttendance = (_dec = inject('stores'), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalAttendance, _React$Component);\n\n  var _super = _createSuper(ModalAttendance);\n\n  function ModalAttendance() {\n    var _this;\n\n    _classCallCheck(this, ModalAttendance);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      intervalId: null,\n      visible: false,\n      data: {\n        currentTime: Math.floor((_this.props.pollInfo.createdAt - Date.now()) / 1000 + 30)\n      }\n    };\n\n    _this.handleStartTimer = function () {\n      var intervalId = setInterval(_this.timer, 1000);\n\n      _this.setState(function (_preState) {\n        return {\n          intervalId: intervalId\n        };\n      });\n    };\n\n    _this.timer = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          currentTime = _assertThisInitialize.state.data.currentTime;\n\n      if (currentTime !== 0) {\n        _this.setState(function (_preState) {\n          return {\n            data: {\n              currentTime: _preState.data.currentTime - 1\n            }\n          };\n        });\n      } else {\n        clearInterval(_this.state.intervalId);\n\n        _this.setState(function (_preState) {\n          return {\n            visible: true\n          };\n        }); //this.handleEndVote()\n\n      }\n    };\n\n    _this.handleAttendance = function () {\n      _this.handleVote();\n\n      _this.setState(function (_preState) {\n        return {\n          visible: false\n        };\n      });\n    };\n\n    _this.handleEndVote = function () {\n      // MUTATION END VOTE\n      client.mutate({\n        mutation: M_END_POLL,\n        variables: {\n          pollId: _this.props.pollInfo._id\n        }\n      }).catch(function (error) {\n        console.log(error);\n        return newNotification('Please try again later!', 'danger');\n      });\n    };\n\n    _this.handleVote = function () {\n      //MUTATION\n      client.mutate({\n        mutation: M_VOTE,\n        variables: {\n          pollId: _this.props.pollInfo._id,\n          answerKey: 'A'\n        }\n      }).catch(function (error) {\n        console.log(error);\n        return newNotification('Please try again later!', 'danger');\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalAttendance, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleStartTimer();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          visible = _this$state.visible,\n          handleAttendance = this.handleAttendance;\n      return !visible ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"background-black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-attendance\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attendance-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, data.currentTime)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"attendance-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"Vui l\\xF2ng nh\\u1EA5n x\\xE1c nh\\u1EADn \\u0111\\u1EC3 \\u0111i\\u1EC3m danh. H\\u1EC7 th\\u1ED1ng s\\u1EBD \\u0111\\xF3ng sau th\\u1EDDi gian ch\\u1EDD\")), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"attendance-button\",\n        onClick: handleAttendance,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"X\\xE1c nh\\u1EADn\"))) : /*#__PURE__*/React.createElement(React.Fragment, null);\n    }\n  }]);\n\n  return ModalAttendance;\n}(React.Component), _temp)) || _class) || _class);\nexport default ModalAttendance;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalAttendance.jsx"],"names":["React","inject","observer","client","M_VOTE","M_END_POLL","newNotification","ModalAttendance","state","intervalId","visible","data","currentTime","Math","floor","props","pollInfo","createdAt","Date","now","handleStartTimer","setInterval","timer","setState","_preState","clearInterval","handleAttendance","handleVote","handleEndVote","mutate","mutation","variables","pollId","_id","catch","error","console","log","answerKey","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { client, M_VOTE, M_END_POLL } from '@graphql'\nimport { newNotification } from '@utils'\n\nimport './ModalAttendance.less'\n\n@inject('stores')\n@observer\nclass ModalAttendance extends React.Component {\n  state = {\n    intervalId: null,\n    visible: false,\n    data: {\n      currentTime: Math.floor((this.props.pollInfo.createdAt - Date.now()) / 1000 + 30)\n    }\n  }\n\n  componentDidMount() {\n    this.handleStartTimer()\n  }\n\n  handleStartTimer = () => {\n    const intervalId = setInterval(this.timer, 1000)\n    this.setState(_preState => ({\n      intervalId\n    }))\n  }\n\n  timer = () => {\n    const {\n      state: {\n        data: { currentTime }\n      }\n    } = this\n    if (currentTime !== 0) {\n      this.setState(_preState => ({\n        data: {\n          currentTime: _preState.data.currentTime - 1\n        }\n      }))\n    } else {\n      clearInterval(this.state.intervalId)\n      this.setState(_preState => ({\n        visible: true\n      }))\n      //this.handleEndVote()\n    }\n  }\n\n  handleAttendance = () => {\n    this.handleVote()\n    this.setState(_preState => ({\n      visible: false\n    }))\n  }\n\n  handleEndVote = () => {\n    // MUTATION END VOTE\n    client\n      .mutate({\n        mutation: M_END_POLL,\n        variables: {\n          pollId: this.props.pollInfo._id\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        return newNotification('Please try again later!', 'danger')\n      })\n  }\n\n  handleVote = () => {\n    //MUTATION\n    client\n      .mutate({\n        mutation: M_VOTE,\n        variables: {\n          pollId: this.props.pollInfo._id,\n          answerKey: 'A'\n        }\n      })\n      .catch(error => {\n        console.log(error)\n        return newNotification('Please try again later!', 'danger')\n      })\n  }\n\n  render() {\n    const {\n      state: { data, visible },\n      handleAttendance\n    } = this\n    return !visible ? (\n      <div className='background-black'>\n        <div className='modal-attendance'>\n          <div className='attendance-timer'>\n            <p>{data.currentTime}</p>\n          </div>\n          <div className='attendance-description'>\n            <p>\n              Vui lòng nhấn xác nhận để điểm danh. Hệ thống sẽ đóng sau thời\n              gian chờ\n            </p>\n          </div>\n          <button\n            type='button'\n            className='attendance-button'\n            onClick={handleAttendance}\n          >\n            Xác nhận\n          </button>\n        </div>\n      </div>\n    ) : (\n        <></>\n      )\n  }\n}\n\nexport default ModalAttendance\n"]},"metadata":{},"sourceType":"module"}