{"ast":null,"code":"import \"antd/es/skeleton/style\";\nimport _Skeleton from \"antd/es/skeleton\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/groupDetail2/index.jsx\";\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport client, { Q_NODE } from '@graphql';\nimport { returnError, parseError } from '@utils';\nimport GroupInfo from './GroupInfo';\nimport '../groups2/index.less';\nimport { withTranslation } from 'react-i18next';\nimport './index.less';\n\nvar GroupDetail = withRouter(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(GroupDetail, _React$PureComponent);\n\n  var _super = _createSuper(GroupDetail);\n\n  function GroupDetail(props) {\n    var _this;\n\n    _classCallCheck(this, GroupDetail);\n\n    _this = _super.call(this, props);\n\n    _this.queryNode = function (nodeId) {\n      client.query({\n        query: Q_NODE,\n        variables: {\n          nodeId: nodeId\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref) {\n        var node = _ref.data.node;\n\n        _this.setState({\n          node: node\n        });\n      }).catch(function (error) {\n        _this.props.history.push('/group');\n\n        returnError('Get conference detail', {\n          error: error,\n          errorMessage: _this.props.i18n.t(parseError(error))\n        }, {\n          container: 'top-center'\n        });\n      });\n    };\n\n    _this.state = {\n      node: null,\n      users: []\n    };\n    return _this;\n  }\n\n  _createClass(GroupDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.queryNode(this.props.match.params.ID);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.node) {\n        return /*#__PURE__*/React.createElement(_Skeleton, {\n          active: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 14\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(GroupInfo, {\n        node: this.state.node,\n        users: this.state.users,\n        queryNode: this.queryNode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return GroupDetail;\n}(React.PureComponent), _temp)) || _class;\n\nexport default withTranslation()(GroupDetail);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/groupDetail2/index.jsx"],"names":["React","withRouter","client","Q_NODE","returnError","parseError","GroupInfo","withTranslation","GroupDetail","props","queryNode","nodeId","query","variables","fetchPolicy","then","node","data","setState","catch","error","history","push","errorMessage","i18n","t","container","state","users","match","params","ID","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AAGA,OAAOC,MAAP,IAAiBC,MAAjB,QAA+B,UAA/B;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,uBAAP;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAO,cAAP;;IAIMC,W,GAFLP,U;;;;;AAGC,uBAAYQ,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAYnBC,SAZmB,GAYP,UAAAC,MAAM,EAAI;AACpBT,MAAAA,MAAM,CACHU,KADH,CACS;AACLA,QAAAA,KAAK,EAAET,MADF;AAELU,QAAAA,SAAS,EAAE;AAAEF,UAAAA,MAAM,EAANA;AAAF,SAFN;AAGLG,QAAAA,WAAW,EAAE;AAHR,OADT,EAMGC,IANH,CAMQ,gBAAwB;AAAA,YAAbC,IAAa,QAArBC,IAAqB,CAAbD,IAAa;;AAC5B,cAAKE,QAAL,CAAc;AACZF,UAAAA,IAAI,EAAJA;AADY,SAAd;AAGD,OAVH,EAWGG,KAXH,CAWS,UAAAC,KAAK,EAAI;AACd,cAAKX,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;;AAEAlB,QAAAA,WAAW,CACT,uBADS,EAET;AACEgB,UAAAA,KAAK,EAALA,KADF;AAEEG,UAAAA,YAAY,EAAE,MAAKd,KAAL,CAAWe,IAAX,CAAgBC,CAAhB,CAAkBpB,UAAU,CAACe,KAAD,CAA5B;AAFhB,SAFS,EAMT;AAAEM,UAAAA,SAAS,EAAE;AAAb,SANS,CAAX;AAQD,OAtBH;AAuBD,KApCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXX,MAAAA,IAAI,EAAE,IADK;AAEXY,MAAAA,KAAK,EAAE;AAFI,KAAb;AAFiB;AAMlB;;;;wCAEmB;AAClB,WAAKlB,SAAL,CAAe,KAAKD,KAAL,CAAWoB,KAAX,CAAiBC,MAAjB,CAAwBC,EAAvC;AACD;;;6BA4BQ;AACP,UAAI,CAAC,KAAKJ,KAAL,CAAWX,IAAhB,EAAsB;AACpB,4BAAO;AAAU,UAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;AACD,0BACE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWX,IADnB;AAEE,QAAA,KAAK,EAAE,KAAKW,KAAL,CAAWC,KAFpB;AAGE,QAAA,SAAS,EAAE,KAAKlB,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD;;;;EAlDuBV,KAAK,CAACgC,a;;AAqDhC,eAAezB,eAAe,GAAGC,WAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router'\nimport { Skeleton } from 'antd';\n\nimport client, { Q_NODE } from '@graphql'\nimport { returnError, parseError } from '@utils'\n\nimport GroupInfo from './GroupInfo'\nimport '../groups2/index.less'\nimport { withTranslation } from 'react-i18next'\nimport './index.less'\n\n@withRouter\n\nclass GroupDetail extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      node: null,\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    this.queryNode(this.props.match.params.ID)\n  }\n\n  queryNode = nodeId => {\n    client\n      .query({\n        query: Q_NODE,\n        variables: { nodeId },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { node } }) => {\n        this.setState({\n          node\n        })\n      })\n      .catch(error => {\n        this.props.history.push('/group')\n\n        returnError(\n          'Get conference detail',\n          {\n            error,\n            errorMessage: this.props.i18n.t(parseError(error))\n          },\n          { container: 'top-center' }\n        )\n      })\n  }\n\n  render() {\n    if (!this.state.node) {\n      return <Skeleton active />\n    }\n    return (\n      <GroupInfo\n        node={this.state.node}\n        users={this.state.users}\n        queryNode={this.queryNode}\n      />\n    )\n  }\n}\n\nexport default withTranslation()(GroupDetail)\n"]},"metadata":{},"sourceType":"module"}