{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _slicedToArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/layouts/Multi.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { AvatarComponent } from '@components';\nimport { checkPermission, _tabs } from '@constants';\nimport microOn from \"@misc/images/ngocly/micro.svg\";\nimport chat from \"@misc/images/ngocly/chat-black.svg\";\nimport pinUser from \"@misc/images/ngocly/pin-icon.svg\";\nimport pinnedIcon from \"@misc/images/toolbar/pinned.svg\";\nimport microOff from \"@misc/images/ngocly/micro-off-white.svg\";\nimport headphone from \"@misc/images/ngocly/headphone.svg\";\nimport micro from \"@misc/images/ngocly/micro.svg\";\nimport microOff1 from \"@misc/images/ngocly/microOff.svg\";\nimport { MEDIA_TYPE } from '../constants';\nimport { Video } from '../media';\nvar MultiLayout = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(MultiLayout, _React$PureComponent);\n\n  var _super = _createSuper(MultiLayout);\n\n  function MultiLayout() {\n    var _this;\n\n    _classCallCheck(this, MultiLayout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      currentPage: 1\n    };\n\n    _this.isOwner = function (role) {\n      return role ? role.split('|')[2] === 'OWNER' : false;\n    };\n\n    _this.changeCSSGrid = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _assertThisInitialize2 = _assertThisInitialize.props,\n          jitsiStore = _assertThisInitialize2.jitsiStore,\n          conferenceState = _assertThisInitialize2.conferenceState,\n          currentPage = _assertThisInitialize.state.currentPage;\n\n      var twoLocal = jitsiStore.isCamera && jitsiStore.isShareScreen ? 2 : 1;\n      var totalCam = jitsiStore.participants.length + twoLocal - (currentPage - 1) * 25;\n      var widthParent = conferenceState.isPanelOpen ? window.innerWidth - 380 : window.innerWidth;\n      var rowGrid;\n      var colGrid;\n      var page = Math.floor((jitsiStore.participants.length + twoLocal) / 25);\n      var totalPage = jitsiStore.participants.length + twoLocal - page * 25 > 0 ? page + 1 : page;\n\n      if (currentPage > totalPage) {\n        _this.setState({\n          currentPage: totalPage\n        });\n      }\n\n      if (totalCam <= 2) {\n        rowGrid = 1;\n        colGrid = 2;\n      }\n\n      if (totalCam > 2 && totalCam <= 4) {\n        rowGrid = 2;\n        colGrid = 2;\n      }\n\n      if (totalCam > 4 && totalCam <= 6) {\n        rowGrid = 2;\n        colGrid = 3;\n      }\n\n      if (totalCam > 6 && totalCam <= 8) {\n        rowGrid = 2;\n        colGrid = 4;\n      }\n\n      if (totalCam > 8 && totalCam <= 9) {\n        rowGrid = 3;\n        colGrid = 3;\n      }\n\n      if (totalCam > 9 && totalCam <= 12) {\n        rowGrid = 3;\n        colGrid = 4;\n      }\n\n      if (totalCam > 12 && totalCam <= 16) {\n        rowGrid = 4;\n        colGrid = 4;\n      }\n\n      if (totalCam > 16 && totalCam <= 20) {\n        rowGrid = 4;\n        colGrid = 5;\n      }\n\n      if (totalCam > 20) {\n        rowGrid = 5;\n        colGrid = 5;\n      }\n\n      var heightItem = window.innerHeight / rowGrid;\n      var widthItem = widthParent / colGrid;\n      return {\n        gridTemplateColumns: \"repeat(\".concat(colGrid, \", \").concat(widthItem, \"px)\"),\n        gridTemplateRows: \"repeat(\".concat(rowGrid, \", \").concat(heightItem, \"px)\")\n      };\n    };\n\n    _this.updateRemoteStats = function (id, stats) {\n      if (_this[\"setStats\".concat(id)]) _this[\"setStats\".concat(id)](stats);\n    };\n\n    _this.handleChangePage = function (e) {\n      _this.setState({\n        currentPage: +e.currentTarget.dataset.index\n      });\n    };\n\n    _this.REMOTE_MIC_OFF = function (id, hasAudio) {\n      if (checkPermission(_this.props.conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio) {\n        _this.props.jitsiStore.conference.sendCommandOnce('REMOTE_MIC_OFF', {\n          value: \"\".concat(id)\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(MultiLayout, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.updateRemoteStats(this.updateRemoteStats);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          conferenceState = _this$props.conferenceState,\n          jitsiStore = _this$props.jitsiStore,\n          currentPage = this.state.currentPage;\n      var twoLocal = jitsiStore.isCamera && jitsiStore.isShareScreen ? 2 : 1;\n      var page = Math.floor((jitsiStore.participants.length + twoLocal) / 25);\n      var totalPage = jitsiStore.participants.length + twoLocal - page * 25 > 0 ? page + 1 : page;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"speaker-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"speaker-wrapper-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      }, totalPage > 1 ? Array(totalPage).fill(0).map(function (item, index) {\n        return /*#__PURE__*/React.createElement(\"button\", {\n          key: index,\n          className: currentPage === index + 1 ? 'btn-translate-page active' : 'btn-translate-page',\n          \"data-index\": index + 1,\n          onClick: _this2.handleChangePage,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }\n        }, index + 1);\n      }) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 22\n        }\n      })), jitsiStore.participants.length || jitsiStore.speaker || jitsiStore.isCamera || jitsiStore.isShareScreen ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-multi-track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"multi-track\",\n        style: this.changeCSSGrid(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }\n      }, !jitsiStore.isCamera && !jitsiStore.isShareScreen && currentPage === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote-track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"track-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(AvatarComponent, Object.assign({}, conferenceState.myInfo, {\n        size: 64,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 23\n        }\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }), jitsiStore.isCamera && currentPage === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote-track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"track-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Video, {\n        id: jitsiStore.videoTrack.track.getId(),\n        videoTrack: jitsiStore.videoTrack.track,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 23\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }), jitsiStore.isShareScreen && currentPage === 1 ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote-track\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"track-box\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Video, {\n        id: jitsiStore.desktopTrack.track.getId(),\n        videoTrack: jitsiStore.desktopTrack.track,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 23\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }\n      }), jitsiStore.participants.slice((currentPage - 1) * 25 - twoLocal < 0 ? 0 : (currentPage - 1) * 25 - twoLocal, currentPage * 25 - twoLocal).map(function (_ref2) {\n        var id = _ref2.id,\n            user = _ref2.user,\n            displayName = _ref2.displayName;\n\n        var tracks = _this2.props.tracksOfThisParticipant(id);\n\n        var hasAudio = _this2.props.doesParticipantHasAudio(id);\n\n        var hasVideo = _this2.props.doesParticipantHasVideo(id);\n\n        var userProfile = {};\n\n        if (user._displayName) {\n          var _user$_displayName$sp = user._displayName.split('|'),\n              _user$_displayName$sp2 = _slicedToArray(_user$_displayName$sp, 1),\n              userId = _user$_displayName$sp2[0];\n\n          var _conferenceState$conf = conferenceState.conferenceUsers.filter(function (_ref3) {\n            var cUser = _ref3.user;\n            return cUser && cUser._id === userId;\n          }),\n              _conferenceState$conf2 = _slicedToArray(_conferenceState$conf, 1),\n              profileFound = _conferenceState$conf2[0];\n\n          if (profileFound) userProfile = profileFound;\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: id,\n          className: conferenceState.conference.pinnedUser === id && hasVideo ? 'remote-track remote-pinned' : 'remote-track',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"track-box\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }\n        }, hasVideo ? /*#__PURE__*/React.createElement(React.Fragment, null, tracks.map(function (_ref4, i) {\n          var track = _ref4.track,\n              mediaType = _ref4.mediaType;\n\n          if (mediaType === MEDIA_TYPE.VIDEO) {\n            return /*#__PURE__*/React.createElement(Video, {\n              key: i,\n              id: track.getId(),\n              videoTrack: track,\n              width: \"100%\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 42\n              }\n            });\n          }\n\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 40\n            }\n          });\n        })) : /*#__PURE__*/React.createElement(AvatarComponent, Object.assign({}, userProfile.user, {\n          size: 64,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 31\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"track-box-action\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 27\n          }\n        }, checkPermission(conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio ? /*#__PURE__*/React.createElement(\"button\", {\n          style: {\n            background: hasAudio ? '#fff' : '#f5483f'\n          },\n          disabled: _this2.isOwner(displayName),\n          onClick: function onClick() {\n            _this2.REMOTE_MIC_OFF(id, hasAudio);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: hasAudio ? microOn : microOff,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }\n        }), checkPermission(conferenceState.myPermissions, 'CHAT') ? /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            if (user._displayName) {\n              _this2.props.conferenceState.setState({\n                idChatUser: user._displayName.split('|')[0],\n                isPanelOpen: true,\n                isShowMessages: true,\n                currentTab: _tabs.CHAT\n              });\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: chat,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 33\n          }\n        }), checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo ? /*#__PURE__*/React.createElement(\"button\", {\n          className: conferenceState.conference.pinnedUser === id && hasVideo ? 'btn-pin pin-active' : 'btn-pin',\n          onClick: function onClick() {\n            if (checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo) {\n              _this2.props.mutateSetPinnedUser(conferenceState.conference.pinnedUser === id ? '' : id);\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: conferenceState.conference.pinnedUser === id && hasVideo ? pinnedIcon : pinUser,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 33\n          }\n        }))), /*#__PURE__*/React.createElement(_Tooltip, {\n          title: displayName ? displayName.split('|')[1] : '',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"track-box-info\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"box-info\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: headphone,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 31\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 31\n          }\n        }, displayName ? displayName.split('|')[1].length > 16 ? displayName.split('|')[1].slice(0, 16) + '...' : displayName.split('|')[1] : '')), /*#__PURE__*/React.createElement(\"img\", {\n          src: hasAudio ? micro : microOff1,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 29\n          }\n        }))));\n      }))) : /*#__PURE__*/React.createElement(\"div\", {\n        className: \"speaker-no-remote-tracks\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 17\n        }\n      }, \"Waiting for others to join\"))));\n    }\n  }]);\n\n  return MultiLayout;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default MultiLayout;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/layouts/Multi.jsx"],"names":["React","inject","observer","AvatarComponent","checkPermission","_tabs","MEDIA_TYPE","Video","MultiLayout","stores","state","currentPage","isOwner","role","split","changeCSSGrid","props","jitsiStore","conferenceState","twoLocal","isCamera","isShareScreen","totalCam","participants","length","widthParent","isPanelOpen","window","innerWidth","rowGrid","colGrid","page","Math","floor","totalPage","setState","heightItem","innerHeight","widthItem","gridTemplateColumns","gridTemplateRows","updateRemoteStats","id","stats","handleChangePage","e","currentTarget","dataset","index","REMOTE_MIC_OFF","hasAudio","myPermissions","conference","sendCommandOnce","value","Array","fill","map","item","speaker","myInfo","videoTrack","track","getId","desktopTrack","slice","user","displayName","tracks","tracksOfThisParticipant","doesParticipantHasAudio","hasVideo","doesParticipantHasVideo","userProfile","_displayName","userId","conferenceUsers","filter","cUser","_id","profileFound","pinnedUser","i","mediaType","VIDEO","background","microOn","microOff","idChatUser","isShowMessages","currentTab","CHAT","chat","mutateSetPinnedUser","pinnedIcon","pinUser","headphone","micro","microOff1","PureComponent"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAGA,SAASC,eAAT,QAAgC,aAAhC;AACA,SAASC,eAAT,EAA0BC,KAA1B,QAAuC,YAAvC;;;;;;;;;AAYA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,KAAT,QAAsB,UAAtB;IAIMC,W,WAFLP,MAAM,CAAC;AAAA,MAAGQ,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,gBACNP,Q;;;;;;;;;;;;;;;UAECQ,K,GAAQ;AACNC,MAAAA,WAAW,EAAE;AADP,K;;UAIRC,O,GAAU,UAAAC,IAAI;AAAA,aAAKA,IAAI,GAAGA,IAAI,CAACC,KAAL,CAAW,GAAX,EAAgB,CAAhB,MAAuB,OAA1B,GAAoC,KAA7C;AAAA,K;;UAEdC,a,GAAgB,YAAM;AAAA;AAAA,yDAElBC,KAFkB;AAAA,UAETC,UAFS,0BAETA,UAFS;AAAA,UAEGC,eAFH,0BAEGA,eAFH;AAAA,UAGTP,WAHS,yBAGlBD,KAHkB,CAGTC,WAHS;;AAMpB,UAAMQ,QAAQ,GAAGF,UAAU,CAACG,QAAX,IAAuBH,UAAU,CAACI,aAAlC,GAAkD,CAAlD,GAAsD,CAAvE;AACA,UAAMC,QAAQ,GAAGL,UAAU,CAACM,YAAX,CAAwBC,MAAxB,GAAiCL,QAAjC,GAA4C,CAACR,WAAW,GAAG,CAAf,IAAoB,EAAjF;AACA,UAAMc,WAAW,GAAGP,eAAe,CAACQ,WAAhB,GAA8BC,MAAM,CAACC,UAAP,GAAoB,GAAlD,GAAwDD,MAAM,CAACC,UAAnF;AACA,UAAIC,OAAJ;AACA,UAAIC,OAAJ;AAEA,UAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAChB,UAAU,CAACM,YAAX,CAAwBC,MAAxB,GAAiCL,QAAlC,IAA8C,EAAzD,CAAb;AACA,UAAMe,SAAS,GAAIjB,UAAU,CAACM,YAAX,CAAwBC,MAAxB,GAAiCL,QAAlC,GAA8CY,IAAI,GAAG,EAArD,GAA0D,CAA1D,GAA8DA,IAAI,GAAG,CAArE,GAAyEA,IAA3F;;AACA,UAAIpB,WAAW,GAAGuB,SAAlB,EAA6B;AAC3B,cAAKC,QAAL,CAAc;AAAExB,UAAAA,WAAW,EAAEuB;AAAf,SAAd;AACD;;AAED,UAAIZ,QAAQ,IAAI,CAAhB,EAAmB;AACjBO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,CAAhC,EAAmC;AACjCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,CAAhC,EAAmC;AACjCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,CAAhC,EAAmC;AACjCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,CAAhC,EAAmC;AACjCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,EAAhC,EAAoC;AAClCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,IAAI,EAAjC,EAAqC;AACnCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,IAAI,EAAjC,EAAqC;AACnCO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAIR,QAAQ,GAAG,EAAf,EAAmB;AACjBO,QAAAA,OAAO,GAAG,CAAV;AACAC,QAAAA,OAAO,GAAG,CAAV;AACD;;AAED,UAAMM,UAAU,GAAGT,MAAM,CAACU,WAAP,GAAqBR,OAAxC;AACA,UAAMS,SAAS,GAAGb,WAAW,GAAGK,OAAhC;AAEA,aAAO;AACLS,QAAAA,mBAAmB,mBAAYT,OAAZ,eAAwBQ,SAAxB,QADd;AAELE,QAAAA,gBAAgB,mBAAYX,OAAZ,eAAwBO,UAAxB;AAFX,OAAP;AAID,K;;UAMDK,iB,GAAoB,UAACC,EAAD,EAAKC,KAAL,EAAe;AACjC,UAAI,wBAAgBD,EAAhB,EAAJ,EAA2B,wBAAgBA,EAAhB,GAAsBC,KAAtB;AAC5B,K;;UAEDC,gB,GAAmB,UAACC,CAAD,EAAO;AACxB,YAAKV,QAAL,CAAc;AAAExB,QAAAA,WAAW,EAAE,CAACkC,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC;AAAxC,OAAd;AACD,K;;UAEDC,c,GAAiB,UAACP,EAAD,EAAKQ,QAAL,EAAkB;AACjC,UAAI9C,eAAe,CAAC,MAAKY,KAAL,CAAWE,eAAX,CAA2BiC,aAA5B,EAA2C,yBAA3C,CAAf,IAAwFD,QAA5F,EAAsG;AACpG,cAAKlC,KAAL,CAAWC,UAAX,CAAsBmC,UAAtB,CAAiCC,eAAjC,CAAiD,gBAAjD,EAAmE;AAAEC,UAAAA,KAAK,YAAKZ,EAAL;AAAP,SAAnE;AACD;AACF,K;;;;;;;wCAhBmB;AAClB,WAAK1B,KAAL,CAAWyB,iBAAX,CAA6B,KAAKA,iBAAlC;AACD;;;6BAgBQ;AAAA;;AAAA,wBAIH,IAJG,CAELzB,KAFK;AAAA,UAEIE,eAFJ,eAEIA,eAFJ;AAAA,UAEqBD,UAFrB,eAEqBA,UAFrB;AAAA,UAGIN,WAHJ,GAIH,IAJG,CAGLD,KAHK,CAGIC,WAHJ;AAMP,UAAMQ,QAAQ,GAAGF,UAAU,CAACG,QAAX,IAAuBH,UAAU,CAACI,aAAlC,GAAkD,CAAlD,GAAsD,CAAvE;AACA,UAAMU,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAChB,UAAU,CAACM,YAAX,CAAwBC,MAAxB,GAAiCL,QAAlC,IAA8C,EAAzD,CAAb;AACA,UAAMe,SAAS,GAAIjB,UAAU,CAACM,YAAX,CAAwBC,MAAxB,GAAiCL,QAAlC,GAA8CY,IAAI,GAAG,EAArD,GAA0D,CAA1D,GAA8DA,IAAI,GAAG,CAArE,GAAyEA,IAA3F;AAEA,0BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEIG,SAAS,GAAG,CAAZ,GACEqB,KAAK,CAACrB,SAAD,CAAL,CAAiBsB,IAAjB,CAAsB,CAAtB,EAAyBC,GAAzB,CAA6B,UAACC,IAAD,EAAOV,KAAP,EAAiB;AAC5C,4BACE;AACE,UAAA,GAAG,EAAEA,KADP;AAEE,UAAA,SAAS,EAAErC,WAAW,KAAKqC,KAAK,GAAG,CAAxB,GACP,2BADO,GAEP,oBAJN;AAKE,wBAAYA,KAAK,GAAG,CALtB;AAME,UAAA,OAAO,EAAE,MAAI,CAACJ,gBANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQGI,KAAK,GAAG,CARX,CADF;AAYD,OAbD,CADF,gBAcO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBX,CADF,EAoBG/B,UAAU,CAACM,YAAX,CAAwBC,MAAxB,IAAkCP,UAAU,CAAC0C,OAA7C,IAAwD1C,UAAU,CAACG,QAAnE,IAA+EH,UAAU,CAACI,aAA1F,gBACC;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE,KAAKN,aAAL,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAACE,UAAU,CAACG,QAAZ,IAAwB,CAACH,UAAU,CAACI,aAApC,IAAqDV,WAAW,KAAK,CAArE,gBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,eAAD,oBAAqBO,eAAe,CAAC0C,MAArC;AAA6C,QAAA,IAAI,EAAE,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF,CADD,gBAOG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARN,EAWG3C,UAAU,CAACG,QAAX,IAAuBT,WAAW,KAAK,CAAvC,gBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEM,UAAU,CAAC4C,UAAX,CAAsBC,KAAtB,CAA4BC,KAA5B,EAAX;AAAgD,QAAA,UAAU,EAAE9C,UAAU,CAAC4C,UAAX,CAAsBC,KAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADD,gBAOG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBN,EAqBG7C,UAAU,CAACI,aAAX,IAA4BV,WAAW,KAAK,CAA5C,gBACC;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAEM,UAAU,CAAC+C,YAAX,CAAwBF,KAAxB,CAA8BC,KAA9B,EAAX;AAAkD,QAAA,UAAU,EAAE9C,UAAU,CAAC+C,YAAX,CAAwBF,KAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADD,gBAOG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5BN,EA+BG7C,UAAU,CAACM,YAAX,CACE0C,KADF,CAEG,CAACtD,WAAW,GAAG,CAAf,IAAoB,EAApB,GAAyBQ,QAAzB,GAAoC,CAApC,GAAwC,CAAxC,GAA4C,CAACR,WAAW,GAAG,CAAf,IAAoB,EAApB,GAAyBQ,QAFxE,EAGGR,WAAW,GAAG,EAAd,GAAmBQ,QAHtB,EAKEsC,GALF,CAKM,iBAA+B;AAAA,YAA5Bf,EAA4B,SAA5BA,EAA4B;AAAA,YAAxBwB,IAAwB,SAAxBA,IAAwB;AAAA,YAAlBC,WAAkB,SAAlBA,WAAkB;;AAClC,YAAMC,MAAM,GAAG,MAAI,CAACpD,KAAL,CAAWqD,uBAAX,CAAmC3B,EAAnC,CAAf;;AACA,YAAMQ,QAAQ,GAAG,MAAI,CAAClC,KAAL,CAAWsD,uBAAX,CAAmC5B,EAAnC,CAAjB;;AACA,YAAM6B,QAAQ,GAAG,MAAI,CAACvD,KAAL,CAAWwD,uBAAX,CAAmC9B,EAAnC,CAAjB;;AAEA,YAAI+B,WAAW,GAAG,EAAlB;;AAEA,YAAIP,IAAI,CAACQ,YAAT,EAAuB;AAAA,sCACJR,IAAI,CAACQ,YAAL,CAAkB5D,KAAlB,CAAwB,GAAxB,CADI;AAAA;AAAA,cACd6D,MADc;;AAAA,sCAEEzD,eAAe,CAAC0D,eAAhB,CAAgCC,MAAhC,CACrB;AAAA,gBAASC,KAAT,SAAGZ,IAAH;AAAA,mBAAqBY,KAAK,IAAIA,KAAK,CAACC,GAAN,KAAcJ,MAA5C;AAAA,WADqB,CAFF;AAAA;AAAA,cAEdK,YAFc;;AAMrB,cAAIA,YAAJ,EAAkBP,WAAW,GAAGO,YAAd;AACnB;;AAED,4BACE;AACE,UAAA,GAAG,EAAEtC,EADP;AAEE,UAAA,SAAS,EACPxB,eAAe,CAACkC,UAAhB,CAA2B6B,UAA3B,KAA0CvC,EAA1C,IAAgD6B,QAAhD,GACI,4BADJ,GAEI,cALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAQE;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGA,QAAQ,gBACP,0CACGH,MAAM,CAACX,GAAP,CAAW,iBAAuByB,CAAvB,EAA6B;AAAA,cAA1BpB,KAA0B,SAA1BA,KAA0B;AAAA,cAAnBqB,SAAmB,SAAnBA,SAAmB;;AACvC,cAAIA,SAAS,KAAK7E,UAAU,CAAC8E,KAA7B,EAAoC;AAClC,gCAAO,oBAAC,KAAD;AAAO,cAAA,GAAG,EAAEF,CAAZ;AAAe,cAAA,EAAE,EAAEpB,KAAK,CAACC,KAAN,EAAnB;AAAkC,cAAA,UAAU,EAAED,KAA9C;AAAqD,cAAA,KAAK,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,8BAAO,oBAAC,KAAD,CAAO,QAAP;AAAgB,YAAA,GAAG,EAAEoB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,SALA,CADH,CADO,gBAUL,oBAAC,eAAD,oBAAqBT,WAAW,CAACP,IAAjC;AAAuC,UAAA,IAAI,EAAE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXN,CARF,eAsBE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG9D,eAAe,CAACc,eAAe,CAACiC,aAAjB,EAAgC,yBAAhC,CAAf,IAA6ED,QAA7E,gBACC;AACE,UAAA,KAAK,EAAE;AAAEmC,YAAAA,UAAU,EAAEnC,QAAQ,GAAG,MAAH,GAAY;AAAlC,WADT;AAEE,UAAA,QAAQ,EAAE,MAAI,CAACtC,OAAL,CAAauD,WAAb,CAFZ;AAGE,UAAA,OAAO,EAAE,mBAAM;AACb,YAAA,MAAI,CAAClB,cAAL,CAAoBP,EAApB,EAAwBQ,QAAxB;AACD,WALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOE;AAAK,UAAA,GAAG,EAAEA,QAAQ,GAAGoC,OAAH,GAAaC,QAA/B;AAAyC,UAAA,GAAG,EAAC,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADD,gBAWG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZN,EAeGnF,eAAe,CAACc,eAAe,CAACiC,aAAjB,EAAgC,MAAhC,CAAf,gBACC;AACE,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAIe,IAAI,CAACQ,YAAT,EAAuB;AACrB,cAAA,MAAI,CAAC1D,KAAL,CAAWE,eAAX,CAA2BiB,QAA3B,CAAoC;AAClCqD,gBAAAA,UAAU,EAAEtB,IAAI,CAACQ,YAAL,CAAkB5D,KAAlB,CAAwB,GAAxB,EAA6B,CAA7B,CADsB;AAElCY,gBAAAA,WAAW,EAAE,IAFqB;AAGlC+D,gBAAAA,cAAc,EAAE,IAHkB;AAIlCC,gBAAAA,UAAU,EAAErF,KAAK,CAACsF;AAJgB,eAApC;AAMD;AACF,WAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAYE;AAAK,UAAA,GAAG,EAAEC,IAAV;AAAgB,UAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAZF,CADD,gBAgBG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UA/BN,EAkCGxF,eAAe,CAACc,eAAe,CAACiC,aAAjB,EAAgC,kBAAhC,CAAf,IAAsEoB,QAAtE,gBACC;AACE,UAAA,SAAS,EACPrD,eAAe,CAACkC,UAAhB,CAA2B6B,UAA3B,KAA0CvC,EAA1C,IAAgD6B,QAAhD,GACI,oBADJ,GAEI,SAJR;AAME,UAAA,OAAO,EAAE,mBAAM;AACb,gBAAInE,eAAe,CAACc,eAAe,CAACiC,aAAjB,EAAgC,kBAAhC,CAAf,IAAsEoB,QAA1E,EAAoF;AAClF,cAAA,MAAI,CAACvD,KAAL,CAAW6E,mBAAX,CACE3E,eAAe,CAACkC,UAAhB,CAA2B6B,UAA3B,KAA0CvC,EAA1C,GAA+C,EAA/C,GAAoDA,EADtD;AAGD;AACF,WAZH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAcE;AACE,UAAA,GAAG,EAAExB,eAAe,CAACkC,UAAhB,CAA2B6B,UAA3B,KAA0CvC,EAA1C,IAAgD6B,QAAhD,GAA2DuB,UAA3D,GAAwEC,OAD/E;AAEE,UAAA,GAAG,EAAC,MAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAdF,CADD,gBAqBG,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAvDN,CADF,CAtBF,eAkFE;AAAS,UAAA,KAAK,EAAE5B,WAAW,GAAGA,WAAW,CAACrD,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAAH,GAA+B,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAEkF,SAAV;AAAqB,UAAA,GAAG,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG7B,WAAW,GACRA,WAAW,CAACrD,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0BU,MAA1B,GAAmC,EAAnC,GACE2C,WAAW,CAACrD,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,EAA0BmD,KAA1B,CAAgC,CAAhC,EAAmC,EAAnC,IAAyC,KAD3C,GAEEE,WAAW,CAACrD,KAAZ,CAAkB,GAAlB,EAAuB,CAAvB,CAHM,GAIR,EALN,CAFF,CADF,eAWE;AAAK,UAAA,GAAG,EAAEoC,QAAQ,GAAG+C,KAAH,GAAWC,SAA7B;AAAwC,UAAA,GAAG,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAXF,CADF,CAlFF,CADF;AAoGD,OAzHF,CA/BH,CADF,CADD,gBA8JG;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CAlLN,CADF,CADF;AA2LD;;;;EAtSuBlG,KAAK,CAACmG,a;AAyShC,eAAe3F,WAAf","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Tooltip } from 'antd'\n\nimport { AvatarComponent } from '@components'\nimport { checkPermission, _tabs } from '@constants'\n\nimport microOn from '@misc/images/ngocly/micro.svg'\nimport chat from '@misc/images/ngocly/chat-black.svg'\nimport pinUser from '@misc/images/ngocly/pin-icon.svg'\nimport pinnedIcon from '@misc/images/toolbar/pinned.svg'\nimport microOff from '@misc/images/ngocly/micro-off-white.svg'\n\nimport headphone from '@misc/images/ngocly/headphone.svg'\nimport micro from '@misc/images/ngocly/micro.svg'\nimport microOff1 from '@misc/images/ngocly/microOff.svg'\n\nimport { MEDIA_TYPE } from '../constants'\nimport { Video } from '../media'\n\n@inject(({ stores }) => stores)\n@observer\nclass MultiLayout extends React.PureComponent {\n  state = {\n    currentPage: 1\n  }\n\n  isOwner = role => (role ? role.split('|')[2] === 'OWNER' : false)\n\n  changeCSSGrid = () => {\n    const {\n      props: { jitsiStore, conferenceState },\n      state: { currentPage }\n    } = this\n\n    const twoLocal = jitsiStore.isCamera && jitsiStore.isShareScreen ? 2 : 1\n    const totalCam = jitsiStore.participants.length + twoLocal - (currentPage - 1) * 25\n    const widthParent = conferenceState.isPanelOpen ? window.innerWidth - 380 : window.innerWidth\n    let rowGrid\n    let colGrid\n\n    const page = Math.floor((jitsiStore.participants.length + twoLocal) / 25)\n    const totalPage = (jitsiStore.participants.length + twoLocal) - page * 25 > 0 ? page + 1 : page\n    if (currentPage > totalPage) {\n      this.setState({ currentPage: totalPage })\n    }\n\n    if (totalCam <= 2) {\n      rowGrid = 1\n      colGrid = 2\n    }\n\n    if (totalCam > 2 && totalCam <= 4) {\n      rowGrid = 2\n      colGrid = 2\n    }\n\n    if (totalCam > 4 && totalCam <= 6) {\n      rowGrid = 2\n      colGrid = 3\n    }\n\n    if (totalCam > 6 && totalCam <= 8) {\n      rowGrid = 2\n      colGrid = 4\n    }\n\n    if (totalCam > 8 && totalCam <= 9) {\n      rowGrid = 3\n      colGrid = 3\n    }\n\n    if (totalCam > 9 && totalCam <= 12) {\n      rowGrid = 3\n      colGrid = 4\n    }\n\n    if (totalCam > 12 && totalCam <= 16) {\n      rowGrid = 4\n      colGrid = 4\n    }\n\n    if (totalCam > 16 && totalCam <= 20) {\n      rowGrid = 4\n      colGrid = 5\n    }\n\n    if (totalCam > 20) {\n      rowGrid = 5\n      colGrid = 5\n    }\n\n    const heightItem = window.innerHeight / rowGrid\n    const widthItem = widthParent / colGrid\n\n    return {\n      gridTemplateColumns: `repeat(${colGrid}, ${widthItem}px)`,\n      gridTemplateRows: `repeat(${rowGrid}, ${heightItem}px)`\n    }\n  }\n\n  componentDidMount() {\n    this.props.updateRemoteStats(this.updateRemoteStats)\n  }\n\n  updateRemoteStats = (id, stats) => {\n    if (this[`setStats${id}`]) this[`setStats${id}`](stats)\n  }\n\n  handleChangePage = (e) => {\n    this.setState({ currentPage: +e.currentTarget.dataset.index })\n  }\n\n  REMOTE_MIC_OFF = (id, hasAudio) => {\n    if (checkPermission(this.props.conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio) {\n      this.props.jitsiStore.conference.sendCommandOnce('REMOTE_MIC_OFF', { value: `${id}` })\n    }\n  }\n\n  render() {\n    const {\n      props: { conferenceState, jitsiStore },\n      state: { currentPage }\n    } = this\n\n    const twoLocal = jitsiStore.isCamera && jitsiStore.isShareScreen ? 2 : 1\n    const page = Math.floor((jitsiStore.participants.length + twoLocal) / 25)\n    const totalPage = (jitsiStore.participants.length + twoLocal) - page * 25 > 0 ? page + 1 : page\n\n    return (\n      <div className='speaker-wrapper'>\n        <div className='speaker-wrapper-right'>\n          <div className='page'>\n            {\n              totalPage > 1 ?\n                Array(totalPage).fill(0).map((item, index) => {\n                  return (\n                    <button\n                      key={index}\n                      className={currentPage === index + 1\n                        ? 'btn-translate-page active'\n                        : 'btn-translate-page'}\n                      data-index={index + 1}\n                      onClick={this.handleChangePage}\n                    >\n                      {index + 1}\n                    </button>\n                  )\n                }) : <React.Fragment />\n            }\n          </div>\n          {jitsiStore.participants.length || jitsiStore.speaker || jitsiStore.isCamera || jitsiStore.isShareScreen ? (\n            <div className='wrapper-multi-track'>\n              <div className='multi-track' style={this.changeCSSGrid()}>\n                {!jitsiStore.isCamera && !jitsiStore.isShareScreen && currentPage === 1 ? (\n                  <div className='remote-track'>\n                    <div className='track-box'>\n                      <AvatarComponent {...conferenceState.myInfo} size={64} />\n                    </div>\n                  </div>\n                ) : (\n                    <React.Fragment />\n                  )}\n\n                {jitsiStore.isCamera && currentPage === 1 ? (\n                  <div className='remote-track'>\n                    <div className='track-box'>\n                      <Video id={jitsiStore.videoTrack.track.getId()} videoTrack={jitsiStore.videoTrack.track} />\n                    </div>\n                  </div>\n                ) : (\n                    <React.Fragment />\n                  )}\n\n                {jitsiStore.isShareScreen && currentPage === 1 ? (\n                  <div className='remote-track'>\n                    <div className='track-box'>\n                      <Video id={jitsiStore.desktopTrack.track.getId()} videoTrack={jitsiStore.desktopTrack.track} />\n                    </div>\n                  </div>\n                ) : (\n                    <React.Fragment />\n                  )}\n\n                {jitsiStore.participants\n                  .slice(\n                    (currentPage - 1) * 25 - twoLocal < 0 ? 0 : (currentPage - 1) * 25 - twoLocal,\n                    currentPage * 25 - twoLocal\n                  )\n                  .map(({ id, user, displayName }) => {\n                    const tracks = this.props.tracksOfThisParticipant(id)\n                    const hasAudio = this.props.doesParticipantHasAudio(id)\n                    const hasVideo = this.props.doesParticipantHasVideo(id)\n\n                    let userProfile = {}\n\n                    if (user._displayName) {\n                      const [userId] = user._displayName.split('|')\n                      const [profileFound] = conferenceState.conferenceUsers.filter(\n                        ({ user: cUser }) => cUser && cUser._id === userId\n                      )\n\n                      if (profileFound) userProfile = profileFound\n                    }\n\n                    return (\n                      <div\n                        key={id}\n                        className={\n                          conferenceState.conference.pinnedUser === id && hasVideo\n                            ? 'remote-track remote-pinned'\n                            : 'remote-track'\n                        }\n                      >\n                        <div className='track-box'>\n                          {hasVideo ? (\n                            <>\n                              {tracks.map(({ track, mediaType }, i) => {\n                                if (mediaType === MEDIA_TYPE.VIDEO) {\n                                  return <Video key={i} id={track.getId()} videoTrack={track} width='100%' />\n                                }\n                                return <React.Fragment key={i} />\n                              })}\n                            </>\n                          ) : (\n                              <AvatarComponent {...userProfile.user} size={64} />\n                            )}\n                        </div>\n                        <div className='track-box-action'>\n                          <div>\n                            {checkPermission(conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio ? (\n                              <button\n                                style={{ background: hasAudio ? '#fff' : '#f5483f' }}\n                                disabled={this.isOwner(displayName)}\n                                onClick={() => {\n                                  this.REMOTE_MIC_OFF(id, hasAudio)\n                                }}\n                              >\n                                <img src={hasAudio ? microOn : microOff} alt='icon' />\n                              </button>\n                            ) : (\n                                <React.Fragment />\n                              )}\n\n                            {checkPermission(conferenceState.myPermissions, 'CHAT') ? (\n                              <button\n                                onClick={() => {\n                                  if (user._displayName) {\n                                    this.props.conferenceState.setState({\n                                      idChatUser: user._displayName.split('|')[0],\n                                      isPanelOpen: true,\n                                      isShowMessages: true,\n                                      currentTab: _tabs.CHAT\n                                    })\n                                  }\n                                }}\n                              >\n                                <img src={chat} alt='icon' />\n                              </button>\n                            ) : (\n                                <React.Fragment />\n                              )}\n\n                            {checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo ? (\n                              <button\n                                className={\n                                  conferenceState.conference.pinnedUser === id && hasVideo\n                                    ? 'btn-pin pin-active'\n                                    : 'btn-pin'\n                                }\n                                onClick={() => {\n                                  if (checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo) {\n                                    this.props.mutateSetPinnedUser(\n                                      conferenceState.conference.pinnedUser === id ? '' : id\n                                    )\n                                  }\n                                }}\n                              >\n                                <img\n                                  src={conferenceState.conference.pinnedUser === id && hasVideo ? pinnedIcon : pinUser}\n                                  alt='icon'\n                                />\n                              </button>\n                            ) : (\n                                <React.Fragment />\n                              )}\n                          </div>\n                        </div>\n                        <Tooltip title={displayName ? displayName.split('|')[1] : ''}>\n                          <div className='track-box-info'>\n                            <div className='box-info'>\n                              <img src={headphone} alt='icon' />\n                              <span>\n                                {displayName\n                                  ? displayName.split('|')[1].length > 16\n                                    ? displayName.split('|')[1].slice(0, 16) + '...'\n                                    : displayName.split('|')[1]\n                                  : ''}\n                              </span>\n                            </div>\n                            <img src={hasAudio ? micro : microOff1} alt='icon' />\n                          </div>\n                        </Tooltip>\n                      </div>\n                    )\n                  })}\n              </div>\n            </div>\n          ) : (\n              <div className='speaker-no-remote-tracks'>\n                <span>Waiting for others to join</span>\n              </div>\n            )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default MultiLayout\n"]},"metadata":{},"sourceType":"module"}