{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/profile/FormChangePMI.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, M_UPDATE_PMI } from '@graphql';\nimport { returnError, newNotification, parseError } from '@utils';\nimport { observer, inject } from 'mobx-react';\nvar FormChangePMI = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormChangePMI, _React$Component);\n\n  var _super = _createSuper(FormChangePMI);\n\n  function FormChangePMI() {\n    var _this;\n\n    _classCallCheck(this, FormChangePMI);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        var newCode = values.newCode; //MUTATION CREATE USER\n\n        if (!err) {\n          var _this$props$user;\n\n          client.mutate({\n            mutation: M_UPDATE_PMI,\n            variables: {\n              userId: (_this$props$user = _this.props.user) === null || _this$props$user === void 0 ? void 0 : _this$props$user._id,\n              updateUserPMC: newCode\n            }\n          }).then(function (e) {\n            _this.props.form.resetFields();\n\n            _this.props.handleToggleEditPMI();\n\n            _this.props.refetch();\n\n            newNotification(_this.props.i18n.t('notification.updatePMISuccess'), 'success', {\n              container: 'top-right'\n            });\n          }).catch(function (errors) {\n            returnError('Error', {\n              errorMessage: _this.props.i18n.t(parseError(errors))\n            }, {\n              container: 'top-right'\n            });\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormChangePMI, [{\n    key: \"render\",\n    value: function render() {\n      var handleFormatInput = function handleFormatInput(_ref2) {\n        var target = _ref2.target;\n        var value = target.value;\n        if (typeof value !== 'number') return;\n      };\n\n      var _this$props = this.props,\n          i18n = _this$props.i18n,\n          getFieldDecorator = _this$props.form.getFieldDecorator,\n          handleToggleEditPMI = _this$props.handleToggleEditPMI,\n          user = _this$props.user;\n      return /*#__PURE__*/React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        ref: \"form\",\n        style: {\n          width: '380px'\n        },\n        className: \"common-form form-edit-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('newCode', {\n        initialValue: user === null || user === void 0 ? void 0 : user.personalMeetingCode,\n        rules: [{\n          required: true,\n          message: i18n.t('require.requireNewCode')\n        }, {\n          max: 40,\n          message: i18n.t('require.invalidNewCodeMaximumChar')\n        }, {\n          min: 5,\n          message: i18n.t('require.invalidNewCodeMinimumChar')\n        }, {\n          pattern: /\\w$/,\n          message: i18n.t('require.invalidNewCode')\n        }, {\n          pattern: /^\\w/,\n          message: i18n.t('require.invalidNewCode')\n        }, {\n          pattern: /^(^[\\w.]+$|^\\d{3}-\\d{3}-\\d{3}$)/,\n          // /^(^[\\w\\.]{5,40}$|^\\d{3}-\\d{3}-\\d{3}$)/\n          message: i18n.t('require.invalidNewCodeUseSpecialCharacters')\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        onChange: handleFormatInput,\n        placeholder: \"Code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 14\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }, i18n.t('common.saveChanges'))), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        className: \"btn-cancel\",\n        onClick: handleToggleEditPMI,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')))));\n    }\n  }]);\n\n  return FormChangePMI;\n}(React.Component), _temp)) || _class) || _class);\nexport default _Form.create({\n  name: 'normal_login'\n})(withTranslation()(FormChangePMI));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/profile/FormChangePMI.jsx"],"names":["React","withTranslation","client","M_UPDATE_PMI","returnError","newNotification","parseError","observer","inject","FormChangePMI","stores","handleSubmit","e","preventDefault","props","form","validateFields","err","values","newCode","mutate","mutation","variables","userId","user","_id","updateUserPMC","then","resetFields","handleToggleEditPMI","refetch","i18n","t","container","catch","errors","errorMessage","handleFormatInput","target","value","getFieldDecorator","width","initialValue","personalMeetingCode","rules","required","message","max","min","pattern","display","flexDirection","alignItems","marginTop","Component","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Form, Input, Button } from 'antd'\n\nimport { client, M_UPDATE_PMI } from '@graphql'\nimport { returnError, newNotification, parseError } from '@utils'\nimport { observer, inject } from 'mobx-react'\n\n@inject(({ stores }) => stores)\n@observer\nclass FormChangePMI extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      const { newCode } = values\n      //MUTATION CREATE USER\n      if (!err) {\n        client\n          .mutate({\n            mutation: M_UPDATE_PMI,\n            variables: {\n              userId: this.props.user?._id,\n              updateUserPMC: newCode\n            }\n          })\n          .then(e => {\n            this.props.form.resetFields()\n            this.props.handleToggleEditPMI()\n            this.props.refetch()\n            newNotification(this.props.i18n.t('notification.updatePMISuccess'), 'success', {\n              container: 'top-right'\n            })\n          })\n          .catch(errors => {\n            returnError(\n              'Error',\n              { errorMessage: this.props.i18n.t(parseError(errors)) },\n              { container: 'top-right' }\n            )\n          })\n      }\n    })\n  }\n\n  render() {\n    const handleFormatInput = ({ target }) => {\n      const { value } = target\n      if (typeof value !== 'number') return\n    }\n    const {\n      props: {\n        i18n,\n        form: { getFieldDecorator },\n        handleToggleEditPMI,\n        user\n      }\n    } = this\n\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n        ref='form'\n        style={{ width: '380px' }}\n        className='common-form form-edit-password'\n      >\n        <Form.Item label='Code'>\n          {getFieldDecorator('newCode', {\n            initialValue: user?.personalMeetingCode,\n            rules: [\n              {\n                required: true,\n                message: i18n.t('require.requireNewCode')\n              },\n              {\n                max: 40,\n                message: i18n.t('require.invalidNewCodeMaximumChar')\n              },\n              {\n                min: 5,\n                message: i18n.t('require.invalidNewCodeMinimumChar')\n              },\n              {\n                pattern: /\\w$/,\n                message: i18n.t('require.invalidNewCode')\n              },\n              {\n                pattern: /^\\w/,\n                message: i18n.t('require.invalidNewCode')\n              },\n              {\n                pattern: /^(^[\\w.]+$|^\\d{3}-\\d{3}-\\d{3}$)/, // /^(^[\\w\\.]{5,40}$|^\\d{3}-\\d{3}-\\d{3}$)/\n                message: i18n.t('require.invalidNewCodeUseSpecialCharacters')\n              },\n            ],\n          })(<Input onChange={handleFormatInput} placeholder='Code' />)}\n        </Form.Item>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginTop: '10px'\n          }}\n        >\n          <Form.Item>\n            <Button type='primary' htmlType='submit' className='btn-save'>\n              {i18n.t('common.saveChanges')}\n            </Button>\n          </Form.Item>\n          <Form.Item>\n            <Button className='btn-cancel' onClick={handleToggleEditPMI}>\n              {i18n.t('common.cancel')}\n            </Button>\n          </Form.Item>\n        </div>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create({ name: 'normal_login' })(withTranslation()(FormChangePMI))\n"]},"metadata":{},"sourceType":"module"}