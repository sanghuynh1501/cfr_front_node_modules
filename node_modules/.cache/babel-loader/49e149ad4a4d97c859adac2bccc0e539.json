{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/AdBlockDetect.jsx\";\nimport React, { Component } from 'react';\n\nvar AdBlockDetect = /*#__PURE__*/function (_Component) {\n  _inherits(AdBlockDetect, _Component);\n\n  var _super = _createSuper(AdBlockDetect);\n\n  function AdBlockDetect(props) {\n    var _this;\n\n    _classCallCheck(this, AdBlockDetect);\n\n    _this = _super.call(this, props);\n\n    _this.detectAdBlocker = function (notFirstTime) {\n      var head = document.getElementsByTagName('head')[0];\n\n      var noAdBlockDetected = function noAdBlockDetected() {\n        _this.setState({\n          adBlockDetected: false\n        }, function () {\n          if (notFirstTime) _this.props.returnState(false);\n        });\n      };\n\n      var adBlockDetected = function adBlockDetected() {\n        _this.setState({\n          adBlockDetected: true\n        }, function () {\n          if (notFirstTime) _this.props.returnState(true);\n        });\n      }; // clean up stale bait\n\n\n      var oldScript = document.getElementById('adblock-detection');\n\n      if (oldScript) {\n        head.removeChild(oldScript);\n      } // we will dynamically generate some 'bait'.\n\n\n      var script = document.createElement('script');\n      script.id = 'adblock-detection';\n      script.type = 'text/javascript';\n      script.src = '/adframe.js';\n      script.onload = noAdBlockDetected;\n      script.onerror = adBlockDetected;\n      head.appendChild(script);\n    };\n\n    _this.state = {\n      adBlockDetected: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //   this.detectAdBlocker()\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   if (this.props.pathname !== nextProps.pathname) {\n  //     this.detectAdBlocker()\n  //   }\n  // }\n\n\n  _createClass(AdBlockDetect, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        id: \"adblock-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return AdBlockDetect;\n}(Component);\n\nexport default AdBlockDetect;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/AdBlockDetect.jsx"],"names":["React","Component","AdBlockDetect","props","detectAdBlocker","notFirstTime","head","document","getElementsByTagName","noAdBlockDetected","setState","adBlockDetected","returnState","oldScript","getElementById","removeChild","script","createElement","id","type","src","onload","onerror","appendChild","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IACMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAcnBC,eAdmB,GAcD,UAAAC,YAAY,EAAI;AAChC,UAAMC,IAAI,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,CAAb;;AAEA,UAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,cAAKC,QAAL,CACE;AACEC,UAAAA,eAAe,EAAE;AADnB,SADF,EAIE,YAAM;AACJ,cAAIN,YAAJ,EAAkB,MAAKF,KAAL,CAAWS,WAAX,CAAuB,KAAvB;AACnB,SANH;AAQD,OATD;;AAUA,UAAMD,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,cAAKD,QAAL,CACE;AACEC,UAAAA,eAAe,EAAE;AADnB,SADF,EAIE,YAAM;AACJ,cAAIN,YAAJ,EAAkB,MAAKF,KAAL,CAAWS,WAAX,CAAuB,IAAvB;AACnB,SANH;AAQD,OATD,CAbgC,CAuBhC;;;AACA,UAAMC,SAAS,GAAGN,QAAQ,CAACO,cAAT,CAAwB,mBAAxB,CAAlB;;AACA,UAAID,SAAJ,EAAe;AACbP,QAAAA,IAAI,CAACS,WAAL,CAAiBF,SAAjB;AACD,OA3B+B,CA4BhC;;;AACA,UAAMG,MAAM,GAAGT,QAAQ,CAACU,aAAT,CAAuB,QAAvB,CAAf;AACAD,MAAAA,MAAM,CAACE,EAAP,GAAY,mBAAZ;AACAF,MAAAA,MAAM,CAACG,IAAP,GAAc,iBAAd;AACAH,MAAAA,MAAM,CAACI,GAAP,GAAa,aAAb;AACAJ,MAAAA,MAAM,CAACK,MAAP,GAAgBZ,iBAAhB;AACAO,MAAAA,MAAM,CAACM,OAAP,GAAiBX,eAAjB;AACAL,MAAAA,IAAI,CAACiB,WAAL,CAAiBP,MAAjB;AACD,KAlDkB;;AAEjB,UAAKQ,KAAL,GAAa;AACXb,MAAAA,eAAe,EAAE;AADN,KAAb;AAFiB;AAKlB,G,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6BAuCS;AACP,0BAAO;AAAK,QAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;;;EAvDyBV,S;;AA0D5B,eAAeC,aAAf","sourcesContent":["import React, { Component } from 'react'\nclass AdBlockDetect extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      adBlockDetected: false\n    }\n  }\n  // componentDidMount() {\n  //   this.detectAdBlocker()\n  // }\n  // componentWillUpdate(nextProps, nextState) {\n  //   if (this.props.pathname !== nextProps.pathname) {\n  //     this.detectAdBlocker()\n  //   }\n  // }\n  detectAdBlocker = notFirstTime => {\n    const head = document.getElementsByTagName('head')[0]\n\n    const noAdBlockDetected = () => {\n      this.setState(\n        {\n          adBlockDetected: false\n        },\n        () => {\n          if (notFirstTime) this.props.returnState(false)\n        }\n      )\n    }\n    const adBlockDetected = () => {\n      this.setState(\n        {\n          adBlockDetected: true\n        },\n        () => {\n          if (notFirstTime) this.props.returnState(true)\n        }\n      )\n    }\n    // clean up stale bait\n    const oldScript = document.getElementById('adblock-detection')\n    if (oldScript) {\n      head.removeChild(oldScript)\n    }\n    // we will dynamically generate some 'bait'.\n    const script = document.createElement('script')\n    script.id = 'adblock-detection'\n    script.type = 'text/javascript'\n    script.src = '/adframe.js'\n    script.onload = noAdBlockDetected\n    script.onerror = adBlockDetected\n    head.appendChild(script)\n  }\n\n  render() {\n    return <div id='adblock-wrapper'></div>\n  }\n}\n\nexport default AdBlockDetect\n"]},"metadata":{},"sourceType":"module"}