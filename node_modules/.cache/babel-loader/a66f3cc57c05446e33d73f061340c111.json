{"ast":null,"code":"import \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/settings/GoogleAPISetting/index.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport client, { M_UPDATE_SETTING, Q_GET_SETTING } from '@graphql';\nimport { newNotification, parseError } from '@utils';\nimport { observer, inject } from 'mobx-react';\nimport './index.less';\nimport googleCalendarAPI from '../../../../calendar/GoogleCalendarAPI';\nvar GoogleAPISetting = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(GoogleAPISetting, _React$PureComponent);\n\n  var _super = _createSuper(GoogleAPISetting);\n\n  function GoogleAPISetting(props) {\n    var _this;\n\n    _classCallCheck(this, GoogleAPISetting);\n\n    _this = _super.call(this, props);\n\n    _this.querySetting = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        }).then(function (_ref2) {\n          var data = _ref2.data;\n          resolve(data.getSetting);\n        }).catch(function (err) {\n          newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n          resolve(null);\n        });\n      });\n    };\n\n    _this.refetchData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var setting, obj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.querySetting();\n\n            case 2:\n              setting = _context.sent;\n              obj = (setting === null || setting === void 0 ? void 0 : setting.googleAPI) ? JSON.parse(setting.googleAPI) : {};\n\n              _this.setState({\n                setting: obj\n              }); // Update mobx\n\n\n              _this.props.globalState.setisGoogleAPI(!!(obj === null || obj === void 0 ? void 0 : obj.enable));\n\n              if (!!(obj === null || obj === void 0 ? void 0 : obj.enable)) {\n                if (!window.gapi) {\n                  googleCalendarAPI.load();\n                }\n              }\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.componentDidMount = function () {\n      _this.refetchData();\n    };\n\n    _this.handleUpdateSetting = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this.setState({\n                  loading: true\n                });\n\n                data = JSON.stringify({\n                  enable: value\n                });\n                client.mutate({\n                  mutation: M_UPDATE_SETTING,\n                  variables: {\n                    input: {\n                      googleAPI: data\n                    }\n                  }\n                }).then(function (_ref5) {\n                  var data = _ref5.data;\n\n                  if (!data.updateSetting) {\n                    throw new Error('Cập nhật cấu hình thất bại.');\n                  }\n\n                  newNotification('Cập nhật cấu hình thành công.', 'success');\n\n                  _this.refetchData();\n\n                  setTimeout(function () {\n                    _this.setState({\n                      loading: false\n                    });\n                  }, 500);\n                }).catch(function (err) {\n                  newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n                  setTimeout(function () {\n                    _this.setState({\n                      loading: false\n                    });\n                  }, 500);\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      visible: false,\n      setting: null,\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(GoogleAPISetting, [{\n    key: \"render\",\n    value: function render() {\n      var i18n = this.props.i18n;\n      var _this$state = this.state,\n          setting = _this$state.setting,\n          loading = _this$state.loading;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-google-api-setting\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-add-root-google-api\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"on-off\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"Ho\\u1EA1t \\u0111\\u1ED9ng:\"), /*#__PURE__*/React.createElement(_Switch, {\n        checked: setting === null || setting === void 0 ? void 0 : setting.enable,\n        onChange: this.handleUpdateSetting,\n        loading: loading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }\n      }, i18n.t('setting.googleAPI.description')), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }\n      }, i18n.t('setting.googleAPI.description1')))));\n    }\n  }]);\n\n  return GoogleAPISetting;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default withTranslation()(GoogleAPISetting);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/settings/GoogleAPISetting/index.jsx"],"names":["React","withTranslation","client","M_UPDATE_SETTING","Q_GET_SETTING","newNotification","parseError","observer","inject","googleCalendarAPI","GoogleAPISetting","stores","props","querySetting","Promise","resolve","reject","query","fetchPolicy","then","data","getSetting","catch","err","i18n","t","refetchData","setting","obj","googleAPI","JSON","parse","setState","globalState","setisGoogleAPI","enable","window","gapi","load","componentDidMount","handleUpdateSetting","value","loading","stringify","mutate","mutation","variables","input","updateSetting","Error","setTimeout","state","visible","PureComponent"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,OAAOC,MAAP,IAAiBC,gBAAjB,EAAmCC,aAAnC,QAAwD,UAAxD;AACA,SAASC,eAAT,EAA0BC,UAA1B,QAA4C,QAA5C;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;AACA,OAAO,cAAP;AACA,OAAOC,iBAAP,MAA8B,wCAA9B;IAIMC,gB,WAFLF,MAAM,CAAC;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,gBACNJ,Q;;;;;AAEC,4BAAYK,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UASnBC,YATmB,GASJ,YAAM;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCd,QAAAA,MAAM,CACHe,KADH,CACS;AACLA,UAAAA,KAAK,EAAEb,aADF;AAELc,UAAAA,WAAW,EAAE;AAFR,SADT,EAKGC,IALH,CAKQ,iBAAc;AAAA,cAAXC,IAAW,SAAXA,IAAW;AAClBL,UAAAA,OAAO,CAACK,IAAI,CAACC,UAAN,CAAP;AACD,SAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZlB,UAAAA,eAAe,CAAC,MAAKO,KAAL,CAAWY,IAAX,CAAgBC,CAAhB,CAAkBnB,UAAU,CAACiB,GAAD,CAA5B,CAAD,EAAqC,QAArC,CAAf;AACAR,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD,SAXH;AAYD,OAbM,CAAP;AAcD,KAxBkB;;AAAA,UA0BnBW,WA1BmB,yEA0BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACU,MAAKb,YAAL,EADV;;AAAA;AACNc,cAAAA,OADM;AAENC,cAAAA,GAFM,GAEA,CAACD,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEE,SAAV,IAAuBC,IAAI,CAACC,KAAL,CAAWJ,OAAO,CAACE,SAAnB,CAAvB,GAAuD,EAFvD;;AAGZ,oBAAKG,QAAL,CAAc;AAAEL,gBAAAA,OAAO,EAAEC;AAAX,eAAd,EAHY,CAKZ;;;AACA,oBAAKhB,KAAL,CAAWqB,WAAX,CAAuBC,cAAvB,CAAsC,CAAC,EAAEN,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEO,MAAP,CAAvC;;AACA,kBAAI,CAAC,EAAEP,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEO,MAAP,CAAL,EAAqB;AACnB,oBAAI,CAACC,MAAM,CAACC,IAAZ,EAAkB;AAChB5B,kBAAAA,iBAAiB,CAAC6B,IAAlB;AACD;AAEF;;AAZW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1BK;;AAAA,UAyCnBC,iBAzCmB,GAyCC,YAAM;AACxB,YAAKb,WAAL;AACD,KA3CkB;;AAAA,UAgDnBc,mBAhDmB;AAAA,2EAgDG,kBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACpB,sBAAKT,QAAL,CAAc;AAAEU,kBAAAA,OAAO,EAAE;AAAX,iBAAd;;AAEMtB,gBAAAA,IAHc,GAGPU,IAAI,CAACa,SAAL,CAAe;AAC1BR,kBAAAA,MAAM,EAAEM;AADkB,iBAAf,CAHO;AAOpBvC,gBAAAA,MAAM,CACH0C,MADH,CACU;AACNC,kBAAAA,QAAQ,EAAE1C,gBADJ;AAEN2C,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,KAAK,EAAE;AACLlB,sBAAAA,SAAS,EAAET;AADN;AADE;AAFL,iBADV,EASGD,IATH,CASQ,iBAAc;AAAA,sBAAXC,IAAW,SAAXA,IAAW;;AAClB,sBAAI,CAACA,IAAI,CAAC4B,aAAV,EAAyB;AACvB,0BAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AACD5C,kBAAAA,eAAe,CAAC,+BAAD,EAAkC,SAAlC,CAAf;;AACA,wBAAKqB,WAAL;;AACAwB,kBAAAA,UAAU,CAAC,YAAM;AACf,0BAAKlB,QAAL,CAAc;AAAEU,sBAAAA,OAAO,EAAE;AAAX,qBAAd;AACD,mBAFS,EAEP,GAFO,CAAV;AAGD,iBAlBH,EAmBGpB,KAnBH,CAmBS,UAAAC,GAAG,EAAI;AACZlB,kBAAAA,eAAe,CAAC,MAAKO,KAAL,CAAWY,IAAX,CAAgBC,CAAhB,CAAkBnB,UAAU,CAACiB,GAAD,CAA5B,CAAD,EAAqC,QAArC,CAAf;AACA2B,kBAAAA,UAAU,CAAC,YAAM;AACf,0BAAKlB,QAAL,CAAc;AAAEU,sBAAAA,OAAO,EAAE;AAAX,qBAAd;AACD,mBAFS,EAEP,GAFO,CAAV;AAGD,iBAxBH;;AAPoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAhDH;;AAAA;AAAA;AAAA;AAAA;;AAEjB,UAAKS,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXzB,MAAAA,OAAO,EAAE,IAFE;AAGXe,MAAAA,OAAO,EAAE;AAHE,KAAb;AAFiB;AAOlB;;;;6BA8EQ;AAAA,UACClB,IADD,GACU,KAAKZ,KADf,CACCY,IADD;AAAA,wBAEsB,KAAK2B,KAF3B;AAAA,UAECxB,OAFD,eAECA,OAFD;AAAA,UAEUe,OAFV,eAEUA,OAFV;AAGP,0BACE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AACE,QAAA,OAAO,EAAEf,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEQ,MADpB;AAEE,QAAA,QAAQ,EAAE,KAAKK,mBAFjB;AAGE,QAAA,OAAO,EAAEE,OAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,CADF,eAYE;AAAK,QAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIlB,IAAI,CAACC,CAAL,CAAO,+BAAP,CAAJ,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKD,IAAI,CAACC,CAAL,CAAO,gCAAP,CAAL,CADF,CAFF,CAZF,CADF;AAqBD;;;;EA9G4BzB,KAAK,CAACqD,a;AAiHrC,eAAepD,eAAe,GAAGS,gBAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Switch } from 'antd';\nimport client, { M_UPDATE_SETTING, Q_GET_SETTING } from '@graphql'\nimport { newNotification, parseError } from '@utils'\nimport { observer, inject } from 'mobx-react'\nimport './index.less'\nimport googleCalendarAPI from '../../../../calendar/GoogleCalendarAPI'\n\n@inject(({ stores }) => stores)\n@observer\nclass GoogleAPISetting extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      setting: null,\n      loading: false\n    }\n  }\n\n  querySetting = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        })\n        .then(({ data }) => {\n          resolve(data.getSetting)\n        })\n        .catch(err => {\n          newNotification(this.props.i18n.t(parseError(err)), 'danger')\n          resolve(null)\n        })\n    })\n  }\n\n  refetchData = async () => {\n    const setting = await this.querySetting()\n    const obj = (setting?.googleAPI) ? JSON.parse(setting.googleAPI) : {}\n    this.setState({ setting: obj })\n\n    // Update mobx\n    this.props.globalState.setisGoogleAPI(!!(obj?.enable))\n    if (!!(obj?.enable)) {\n      if (!window.gapi) {\n        googleCalendarAPI.load()\n      }\n\n    }\n  }\n\n  componentDidMount = () => {\n    this.refetchData()\n  }\n\n\n\n\n  handleUpdateSetting = async value => {\n    this.setState({ loading: true })\n\n    const data = JSON.stringify({\n      enable: value\n    })\n\n    client\n      .mutate({\n        mutation: M_UPDATE_SETTING,\n        variables: {\n          input: {\n            googleAPI: data\n          }\n        }\n      })\n      .then(({ data }) => {\n        if (!data.updateSetting) {\n          throw new Error('Cập nhật cấu hình thất bại.')\n        }\n        newNotification('Cập nhật cấu hình thành công.', 'success')\n        this.refetchData()\n        setTimeout(() => {\n          this.setState({ loading: false })\n        }, 500)\n      })\n      .catch(err => {\n        newNotification(this.props.i18n.t(parseError(err)), 'danger')\n        setTimeout(() => {\n          this.setState({ loading: false })\n        }, 500)\n      })\n\n  }\n\n\n\n  render() {\n    const { i18n } = this.props\n    const { setting, loading } = this.state\n    return (\n      <div className='wrapper-google-api-setting'>\n        <div className='wrapper-add-root-google-api'>\n          <div className='on-off'>\n            <p>Hoạt động:</p>\n            <Switch\n              checked={setting?.enable}\n              onChange={this.handleUpdateSetting}\n              loading={loading}\n            />\n          </div>\n        </div>\n\n        <div className='wrapper-description'>\n          <p>{i18n.t('setting.googleAPI.description')}</p>\n          <ul>\n            <li>{i18n.t('setting.googleAPI.description1')}</li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(GoogleAPISetting)"]},"metadata":{},"sourceType":"module"}