{"ast":null,"code":"import _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _initializerDefineProperty from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _applyDecoratedDescriptor from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _descriptor31, _descriptor32, _descriptor33, _descriptor34, _descriptor35, _descriptor36, _descriptor37, _descriptor38, _descriptor39, _descriptor40, _descriptor41, _descriptor42, _descriptor43, _descriptor44, _descriptor45, _descriptor46, _descriptor47, _descriptor48, _descriptor49, _descriptor50, _descriptor51, _descriptor52, _descriptor53, _descriptor54, _descriptor55, _descriptor56, _descriptor57, _descriptor58, _descriptor59, _descriptor60, _descriptor61, _descriptor62, _descriptor63, _descriptor64, _descriptor65, _descriptor66, _descriptor67, _temp;\n\nimport { observable, action } from 'mobx';\nimport { _drawType, _userStatus } from '@constants';\nvar initialState = {\n  // *_: Collapse\n  isPanelOpen: false,\n  currentTab: '',\n  // NOTE: Chat\n  idChatUser: null,\n  unreadMessage: 0,\n  isShowMessages: false,\n  isShowBoxChat: false,\n  infoChatUser: {},\n  // NOTE: Participants\n  isShowParticipants: false,\n  // NOTE: Share file\n  isShowShareFile: false,\n  // NOTE: Poll\n  isShowPoll: false,\n  isShowPollManagement: false,\n  isShowPollResult: false,\n  canBePersonalPublic: false,\n  hasPolling: false,\n  pollsInfo: [],\n  donePolls: [],\n  publicPolls: [],\n  // NOTE: Attendances\n  isShowAttendance: false,\n  isShowAttendancesManagement: false,\n  hasAttendance: false,\n  attendanceInfo: {},\n  doneAttendances: [],\n  // *_: RemoteTrack\n  offsetRemoteTracks: 0,\n  // *_: DATA\n  isShowPermission: false,\n  myUserId: null,\n  myInfo: null,\n  myRole: null,\n  myPermissions: [],\n  conference: {},\n  conferenceUsers: [],\n  statusConference: _userStatus.ONLINE,\n  // *_: Resources Conference\n  myResources: [],\n  otherResources: [],\n  fileOpen: null,\n  uploadFile: null,\n  modalResourceVisible: false,\n  // NOTE: Slide\n  carousel: null,\n  positionSlide: 0,\n  // NOTE: Image - Draw\n  drawData: [],\n  widthImage: null,\n  heightImage: null,\n  colorLine: '#9E9E9E',\n  heightLine: 1,\n  activeDraw: false,\n  clearDraw: null,\n  drawables: [],\n  newDrawable: [],\n  newDrawableType: _drawType.FREEPATH,\n  // *_: JITSI API\n  LEAVE: function LEAVE() {},\n  onAudio: function onAudio() {},\n  offAudio: function offAudio() {},\n  reOrderUserAtFirstPlace: function reOrderUserAtFirstPlace() {},\n  setPinnedMode: function setPinnedMode() {},\n  setSpeakerByUID: function setSpeakerByUID() {},\n  setJitsiDisplayName: function setJitsiDisplayName() {},\n  sourceDesktopElectron: null,\n  recording: null,\n  //NOTE: QnA\n  isShowQnAManagement: false,\n  isShowQnA: false,\n  hasQnA: false,\n  activeQnA: {},\n  // Set function refetch data\n  NullFunction: function NullFunction() {}\n};\nexport var ConferenceState = (_class = (_temp = function ConferenceState() {\n  _classCallCheck(this, ConferenceState);\n\n  _initializerDefineProperty(this, \"unreadMessage\", _descriptor, this);\n\n  _initializerDefineProperty(this, \"isPanelOpen\", _descriptor2, this);\n\n  _initializerDefineProperty(this, \"currentTab\", _descriptor3, this);\n\n  _initializerDefineProperty(this, \"isShowParticipants\", _descriptor4, this);\n\n  _initializerDefineProperty(this, \"offsetRemoteTracks\", _descriptor5, this);\n\n  _initializerDefineProperty(this, \"isShowPoll\", _descriptor6, this);\n\n  _initializerDefineProperty(this, \"isShowPollManagement\", _descriptor7, this);\n\n  _initializerDefineProperty(this, \"isShowPollResult\", _descriptor8, this);\n\n  _initializerDefineProperty(this, \"hasPolling\", _descriptor9, this);\n\n  _initializerDefineProperty(this, \"pollsInfo\", _descriptor10, this);\n\n  _initializerDefineProperty(this, \"donePolls\", _descriptor11, this);\n\n  _initializerDefineProperty(this, \"publicPolls\", _descriptor12, this);\n\n  _initializerDefineProperty(this, \"addPollsInfo\", _descriptor13, this);\n\n  _initializerDefineProperty(this, \"updatePollsInfo\", _descriptor14, this);\n\n  _initializerDefineProperty(this, \"isShowQnAManagement\", _descriptor15, this);\n\n  _initializerDefineProperty(this, \"isShowQnA\", _descriptor16, this);\n\n  _initializerDefineProperty(this, \"hasQnA\", _descriptor17, this);\n\n  _initializerDefineProperty(this, \"activeQnA\", _descriptor18, this);\n\n  _initializerDefineProperty(this, \"isShowAttendance\", _descriptor19, this);\n\n  _initializerDefineProperty(this, \"isShowAttendancesManagement\", _descriptor20, this);\n\n  _initializerDefineProperty(this, \"hasAttendance\", _descriptor21, this);\n\n  _initializerDefineProperty(this, \"attendanceInfo\", _descriptor22, this);\n\n  _initializerDefineProperty(this, \"doneAttendances\", _descriptor23, this);\n\n  _initializerDefineProperty(this, \"isShowMessages\", _descriptor24, this);\n\n  _initializerDefineProperty(this, \"isShowBoxChat\", _descriptor25, this);\n\n  _initializerDefineProperty(this, \"idChatUser\", _descriptor26, this);\n\n  _initializerDefineProperty(this, \"infoChatUser\", _descriptor27, this);\n\n  _initializerDefineProperty(this, \"positionSlide\", _descriptor28, this);\n\n  _initializerDefineProperty(this, \"modalResourceVisible\", _descriptor29, this);\n\n  _initializerDefineProperty(this, \"carousel\", _descriptor30, this);\n\n  _initializerDefineProperty(this, \"myResources\", _descriptor31, this);\n\n  _initializerDefineProperty(this, \"otherResources\", _descriptor32, this);\n\n  _initializerDefineProperty(this, \"fileOpen\", _descriptor33, this);\n\n  _initializerDefineProperty(this, \"uploadFile\", _descriptor34, this);\n\n  _initializerDefineProperty(this, \"drawData\", _descriptor35, this);\n\n  _initializerDefineProperty(this, \"widthImage\", _descriptor36, this);\n\n  _initializerDefineProperty(this, \"heightImage\", _descriptor37, this);\n\n  _initializerDefineProperty(this, \"activeDraw\", _descriptor38, this);\n\n  _initializerDefineProperty(this, \"heightLine\", _descriptor39, this);\n\n  _initializerDefineProperty(this, \"colorLine\", _descriptor40, this);\n\n  _initializerDefineProperty(this, \"clearDraw\", _descriptor41, this);\n\n  _initializerDefineProperty(this, \"drawables\", _descriptor42, this);\n\n  _initializerDefineProperty(this, \"newDrawable\", _descriptor43, this);\n\n  _initializerDefineProperty(this, \"newDrawableType\", _descriptor44, this);\n\n  _initializerDefineProperty(this, \"isShowPermission\", _descriptor45, this);\n\n  _initializerDefineProperty(this, \"myUserId\", _descriptor46, this);\n\n  _initializerDefineProperty(this, \"myInfo\", _descriptor47, this);\n\n  _initializerDefineProperty(this, \"myRole\", _descriptor48, this);\n\n  _initializerDefineProperty(this, \"myPermissions\", _descriptor49, this);\n\n  _initializerDefineProperty(this, \"conference\", _descriptor50, this);\n\n  _initializerDefineProperty(this, \"conferenceUsers\", _descriptor51, this);\n\n  _initializerDefineProperty(this, \"statusConference\", _descriptor52, this);\n\n  _initializerDefineProperty(this, \"LEAVE\", _descriptor53, this);\n\n  _initializerDefineProperty(this, \"onAudio\", _descriptor54, this);\n\n  _initializerDefineProperty(this, \"offAudio\", _descriptor55, this);\n\n  _initializerDefineProperty(this, \"reOrderUserAtFirstPlace\", _descriptor56, this);\n\n  _initializerDefineProperty(this, \"setPinnedMode\", _descriptor57, this);\n\n  _initializerDefineProperty(this, \"setSpeakerByUID\", _descriptor58, this);\n\n  _initializerDefineProperty(this, \"setJitsiDisplayName\", _descriptor59, this);\n\n  _initializerDefineProperty(this, \"sourceDesktopElectron\", _descriptor60, this);\n\n  _initializerDefineProperty(this, \"recording\", _descriptor61, this);\n\n  _initializerDefineProperty(this, \"refetchMyFiles\", _descriptor62, this);\n\n  _initializerDefineProperty(this, \"refetchAllFiles\", _descriptor63, this);\n\n  _initializerDefineProperty(this, \"setFunc\", _descriptor64, this);\n\n  _initializerDefineProperty(this, \"setConnectionApi\", _descriptor65, this);\n\n  _initializerDefineProperty(this, \"clearStore\", _descriptor66, this);\n\n  _initializerDefineProperty(this, \"setState\", _descriptor67, this);\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"unreadMessage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.unreadMessage;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"isPanelOpen\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isPanelOpen;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"currentTab\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.currentTab;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"isShowParticipants\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowParticipants;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"offsetRemoteTracks\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.offsetRemoteTracks;\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"isShowPoll\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowPoll;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"isShowPollManagement\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowPollManagement;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"isShowPollResult\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowPollResult;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"hasPolling\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.hasPolling;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"pollsInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.pollsInfo;\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"donePolls\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.donePolls;\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"publicPolls\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.publicPolls;\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"addPollsInfo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this = this;\n\n    return function (pollsInfo) {\n      _this.pollsInfo = pollsInfo.filter(function (pollInfo) {\n        return pollInfo.isActive;\n      });\n      _this.donePolls = pollsInfo.filter(function (pollInfo) {\n        return !pollInfo.isActive;\n      });\n      _this.publicPolls = pollsInfo.filter(function (pollInfo) {\n        return pollInfo.isPublic;\n      });\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"updatePollsInfo\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function (pollInfo) {\n      if (!pollInfo.isActive) {\n        _this2.pollsInfo = _toConsumableArray(_this2.pollsInfo.filter(function (item) {\n          return item._id !== pollInfo._id;\n        }));\n        _this2.donePolls = [].concat(_toConsumableArray(_this2.donePolls.filter(function (item) {\n          return item._id !== pollInfo._id;\n        })), [pollInfo]);\n      } else {\n        _this2.pollsInfo = [].concat(_toConsumableArray(_this2.pollsInfo.filter(function (item) {\n          return item._id !== pollInfo._id;\n        })), [pollInfo]);\n        _this2.donePolls = _toConsumableArray(_this2.donePolls.filter(function (item) {\n          return item._id !== pollInfo._id;\n        }));\n\n        if (pollInfo.isPublic) {\n          _this2.publicPolls = [].concat(_toConsumableArray(_this2.pollsInfo.filter(function (item) {\n            return item._id !== pollInfo._id;\n          })), [pollInfo]);\n        }\n      }\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"isShowQnAManagement\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowQnAManagement;\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"isShowQnA\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowQnA;\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"hasQnA\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.hasQnA;\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"activeQnA\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.activeQnA;\n  }\n}), _descriptor19 = _applyDecoratedDescriptor(_class.prototype, \"isShowAttendance\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowAttendance;\n  }\n}), _descriptor20 = _applyDecoratedDescriptor(_class.prototype, \"isShowAttendancesManagement\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowAttendancesManagement;\n  }\n}), _descriptor21 = _applyDecoratedDescriptor(_class.prototype, \"hasAttendance\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.hasAttendance;\n  }\n}), _descriptor22 = _applyDecoratedDescriptor(_class.prototype, \"attendanceInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.attendanceInfo;\n  }\n}), _descriptor23 = _applyDecoratedDescriptor(_class.prototype, \"doneAttendances\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.doneAttendances;\n  }\n}), _descriptor24 = _applyDecoratedDescriptor(_class.prototype, \"isShowMessages\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowMessages;\n  }\n}), _descriptor25 = _applyDecoratedDescriptor(_class.prototype, \"isShowBoxChat\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowBoxChat;\n  }\n}), _descriptor26 = _applyDecoratedDescriptor(_class.prototype, \"idChatUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.idChatUser;\n  }\n}), _descriptor27 = _applyDecoratedDescriptor(_class.prototype, \"infoChatUser\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.infoChatUser;\n  }\n}), _descriptor28 = _applyDecoratedDescriptor(_class.prototype, \"positionSlide\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.positionSlide;\n  }\n}), _descriptor29 = _applyDecoratedDescriptor(_class.prototype, \"modalResourceVisible\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.modalResourceVisible;\n  }\n}), _descriptor30 = _applyDecoratedDescriptor(_class.prototype, \"carousel\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.carousel;\n  }\n}), _descriptor31 = _applyDecoratedDescriptor(_class.prototype, \"myResources\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.myResources;\n  }\n}), _descriptor32 = _applyDecoratedDescriptor(_class.prototype, \"otherResources\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.otherResources;\n  }\n}), _descriptor33 = _applyDecoratedDescriptor(_class.prototype, \"fileOpen\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.fileOpen;\n  }\n}), _descriptor34 = _applyDecoratedDescriptor(_class.prototype, \"uploadFile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.uploadFile;\n  }\n}), _descriptor35 = _applyDecoratedDescriptor(_class.prototype, \"drawData\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.drawData;\n  }\n}), _descriptor36 = _applyDecoratedDescriptor(_class.prototype, \"widthImage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.widthImage;\n  }\n}), _descriptor37 = _applyDecoratedDescriptor(_class.prototype, \"heightImage\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.heightImage;\n  }\n}), _descriptor38 = _applyDecoratedDescriptor(_class.prototype, \"activeDraw\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.activeDraw;\n  }\n}), _descriptor39 = _applyDecoratedDescriptor(_class.prototype, \"heightLine\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.heightLine;\n  }\n}), _descriptor40 = _applyDecoratedDescriptor(_class.prototype, \"colorLine\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.colorLine;\n  }\n}), _descriptor41 = _applyDecoratedDescriptor(_class.prototype, \"clearDraw\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.clearDraw;\n  }\n}), _descriptor42 = _applyDecoratedDescriptor(_class.prototype, \"drawables\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.drawables;\n  }\n}), _descriptor43 = _applyDecoratedDescriptor(_class.prototype, \"newDrawable\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.newDrawable;\n  }\n}), _descriptor44 = _applyDecoratedDescriptor(_class.prototype, \"newDrawableType\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.newDrawableType;\n  }\n}), _descriptor45 = _applyDecoratedDescriptor(_class.prototype, \"isShowPermission\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.isShowPermission;\n  }\n}), _descriptor46 = _applyDecoratedDescriptor(_class.prototype, \"myUserId\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.myUserId;\n  }\n}), _descriptor47 = _applyDecoratedDescriptor(_class.prototype, \"myInfo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.myInfo;\n  }\n}), _descriptor48 = _applyDecoratedDescriptor(_class.prototype, \"myRole\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.myRole;\n  }\n}), _descriptor49 = _applyDecoratedDescriptor(_class.prototype, \"myPermissions\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.myPermissions;\n  }\n}), _descriptor50 = _applyDecoratedDescriptor(_class.prototype, \"conference\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.conference;\n  }\n}), _descriptor51 = _applyDecoratedDescriptor(_class.prototype, \"conferenceUsers\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.conferenceUsers;\n  }\n}), _descriptor52 = _applyDecoratedDescriptor(_class.prototype, \"statusConference\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.statusConference;\n  }\n}), _descriptor53 = _applyDecoratedDescriptor(_class.prototype, \"LEAVE\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.LEAVE;\n  }\n}), _descriptor54 = _applyDecoratedDescriptor(_class.prototype, \"onAudio\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.onAudio;\n  }\n}), _descriptor55 = _applyDecoratedDescriptor(_class.prototype, \"offAudio\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.offAudio;\n  }\n}), _descriptor56 = _applyDecoratedDescriptor(_class.prototype, \"reOrderUserAtFirstPlace\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.reOrderUserAtFirstPlace;\n  }\n}), _descriptor57 = _applyDecoratedDescriptor(_class.prototype, \"setPinnedMode\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.setPinnedMode;\n  }\n}), _descriptor58 = _applyDecoratedDescriptor(_class.prototype, \"setSpeakerByUID\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.setSpeakerByUID;\n  }\n}), _descriptor59 = _applyDecoratedDescriptor(_class.prototype, \"setJitsiDisplayName\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.setJitsiDisplayName;\n  }\n}), _descriptor60 = _applyDecoratedDescriptor(_class.prototype, \"sourceDesktopElectron\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.sourceDesktopElectron;\n  }\n}), _descriptor61 = _applyDecoratedDescriptor(_class.prototype, \"recording\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.recording;\n  }\n}), _descriptor62 = _applyDecoratedDescriptor(_class.prototype, \"refetchMyFiles\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.NullFunction;\n  }\n}), _descriptor63 = _applyDecoratedDescriptor(_class.prototype, \"refetchAllFiles\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    return initialState.NullFunction;\n  }\n}), _descriptor64 = _applyDecoratedDescriptor(_class.prototype, \"setFunc\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this3 = this;\n\n    return function (name) {\n      Object.keys(name).map(function (key) {\n        _this3[key] = name[key];\n        return key;\n      });\n    };\n  }\n}), _descriptor65 = _applyDecoratedDescriptor(_class.prototype, \"setConnectionApi\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this4 = this;\n\n    return function (apis) {\n      Object.keys(apis).map(function (key) {\n        _this4[key] = apis[key];\n        return key;\n      });\n    };\n  }\n}), _descriptor66 = _applyDecoratedDescriptor(_class.prototype, \"clearStore\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this5 = this;\n\n    return function () {\n      Object.keys(initialState).map(function (key) {\n        _this5[key] = initialState[key];\n        return key;\n      });\n    };\n  }\n}), _descriptor67 = _applyDecoratedDescriptor(_class.prototype, \"setState\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function initializer() {\n    var _this6 = this;\n\n    return function (state) {\n      Object.keys(state).map(function (key) {\n        _this6[key] = state[key];\n        return key;\n      });\n    };\n  }\n})), _class);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/store/conferenceState.js"],"names":["observable","action","_drawType","_userStatus","initialState","isPanelOpen","currentTab","idChatUser","unreadMessage","isShowMessages","isShowBoxChat","infoChatUser","isShowParticipants","isShowShareFile","isShowPoll","isShowPollManagement","isShowPollResult","canBePersonalPublic","hasPolling","pollsInfo","donePolls","publicPolls","isShowAttendance","isShowAttendancesManagement","hasAttendance","attendanceInfo","doneAttendances","offsetRemoteTracks","isShowPermission","myUserId","myInfo","myRole","myPermissions","conference","conferenceUsers","statusConference","ONLINE","myResources","otherResources","fileOpen","uploadFile","modalResourceVisible","carousel","positionSlide","drawData","widthImage","heightImage","colorLine","heightLine","activeDraw","clearDraw","drawables","newDrawable","newDrawableType","FREEPATH","LEAVE","onAudio","offAudio","reOrderUserAtFirstPlace","setPinnedMode","setSpeakerByUID","setJitsiDisplayName","sourceDesktopElectron","recording","isShowQnAManagement","isShowQnA","hasQnA","activeQnA","NullFunction","ConferenceState","filter","pollInfo","isActive","isPublic","item","_id","name","Object","keys","map","key","apis","state"],"mappings":"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","sourcesContent":["import { observable, action } from 'mobx'\nimport { _drawType, _userStatus } from '@constants'\n\nconst initialState = {\n  // *_: Collapse\n  isPanelOpen: false,\n  currentTab: '',\n\n  // NOTE: Chat\n  idChatUser: null,\n  unreadMessage: 0,\n  isShowMessages: false,\n  isShowBoxChat: false,\n  infoChatUser: {},\n\n  // NOTE: Participants\n  isShowParticipants: false,\n\n  // NOTE: Share file\n  isShowShareFile: false,\n\n  // NOTE: Poll\n  isShowPoll: false,\n  isShowPollManagement: false,\n  isShowPollResult: false,\n  canBePersonalPublic: false,\n  hasPolling: false,\n  pollsInfo: [],\n  donePolls: [],\n  publicPolls: [],\n\n  // NOTE: Attendances\n  isShowAttendance: false,\n  isShowAttendancesManagement: false,\n  hasAttendance: false,\n  attendanceInfo: {},\n  doneAttendances: [],\n\n  // *_: RemoteTrack\n  offsetRemoteTracks: 0,\n\n  // *_: DATA\n  isShowPermission: false,\n  myUserId: null,\n  myInfo: null,\n  myRole: null,\n  myPermissions: [],\n  conference: {},\n  conferenceUsers: [],\n  statusConference: _userStatus.ONLINE,\n\n  // *_: Resources Conference\n  myResources: [],\n  otherResources: [],\n  fileOpen: null,\n  uploadFile: null,\n  modalResourceVisible: false,\n\n  // NOTE: Slide\n  carousel: null,\n  positionSlide: 0,\n\n  // NOTE: Image - Draw\n  drawData: [],\n  widthImage: null,\n  heightImage: null,\n  colorLine: '#9E9E9E',\n  heightLine: 1,\n  activeDraw: false,\n  clearDraw: null,\n  drawables: [],\n  newDrawable: [],\n  newDrawableType: _drawType.FREEPATH,\n\n  // *_: JITSI API\n  LEAVE: () => { },\n  onAudio: () => { },\n  offAudio: () => { },\n  reOrderUserAtFirstPlace: () => { },\n  setPinnedMode: () => { },\n  setSpeakerByUID: () => { },\n  setJitsiDisplayName: () => { },\n\n  sourceDesktopElectron: null,\n  recording: null,\n\n  //NOTE: QnA\n\n  isShowQnAManagement: false,\n  isShowQnA: false,\n  hasQnA: false,\n  activeQnA: {},\n\n\n  // Set function refetch data\n  NullFunction: () => { },\n\n}\n\nexport class ConferenceState {\n  // *_: Screen state\n\n  // *__: Messages\n\n  @observable\n  unreadMessage = initialState.unreadMessage\n\n  // *__: Panel\n\n  @observable\n  isPanelOpen = initialState.isPanelOpen\n\n  // *__: Panel children\n\n  @observable\n  currentTab = initialState.currentTab\n\n  // *___: Participant\n\n  @observable\n  isShowParticipants = initialState.isShowParticipants\n\n  // *___: RemoteTracks\n\n  @observable\n  offsetRemoteTracks = initialState.offsetRemoteTracks\n\n  // *___: Polling\n\n  @observable\n  isShowPoll = initialState.isShowPoll\n\n  @observable\n  isShowPollManagement = initialState.isShowPollManagement\n\n  @observable\n  isShowPollResult = initialState.isShowPollResult\n\n  @observable\n  hasPolling = initialState.hasPolling\n\n  @observable\n  pollsInfo = initialState.pollsInfo\n\n  @observable\n  donePolls = initialState.donePolls\n\n  @observable\n  publicPolls = initialState.publicPolls\n\n  @action\n  addPollsInfo = pollsInfo => {\n    this.pollsInfo = pollsInfo.filter(pollInfo => pollInfo.isActive)\n    this.donePolls = pollsInfo.filter(pollInfo => !pollInfo.isActive)\n    this.publicPolls = pollsInfo.filter(pollInfo => pollInfo.isPublic)\n  }\n\n  @action\n  updatePollsInfo = pollInfo => {\n    if (!pollInfo.isActive) {\n      this.pollsInfo = [...this.pollsInfo.filter(item => item._id !== pollInfo._id)]\n      this.donePolls = [...this.donePolls.filter(item => item._id !== pollInfo._id), pollInfo]\n    } else {\n      this.pollsInfo = [...this.pollsInfo.filter(item => item._id !== pollInfo._id), pollInfo]\n      this.donePolls = [...this.donePolls.filter(item => item._id !== pollInfo._id)]\n      if (pollInfo.isPublic) {\n        this.publicPolls = [...this.pollsInfo.filter(item => item._id !== pollInfo._id), pollInfo]\n      }\n    }\n  }\n\n  // *___: Q&A:\n\n  @observable\n  isShowQnAManagement = initialState.isShowQnAManagement\n\n  @observable\n  isShowQnA = initialState.isShowQnA\n\n  @observable\n  hasQnA = initialState.hasQnA\n\n  @observable\n  activeQnA = initialState.activeQnA\n\n  // *___: Attendance\n\n  @observable\n  isShowAttendance = initialState.isShowAttendance\n\n  @observable\n  isShowAttendancesManagement = initialState.isShowAttendancesManagement\n\n  @observable\n  hasAttendance = initialState.hasAttendance\n\n  @observable\n  attendanceInfo = initialState.attendanceInfo\n\n  @observable\n  doneAttendances = initialState.doneAttendances\n\n  // *___: Message\n\n  @observable\n  isShowMessages = initialState.isShowMessages\n\n  @observable\n  isShowBoxChat = initialState.isShowBoxChat\n\n  @observable\n  idChatUser = initialState.idChatUser\n\n  @observable\n  infoChatUser = initialState.infoChatUser\n\n  // *___: Resources Conference\n  @observable\n  positionSlide = initialState.positionSlide\n\n  @observable\n  modalResourceVisible = initialState.modalResourceVisible\n\n  @observable\n  carousel = initialState.carousel\n\n  @observable\n  myResources = initialState.myResources\n\n  @observable\n  otherResources = initialState.otherResources\n\n  @observable\n  fileOpen = initialState.fileOpen\n\n  @observable\n  uploadFile = initialState.uploadFile\n\n  // *___: Draw Canvas\n  @observable\n  drawData = initialState.drawData\n\n  @observable\n  widthImage = initialState.widthImage\n\n  @observable\n  heightImage = initialState.heightImage\n\n  @observable\n  activeDraw = initialState.activeDraw\n\n  @observable\n  heightLine = initialState.heightLine\n\n  @observable\n  colorLine = initialState.colorLine\n\n  @observable\n  clearDraw = initialState.clearDraw\n\n  @observable\n  drawables = initialState.drawables\n\n  @observable\n  newDrawable = initialState.newDrawable\n\n  @observable\n  newDrawableType = initialState.newDrawableType\n\n  // *__: Permission Setting\n\n  @observable\n  isShowPermission = initialState.isShowPermission\n\n  // *_: Data\n  @observable\n  myUserId = initialState.myUserId\n\n  @observable\n  myInfo = initialState.myInfo\n\n  @observable\n  myRole = initialState.myRole\n\n  @observable\n  myPermissions = initialState.myPermissions\n\n  @observable\n  conference = initialState.conference\n\n  @observable\n  conferenceUsers = initialState.conferenceUsers\n\n  @observable\n  statusConference = initialState.statusConference\n\n  // *_: Jitsi\n\n  @observable\n  LEAVE = initialState.LEAVE\n\n  @observable\n  onAudio = initialState.onAudio\n\n  @observable\n  offAudio = initialState.offAudio\n\n  @observable\n  reOrderUserAtFirstPlace = initialState.reOrderUserAtFirstPlace\n\n  @observable\n  setPinnedMode = initialState.setPinnedMode\n\n  @observable\n  setSpeakerByUID = initialState.setSpeakerByUID\n\n  @observable\n  setJitsiDisplayName = initialState.setJitsiDisplayName\n\n  @observable\n  sourceDesktopElectron = initialState.sourceDesktopElectron\n\n  @observable\n  recording = initialState.recording\n\n  @observable\n  refetchMyFiles = initialState.NullFunction\n\n  @observable\n  refetchAllFiles = initialState.NullFunction\n\n\n  @action\n  setFunc = name => {\n    Object.keys(name).map(key => {\n      this[key] = name[key]\n      return key\n    })\n  }\n\n  @action\n  setConnectionApi = apis => {\n    Object.keys(apis).map(key => {\n      this[key] = apis[key]\n      return key\n    })\n  }\n\n  @action\n  clearStore = () => {\n    Object.keys(initialState).map(key => {\n      this[key] = initialState[key]\n      return key\n    })\n  }\n\n  @action setState = state => {\n    Object.keys(state).map(key => {\n      this[key] = state[key]\n      return key\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}