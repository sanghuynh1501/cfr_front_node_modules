{"ast":null,"code":"import \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/QnAManagementCollapse/QnAPublicViewItem.jsx\";\nimport React from 'react';\nimport { newNotification } from '@utils';\nimport { client, M_ANSWER_QNA } from '@graphql';\nimport { AvatarComponent } from '@components';\n\nvar QnAPublicViewItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(QnAPublicViewItem, _React$Component);\n\n  var _super = _createSuper(QnAPublicViewItem);\n\n  function QnAPublicViewItem(props) {\n    var _this;\n\n    _classCallCheck(this, QnAPublicViewItem);\n\n    _this = _super.call(this, props);\n\n    _this.handleAnswerQNA = function (qnaId) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          _assertThisInitialize2 = _assertThisInitialize.state,\n          answer = _assertThisInitialize2.answerState,\n          isPrivate = _assertThisInitialize2.isPrivate;\n\n      client.mutate({\n        mutation: M_ANSWER_QNA,\n        variables: {\n          newQNAAnswerInput: {\n            qnaId: qnaId,\n            answer: answer,\n            isPrivate: isPrivate\n          }\n        }\n      }).then(function (_ref) {\n        var answerQNA = _ref.data.answerQNA;\n\n        if (answerQNA) {\n          return newNotification('Thành công! ', 'success', {\n            animationIn: ['animated', 'fadeIn']\n          });\n        }\n      }).catch(function (error) {\n        return newNotification('Please try again later!', 'danger');\n      });\n    };\n\n    var userAnswer = props.qnaItem.userAnswer;\n    _this.state = {\n      answerState: userAnswer ? userAnswer.answer : '',\n      isPrivate: userAnswer ? userAnswer.isPrivate : false\n    };\n    return _this;\n  }\n\n  _createClass(QnAPublicViewItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          _this$props$qnaItem = _this$props.qnaItem,\n          question = _this$props$qnaItem.question,\n          qnaId = _this$props$qnaItem._id,\n          isAnonymous = _this$props$qnaItem.isAnonymous,\n          createdBy = _this$props$qnaItem.createdBy,\n          _this$props$qnaItem$c = _this$props$qnaItem.createdBy,\n          firstname = _this$props$qnaItem$c.firstname,\n          lastname = _this$props$qnaItem$c.lastname,\n          userAnswer = _this$props$qnaItem.userAnswer,\n          authorizedView = _this$props.authorizedView,\n          _this$state = this.state,\n          answerState = _this$state.answerState,\n          isPrivate = _this$state.isPrivate;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"qnaPublicItemView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"usernameHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, isAnonymous ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Tooltip, {\n        placement: \"bottom\",\n        title: \"Ng\\u01B0\\u1EDDi d\\xF9ng \\u1EA9n danh\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Avatar, {\n        size: \"small\",\n        icon: \"eye-invisible\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      })), ' ', \"Ng\\u01B0\\u1EDDi d\\xF9ng \\u1EA9n danh:\") : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AvatarComponent, Object.assign({}, createdBy, {\n        size: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }\n      })), \" \", firstname, \" \", lastname, \":\")), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, question), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"answer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inputHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, authorizedView && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Input, {\n        value: answerState,\n        onChange: function onChange(_ref2) {\n          var answerState = _ref2.target.value;\n          return _this2.setState({\n            answerState: answerState\n          });\n        },\n        onPressEnter: function onPressEnter() {\n          return _this2.handleAnswerQNA(qnaId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(_Button, {\n        onClick: function onClick() {\n          return _this2.handleAnswerQNA(qnaId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"rollback\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      }))), !authorizedView && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"publicVewAnswer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }\n      }, \"Tr\\u1EA3 l\\u1EDDi: \"), \" \", !isPrivate && userAnswer ? userAnswer.answer : '')), authorizedView && /*#__PURE__*/React.createElement(_Checkbox, {\n        checked: isPrivate,\n        onChange: function onChange(_ref3) {\n          var isPrivate = _ref3.target.checked;\n          return _this2.setState({\n            isPrivate: isPrivate\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"C\\xE2u tr\\u1EA3 l\\u1EDDi c\\xE1 nh\\xE2n\", ' ', /*#__PURE__*/React.createElement(_Tooltip, {\n        placement: \"bottom\",\n        title: \"C\\xE2u tr\\u1EA3 l\\u1EDDi s\\u1EBD kh\\xF4ng \\u0111\\u01B0\\u1EE3c c\\xF4ng khai\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"question-circle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }\n      })))));\n    }\n  }]);\n\n  return QnAPublicViewItem;\n}(React.Component);\n\nexport default QnAPublicViewItem;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/QnAManagementCollapse/QnAPublicViewItem.jsx"],"names":["React","newNotification","client","M_ANSWER_QNA","AvatarComponent","QnAPublicViewItem","props","handleAnswerQNA","qnaId","state","answer","answerState","isPrivate","mutate","mutation","variables","newQNAAnswerInput","then","answerQNA","data","animationIn","catch","error","userAnswer","qnaItem","question","_id","isAnonymous","createdBy","firstname","lastname","authorizedView","target","value","setState","checked","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button, Checkbox, Icon, Avatar, Tooltip, Input } from 'antd'\nimport { newNotification } from '@utils'\nimport { client, M_ANSWER_QNA } from '@graphql'\nimport { AvatarComponent } from '@components'\n\nclass QnAPublicViewItem extends React.Component {\n  constructor(props) {\n    super(props)\n    const {\n      qnaItem: { userAnswer }\n    } = props\n    this.state = {\n      answerState: userAnswer ? userAnswer.answer : '',\n      isPrivate: userAnswer ? userAnswer.isPrivate : false\n    }\n  }\n\n  handleAnswerQNA = qnaId => {\n    const {\n      state: { answerState: answer, isPrivate }\n    } = this\n\n    client\n      .mutate({\n        mutation: M_ANSWER_QNA,\n        variables: {\n          newQNAAnswerInput: {\n            qnaId,\n            answer,\n            isPrivate\n          }\n        }\n      })\n      .then(({ data: { answerQNA } }) => {\n        if (answerQNA) {\n          return newNotification('Thành công! ', 'success', {\n            animationIn: ['animated', 'fadeIn']\n          })\n        }\n      })\n      .catch(error => {\n        return newNotification('Please try again later!', 'danger')\n      })\n  }\n\n  render() {\n    const {\n      props: {\n        qnaItem: {\n          question,\n          _id: qnaId,\n          isAnonymous,\n          createdBy,\n          createdBy: { firstname, lastname },\n          userAnswer\n        },\n        authorizedView\n      },\n      state: { answerState, isPrivate }\n    } = this\n    return (\n      <div className='qnaPublicItemView'>\n        <span className='usernameHolder'>\n          {isAnonymous ? (\n            <>\n              <Tooltip placement='bottom' title='Người dùng ẩn danh'>\n                <Avatar size='small' icon='eye-invisible' />\n              </Tooltip>{' '}\n              Người dùng ẩn danh:\n            </>\n          ) : (\n            <>\n              <AvatarComponent {...createdBy} size='small' /> {firstname} {lastname}:\n            </>\n          )}\n        </span>\n        <span className='question'>{question}</span>\n\n        <div className='answer'>\n          <div className='inputHolder'>\n            {authorizedView && (\n              <>\n                <Input\n                  value={answerState}\n                  onChange={({ target: { value: answerState } }) => this.setState({ answerState })}\n                  onPressEnter={() => this.handleAnswerQNA(qnaId)}\n                />\n                <Button onClick={() => this.handleAnswerQNA(qnaId)}>\n                  <Icon type='rollback' />\n                </Button>\n              </>\n            )}\n\n            {!authorizedView && (\n              <span className='publicVewAnswer'>\n                <span>Trả lời: </span> {!isPrivate && userAnswer ? userAnswer.answer : ''}\n              </span>\n            )}\n          </div>\n          {authorizedView && (\n            <Checkbox\n              checked={isPrivate}\n              onChange={({ target: { checked: isPrivate } }) => this.setState({ isPrivate })}\n            >\n              Câu trả lời cá nhân{' '}\n              <Tooltip placement='bottom' title='Câu trả lời sẽ không được công khai'>\n                <Icon type='question-circle' />\n              </Tooltip>\n            </Checkbox>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default QnAPublicViewItem\n"]},"metadata":{},"sourceType":"module"}