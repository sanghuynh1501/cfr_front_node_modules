{"ast":null,"code":"import \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/NodeForm.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nvar TextArea = _Input.TextArea;\n\nvar NodeForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(NodeForm, _React$Component);\n\n  var _super = _createSuper(NodeForm);\n\n  function NodeForm() {\n    var _this;\n\n    _classCallCheck(this, NodeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.resetFields = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          resetFields = _assertThisInitialize.props.form.resetFields;\n\n      resetFields(['name', 'descriptions']);\n    };\n\n    return _this;\n  }\n\n  _createClass(NodeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getFieldDecorator = _this$props.form.getFieldDecorator,\n          node = _this$props.node,\n          i18n = _this$props.i18n;\n      return /*#__PURE__*/React.createElement(_Form, {\n        className: \"group-name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('group.groupName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('name', {\n        rules: [{\n          required: true,\n          message: i18n.t('require.requireGroupName')\n        }],\n        initialValue: node === null || node === void 0 ? void 0 : node.name\n      })( /*#__PURE__*/React.createElement(_Input, {\n        placeholder: i18n.t('group.groupName'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 14\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('description'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('descriptions', {\n        initialValue: node === null || node === void 0 ? void 0 : node.descriptions\n      })( /*#__PURE__*/React.createElement(TextArea, {\n        rows: 4,\n        placeholder: i18n.t('description'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }))));\n    }\n  }]);\n\n  return NodeForm;\n}(React.Component);\n\nexport default _Form.create({\n  name: 'normal_login'\n})(withTranslation()(NodeForm));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/NodeForm.jsx"],"names":["React","withTranslation","TextArea","NodeForm","resetFields","props","form","getFieldDecorator","node","i18n","t","rules","required","message","initialValue","name","descriptions","Component","create"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,eAAT,QAAgC,eAAhC;IAEQC,Q,UAAAA,Q;;IAEFC,Q;;;;;;;;;;;;;;;;UACJC,W,GAAc,YAAM;AAAA;AAAA,UAGNA,WAHM,yBAEhBC,KAFgB,CAGdC,IAHc,CAGNF,WAHM;;AAOlBA,MAAAA,WAAW,CAAC,CAAC,MAAD,EAAS,cAAT,CAAD,CAAX;AACD,K;;;;;;;6BAEQ;AAAA,wBAKH,KAAKC,KALF;AAAA,UAEGE,iBAFH,eAELD,IAFK,CAEGC,iBAFH;AAAA,UAGLC,IAHK,eAGLA,IAHK;AAAA,UAILC,IAJK,eAILA,IAJK;AAMP,0BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAEA,IAAI,CAACC,CAAL,CAAO,iBAAP,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,iBAAiB,CAAC,MAAD,EAAS;AACzBI,QAAAA,KAAK,EAAE,CAAC;AAAEC,UAAAA,QAAQ,EAAE,IAAZ;AAAkBC,UAAAA,OAAO,EAAEJ,IAAI,CAACC,CAAL,CAAO,0BAAP;AAA3B,SAAD,CADkB;AAEzBI,QAAAA,YAAY,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO;AAFK,OAAT,CAAjB,eAGE;AAAO,QAAA,WAAW,EAAEN,IAAI,CAACC,CAAL,CAAO,iBAAP,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADH,CAFF,eASE,0BAAM,IAAN;AAAW,QAAA,KAAK,EAAED,IAAI,CAACC,CAAL,CAAO,aAAP,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGH,iBAAiB,CAAC,cAAD,EAAiB;AACjCO,QAAAA,YAAY,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ;AADa,OAAjB,CAAjB,eAEE,oBAAC,QAAD;AAAU,QAAA,IAAI,EAAE,CAAhB;AAAmB,QAAA,WAAW,EAAEP,IAAI,CAACC,CAAL,CAAO,aAAP,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADH,CATF,CADF;AAiBD;;;;EAlCoBV,KAAK,CAACiB,S;;AAsC7B,eAAe,MAAKC,MAAL,CAAY;AAAEH,EAAAA,IAAI,EAAE;AAAR,CAAZ,EAAsCd,eAAe,GAAGE,QAAH,CAArD,CAAf","sourcesContent":["import React from 'react'\nimport { Form, Input } from 'antd'\nimport { withTranslation } from 'react-i18next'\n\nconst { TextArea } = Input\n\nclass NodeForm extends React.Component {\n  resetFields = () => {\n    const {\n      props: {\n        form: { resetFields }\n      }\n    } = this\n\n    resetFields(['name', 'descriptions'])\n  }\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      node,\n      i18n\n    } = this.props\n    return (\n      <Form className='group-name'>\n\n        <Form.Item label={i18n.t('group.groupName')}>\n          {getFieldDecorator('name', {\n            rules: [{ required: true, message: i18n.t('require.requireGroupName') }],\n            initialValue: node?.name\n          })(<Input placeholder={i18n.t('group.groupName')} />)}\n        </Form.Item>\n\n        <Form.Item label={i18n.t('description')}>\n          {getFieldDecorator('descriptions', {\n            initialValue: node?.descriptions\n          })(<TextArea rows={4} placeholder={i18n.t('description')} />)}\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\n\nexport default Form.create({ name: 'normal_login' })(withTranslation()(NodeForm))\n"]},"metadata":{},"sourceType":"module"}