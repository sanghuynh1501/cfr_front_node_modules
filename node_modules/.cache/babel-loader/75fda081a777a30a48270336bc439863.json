{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/userDetail/FormUpdatePassword.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, M_RESET_PASSWORD } from '@graphql';\nimport { returnError, newNotification, parseError } from '@utils';\n\nvar FormUpdatePassword = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormUpdatePassword, _React$Component);\n\n  var _super = _createSuper(FormUpdatePassword);\n\n  function FormUpdatePassword() {\n    var _this;\n\n    _classCallCheck(this, FormUpdatePassword);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        //MUTATION CREATE USER\n        if (!err) {\n          client.mutate({\n            mutation: M_RESET_PASSWORD,\n            variables: {\n              userId: _this.props._id,\n              updatePassword: values['new-password']\n            }\n          }).then(function (e) {\n            _this.props.form.resetFields();\n\n            _this.props.handleToggleEditPassword();\n\n            newNotification(_this.props.i18n.t('notification.updatePasswordSuccess'), 'success', {\n              container: 'top-right'\n            });\n          }).catch(function (errors) {\n            returnError('Error', {\n              errorMessage: _this.props.i18n.t(parseError(errors))\n            }, {\n              container: 'top-right'\n            });\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(FormUpdatePassword, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          i18n = _this$props.i18n,\n          getFieldDecorator = _this$props.form.getFieldDecorator,\n          handleToggleEditPassword = _this$props.handleToggleEditPassword;\n      return /*#__PURE__*/React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        ref: \"form\",\n        style: {\n          width: '50%'\n        },\n        className: \"common-form form-edit-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('user.newPassword'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('new-password', {\n        rules: [{\n          required: true,\n          message: i18n.t('require.requireNewPassword')\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        type: \"password\",\n        placeholder: i18n.t('user.newPassword'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"btn-save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }\n      }, i18n.t('common.saveChanges'))), /*#__PURE__*/React.createElement(_Form.Item, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        ghost: true,\n        className: \"btn-cancel\",\n        onClick: handleToggleEditPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')))));\n    }\n  }]);\n\n  return FormUpdatePassword;\n}(React.Component);\n\nexport default _Form.create({\n  name: 'normal_login'\n})(withTranslation()(FormUpdatePassword));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/userDetail/FormUpdatePassword.jsx"],"names":["React","withTranslation","client","M_RESET_PASSWORD","returnError","newNotification","parseError","FormUpdatePassword","handleSubmit","e","preventDefault","props","form","validateFields","err","values","mutate","mutation","variables","userId","_id","updatePassword","then","resetFields","handleToggleEditPassword","i18n","t","container","catch","errors","errorMessage","getFieldDecorator","width","rules","required","message","display","flexDirection","alignItems","marginTop","Component","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Form, Input, Button } from 'antd'\n\nimport { client, M_RESET_PASSWORD } from '@graphql'\nimport { returnError, newNotification, parseError } from '@utils'\n\nclass FormUpdatePassword extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      //MUTATION CREATE USER\n      if (!err) {\n        client\n          .mutate({\n            mutation: M_RESET_PASSWORD,\n            variables: {\n              userId: this.props._id,\n              updatePassword: values['new-password']\n            }\n          })\n          .then(e => {\n            this.props.form.resetFields()\n            this.props.handleToggleEditPassword()\n            newNotification(this.props.i18n.t('notification.updatePasswordSuccess'), 'success', {\n              container: 'top-right'\n            })\n          })\n          .catch(errors => {\n            returnError(\n              'Error',\n              { errorMessage: this.props.i18n.t(parseError(errors)) },\n              { container: 'top-right' }\n            )\n          })\n      }\n    })\n  }\n\n  render() {\n    const {\n      props: {\n        i18n,\n        form: { getFieldDecorator },\n        handleToggleEditPassword\n      }\n    } = this\n\n    return (\n      <Form\n        onSubmit={this.handleSubmit}\n        ref='form'\n        style={{ width: '50%' }}\n        className='common-form form-edit-password'\n      >\n        <Form.Item label={i18n.t('user.newPassword')}>\n          {getFieldDecorator('new-password', {\n            rules: [\n              {\n                required: true,\n                message: i18n.t('require.requireNewPassword')\n              }\n            ]\n          })(\n            <Input type='password' placeholder={i18n.t('user.newPassword')} />\n          )}\n        </Form.Item>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n            marginTop: '10px'\n          }}\n        >\n\n          <Form.Item>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='btn-save'\n            >\n              {i18n.t('common.saveChanges')}\n            </Button>\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type='primary'\n              ghost\n              className='btn-cancel'\n              onClick={handleToggleEditPassword}\n            >\n              {i18n.t('common.cancel')}\n            </Button>\n          </Form.Item>\n        </div>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create({ name: 'normal_login' })(withTranslation()(FormUpdatePassword))"]},"metadata":{},"sourceType":"module"}