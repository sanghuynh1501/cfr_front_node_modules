{"ast":null,"code":"import \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/components/IndicatorToolbar.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport headphone from \"@misc/images/ngocly/headphone.svg\";\nimport micro from \"@misc/images/ngocly/micro.svg\";\nimport microOff from \"@misc/images/ngocly/microOff.svg\";\nvar IndicatorToolbar = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(IndicatorToolbar, _React$PureComponent);\n\n  var _super = _createSuper(IndicatorToolbar);\n\n  function IndicatorToolbar() {\n    _classCallCheck(this, IndicatorToolbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndicatorToolbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          displayName = _this$props.displayName,\n          hasAudio = _this$props.hasAudio,\n          hasVideo = _this$props.hasVideo;\n      var displayTooltip = displayName.length > 16;\n      var component = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"indicator-toolbar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: hasVideo ? headphone : headphone,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }, displayName), /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          verticalAlign: 'base-line'\n        },\n        src: hasAudio ? micro : microOff,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }));\n      return /*#__PURE__*/React.createElement(React.Fragment, null, displayTooltip ? /*#__PURE__*/React.createElement(_Tooltip, {\n        title: displayName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, component) : component);\n    }\n  }]);\n\n  return IndicatorToolbar;\n}(React.PureComponent)) || _class) || _class);\nexport default IndicatorToolbar;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/components/IndicatorToolbar.jsx"],"names":["React","inject","observer","IndicatorToolbar","stores","props","displayName","hasAudio","hasVideo","displayTooltip","length","component","headphone","verticalAlign","micro","microOff","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;;;;IASMC,gB,WAFLF,MAAM,CAAC;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,gBACNF,Q;;;;;;;;;;;;;6BAEU;AAAA,wBACqC,KAAKG,KAD1C;AAAA,UACCC,WADD,eACCA,WADD;AAAA,UACcC,QADd,eACcA,QADd;AAAA,UACwBC,QADxB,eACwBA,QADxB;AAGP,UAAMC,cAAc,GAAGH,WAAW,CAACI,MAAZ,GAAqB,EAA5C;AAEA,UAAMC,SAAS,gBACb;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEH,QAAQ,GAAGI,SAAH,GAAeA,SAAjC;AAA4C,QAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAON,WAAP,CAFF,eAGE;AAAK,QAAA,KAAK,EAAE;AAAEO,UAAAA,aAAa,EAAE;AAAjB,SAAZ;AAA4C,QAAA,GAAG,EAAEN,QAAQ,GAAGO,KAAH,GAAWC,QAApE;AAA8E,QAAA,GAAG,EAAC,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAQA,0BACE,0CACGN,cAAc,gBAEX;AAAS,QAAA,KAAK,EAAEH,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BK,SAA9B,CAFW,GAIbA,SALJ,CADF;AAYD;;;;EA1B4BX,KAAK,CAACgB,a;AA6BrC,eAAeb,gBAAf","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Tooltip } from 'antd'\n\nimport headphone from '@misc/images/ngocly/headphone.svg'\nimport micro from '@misc/images/ngocly/micro.svg'\nimport microOff from '@misc/images/ngocly/microOff.svg'\n\n@inject(({ stores }) => stores)\n@observer\nclass IndicatorToolbar extends React.PureComponent {\n  render() {\n    const { displayName, hasAudio, hasVideo } = this.props\n\n    const displayTooltip = displayName.length > 16\n\n    const component = (\n      <div className='indicator-toolbar'>\n        <img src={hasVideo ? headphone : headphone} alt='icon' />\n        <span>{displayName}</span>\n        <img style={{ verticalAlign: 'base-line' }} src={hasAudio ? micro : microOff} alt='icon' />\n      </div>\n    )\n\n    return (\n      <>\n        {displayTooltip ?\n          (\n            <Tooltip title={displayName}>{component}</Tooltip>\n          ) :\n          component\n        }\n      </>\n    )\n\n\n  }\n}\n\nexport default IndicatorToolbar\n"]},"metadata":{},"sourceType":"module"}