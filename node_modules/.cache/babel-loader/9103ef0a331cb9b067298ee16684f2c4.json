{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/avatar/style\";\nimport _Avatar from \"antd/es/avatar\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalResource.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport './ModalResource.less';\nimport shareGreen from \"@misc/images/ngocly/shareGreen.svg\";\nimport client, { M_UPLOAD_RESOURCE, M_DELETE_FILE_BY_URL, M_UPLOAD_FILE } from '@graphql';\nimport { newNotification, returnError } from '@utils';\nimport { _SLIDE } from '@constants';\nimport { resourceType } from '../jitsi/constants';\nvar ModalResource = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalResource, _React$PureComponent);\n\n  var _super = _createSuper(ModalResource);\n\n  function ModalResource(props) {\n    var _this;\n\n    _classCallCheck(this, ModalResource);\n\n    _this = _super.call(this, props);\n\n    _this._openModal = function () {\n      return _this.props.conferenceState.setState({\n        modalResourceVisible: true\n      });\n    };\n\n    _this._closeModal = function () {\n      return _this.props.conferenceState.setState({\n        modalResourceVisible: false\n      });\n    };\n\n    _this._handleChangeType = function (e) {\n      return _this.setState({\n        resourceType: e.target.value,\n        images: [],\n        countFileSuccess: 0,\n        fileSuccess: [],\n        nameSlide: ''\n      });\n    };\n\n    _this._beforeUpdate = function (file) {\n      var isLt2M = file.size / 1024 / 1024 < 2;\n      console.log(isLt2M);\n    };\n\n    _this._readFileImg = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(info) {\n        var _info$file, status, response, size, error, type, uid, name, fileList;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _info$file = info.file, status = _info$file.status, response = _info$file.response, size = _info$file.size, error = _info$file.error, type = _info$file.type, uid = _info$file.uid, name = _info$file.name, fileList = info.fileList;\n\n                if (!(status === 'uploading')) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.next = 17;\n                break;\n\n              case 4:\n                if (!(status === 'removed')) {\n                  _context.next = 8;\n                  break;\n                }\n\n                _this._deleteFile(uid);\n\n                _context.next = 17;\n                break;\n\n              case 8:\n                if (!(process.env.NODE_ENV === 'production')) {\n                  _context.next = 14;\n                  break;\n                }\n\n                if (!error) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", newNotification('Vui lòng chọn ảnh có kích thước <2Mb', 'warning'));\n\n              case 11:\n                if (response) {\n                  _this.setState(function (prev) {\n                    return {\n                      images: [].concat(_toConsumableArray(prev.images), [{\n                        URL: \"\".concat(window.location.origin, \"/images/cfr/\").concat(response),\n                        size: size,\n                        type: type,\n                        uid: uid,\n                        name: name\n                      }]),\n                      countFileSuccess: prev.countFileSuccess + 1\n                    };\n                  }, function () {\n                    if (_this.state.resourceType !== resourceType.SLIDE && _this.state.countFileSuccess === fileList.length) {\n                      _this._handleOk();\n                    }\n                  });\n                }\n\n                _context.next = 17;\n                break;\n\n              case 14:\n                if (!error) {\n                  _context.next = 16;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", newNotification('Vui lòng chọn ảnh có kích thước <2Mb', 'warning'));\n\n              case 16:\n                if (response) {\n                  _this.setState(function (prev) {\n                    return {\n                      images: [].concat(_toConsumableArray(prev.images), [{\n                        URL: \"http://\".concat(process.env.REACT_APP_GRAPHQL_URN.split('/').shift(), \"/images/\").concat(response),\n                        size: size,\n                        type: type,\n                        uid: uid,\n                        name: name\n                      }]),\n                      countFileSuccess: prev.countFileSuccess + 1\n                    };\n                  }, function () {\n                    if (_this.state.resourceType !== resourceType.SLIDE && _this.state.countFileSuccess === fileList.length) {\n                      _this._handleOk();\n                    }\n                  });\n                }\n\n              case 17:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this._handleOk = function () {\n      var resourceInput = _this._createSlide();\n\n      if (resourceInput.length !== 0) {\n        client.mutate({\n          mutation: M_UPLOAD_RESOURCE,\n          variables: {\n            resourceInput: resourceInput\n          }\n        }).then(function (_ref3) {\n          var uploadResource = _ref3.data.uploadResource;\n\n          if (uploadResource) {\n            if (_this.state.resourceType === resourceType.SLIDE) {\n              _this.setState({\n                visible: false,\n                images: [],\n                countFileSuccess: 0,\n                fileSuccess: [],\n                nameSlide: ''\n              });\n            }\n\n            return newNotification('Upload success');\n          }\n        }).catch(function (err) {\n          console.log(err);\n        });\n      }\n    };\n\n    _this._deleteFile = function (uid) {\n      var fileDelete = _this.state.images.find(function (image) {\n        return image.uid === uid;\n      });\n\n      client.mutate({\n        mutation: M_DELETE_FILE_BY_URL,\n        variables: {\n          URL: fileDelete.URL\n        }\n      }).then(function (_ref4) {\n        var deleteFileByURL = _ref4.data.deleteFileByURL;\n\n        if (deleteFileByURL) {\n          return newNotification('Delete Success');\n        }\n      }).catch(function (err) {\n        console.log(err);\n      });\n\n      _this.setState(function (prev) {\n        return {\n          countFileSuccess: prev.countFileSuccess - 1,\n          fileSuccess: prev.fileSuccess.filter(function (file) {\n            return file !== uid;\n          }),\n          images: prev.images.filter(function (image) {\n            return image.uid !== uid;\n          })\n        };\n      });\n    };\n\n    _this._createSlide = function () {\n      var resourceInputs = [];\n      var fileSuccess = [];\n\n      if (_this.state.resourceType === resourceType.SLIDE) {\n        if (!_this.state.nameSlide) {\n          returnError('Error', {\n            errorMessage: 'Vui lòng nhập tên bài trình chiếu'\n          }, {\n            container: 'top-right'\n          });\n          return [];\n        }\n\n        var resourceInput = {};\n        resourceInput['size'] = _this.state.images.map(function (image) {\n          return image.size;\n        }).reduce(function (a, b) {\n          return a + b;\n        });\n        resourceInput['resources'] = _this.state.images.map(function (item) {\n          return item.URL;\n        });\n        resourceInput['type'] = resourceType.SLIDE;\n        resourceInput['partOf'] = resourceType.SLIDE;\n        resourceInput['conferenceId'] = _this.props.conferenceState.conference._id;\n        resourceInput['filename'] = _this.state.nameSlide;\n        var externalData = {};\n        externalData[_SLIDE._externalData.CURRENT_PAGE] = 0;\n        externalData[_SLIDE._externalData.NUM_PAGES] = _this.state.images.length;\n        resourceInput['externalData'] = JSON.stringify(externalData);\n        return [resourceInput];\n      }\n\n      _this.state.images.filter(function (image) {\n        return !_this.state.fileSuccess.includes(image.uid);\n      }).map(function (image) {\n        var resourceInput = {};\n        resourceInput['size'] = image.size;\n        resourceInput['resources'] = image.URL;\n        resourceInput['type'] = image.type.includes('pdf') ? resourceType.PDF : resourceType.IMAGE;\n        resourceInput['partOf'] = image.type.includes('pdf') ? resourceType.PDF : resourceType.IMAGE;\n        resourceInput['conferenceId'] = _this.props.conferenceState.conference._id;\n        resourceInput['filename'] = image.name;\n        fileSuccess.push(image.uid);\n        return resourceInputs.push(resourceInput);\n      });\n\n      _this.setState({\n        fileSuccess: fileSuccess\n      });\n\n      return resourceInputs;\n    };\n\n    _this.singleUpload = function (file) {\n      client.mutate({\n        mutation: M_UPLOAD_FILE,\n        variables: {\n          file: file\n        }\n      }).then(function (_ref5) {\n        var uploadFile = _ref5.data.uploadFile;\n        if (!uploadFile) throw new Error();\n        return newNotification('Upload success');\n      }).catch(function (err) {\n        console.log(err);\n        return newNotification('errrorr');\n      });\n    };\n\n    _this.state = {\n      images: [],\n      resourceType: resourceType.SLIDE,\n      countFileSuccess: 0,\n      fileSuccess: [],\n      nameSlide: ''\n    };\n    return _this;\n  }\n\n  _createClass(ModalResource, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.conferenceState.setState({\n        uploadFile: this._openModal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(_Modal, {\n        className: \"modal-share-file\",\n        visible: this.props.conferenceState.modalResourceVisible,\n        onOk: this._handleOk,\n        onCancel: this._closeModal,\n        footer: null,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Radio.Group, {\n        value: this.state.resourceType,\n        onChange: this._handleChangeType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Radio, {\n        value: resourceType.SLIDE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }\n      }, \"Tr\\xECnh chi\\u1EBFu\"), /*#__PURE__*/React.createElement(_Radio, {\n        value: resourceType.FILES,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }\n      }, \"T\\u1EADp tin\")), this.state.resourceType === resourceType.SLIDE && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"slide-share\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }\n      }, \"Ch\\u1ECDn danh s\\xE1ch h\\xECnh \\u1EA3nh \\u0111\\u1EC3 tr\\xECnh chi\\u1EBFu\"), /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"\\u0110\\u1EB7t t\\xEAn cho b\\xE0i tr\\xECnh chi\\u1EBFu\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            nameSlide: e.target.value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-share-body\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }\n      }, this.state.images.length !== 0 && this.state.images.map(function (_ref6) {\n        var URL = _ref6.URL;\n        return /*#__PURE__*/React.createElement(_Upload, {\n          key: URL,\n          name: \"rawImage\",\n          type: \"file\",\n          accept: \"image/*\",\n          listType: \"picture-card\",\n          className: \"share-file-upload\",\n          action: process.env.NODE_ENV === 'development' ? \"http://\".concat(process.env.REACT_APP_GRAPHQL_URN.split('/').shift(), \"/upload-file/image\") : \"\".concat(window.location.origin, \"/uploadcfr/upload-file/image\"),\n          showUploadList: false,\n          onChange: _this2._readFileImg,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(_Avatar, {\n          shape: \"square\",\n          style: {\n            backgroundColor: '#CCCCCC',\n            verticalAlign: 'middle',\n            height: '100px',\n            width: '100px'\n          },\n          src: URL,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 21\n          }\n        }));\n      }), /*#__PURE__*/React.createElement(_Upload, {\n        name: \"rawImage\",\n        type: \"file\",\n        accept: \"image/*\",\n        listType: \"picture-card\",\n        className: \"share-file-upload\",\n        action: process.env.NODE_ENV === 'development' ? \"http://\".concat(process.env.REACT_APP_GRAPHQL_URN.split('/').shift(), \"/upload-file/image\") : \"\".concat(window.location.origin, \"/uploadcfr/upload-file/image\"),\n        showUploadList: false,\n        onChange: this._readFileImg,\n        beforeUpload: this._beforeUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"whenNoFile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 21\n        }\n      }, \"Slide \", this.state.images.length + 1))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer-modal-share\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        onClick: this._closeModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 15\n        }\n      }, \"Hu\\u1EF7\"), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this._handleOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 15\n        }\n      }, \"Chia s\\u1EBB\"))), this.state.resourceType === resourceType.FILES && /*#__PURE__*/React.createElement(_Upload.Dragger, {\n        accept: \"image/*, .pdf\",\n        action: process.env.NODE_ENV === 'development' ? \"http://\".concat(process.env.REACT_APP_GRAPHQL_URN.split('/').shift(), \"/upload-file/image\") : \"\".concat(window.location.origin, \"/uploadcfr/upload-file/image\"),\n        multiple: true,\n        name: \"rawImage\",\n        showUploadList: {\n          showDownloadIcon: false\n        },\n        onChange: this._readFileImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: shareGreen,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title-highlight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 13\n        }\n      }, \"Drag and drop\"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }\n      }, \" or browse files\")));\n    }\n  }]);\n\n  return ModalResource;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default ModalResource;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalResource.jsx"],"names":["React","inject","observer","client","M_UPLOAD_RESOURCE","M_DELETE_FILE_BY_URL","M_UPLOAD_FILE","newNotification","returnError","_SLIDE","resourceType","ModalResource","stores","props","_openModal","conferenceState","setState","modalResourceVisible","_closeModal","_handleChangeType","e","target","value","images","countFileSuccess","fileSuccess","nameSlide","_beforeUpdate","file","isLt2M","size","console","log","_readFileImg","info","status","response","error","type","uid","name","fileList","_deleteFile","process","env","NODE_ENV","prev","URL","window","location","origin","state","SLIDE","length","_handleOk","REACT_APP_GRAPHQL_URN","split","shift","resourceInput","_createSlide","mutate","mutation","variables","then","uploadResource","data","visible","catch","err","fileDelete","find","image","deleteFileByURL","filter","resourceInputs","errorMessage","container","map","reduce","a","b","item","conference","_id","externalData","_externalData","CURRENT_PAGE","NUM_PAGES","JSON","stringify","includes","PDF","IMAGE","push","singleUpload","uploadFile","Error","FILES","backgroundColor","verticalAlign","height","width","showDownloadIcon","shareGreen","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Upload, Avatar, Radio, Input, Button } from 'antd'\nimport { inject, observer } from 'mobx-react'\n\nimport './ModalResource.less'\n\nimport shareGreen from '@misc/images/ngocly/shareGreen.svg'\nimport client, { M_UPLOAD_RESOURCE, M_DELETE_FILE_BY_URL, M_UPLOAD_FILE } from '@graphql'\nimport { newNotification, returnError } from '@utils'\nimport { _SLIDE } from '@constants'\nimport { resourceType } from '../jitsi/constants'\n\n@inject(({ stores }) => stores)\n@observer\nclass ModalResource extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      images: [],\n      resourceType: resourceType.SLIDE,\n      countFileSuccess: 0,\n      fileSuccess: [],\n      nameSlide: ''\n    }\n  }\n  componentDidMount() {\n    this.props.conferenceState.setState({ uploadFile: this._openModal })\n  }\n\n  _openModal = () => this.props.conferenceState.setState({ modalResourceVisible: true })\n  _closeModal = () => this.props.conferenceState.setState({ modalResourceVisible: false })\n\n  _handleChangeType = e =>\n    this.setState({ resourceType: e.target.value, images: [], countFileSuccess: 0, fileSuccess: [], nameSlide: '' })\n\n  _beforeUpdate = file => {\n    const isLt2M = file.size / 1024 / 1024 < 2\n    console.log(isLt2M)\n  }\n\n  _readFileImg = async info => {\n    const {\n      file: { status, response, size, error, type, uid, name },\n      fileList\n    } = info\n    if (status === 'uploading') {\n    } else if (status === 'removed') {\n      this._deleteFile(uid)\n    } else {\n      if (process.env.NODE_ENV === 'production') {\n        if (error) return newNotification('Vui lòng chọn ảnh có kích thước <2Mb', 'warning')\n        if (response) {\n          this.setState(\n            prev => ({\n              images: [\n                ...prev.images,\n                { URL: `${window.location.origin}/images/cfr/${response}`, size, type, uid, name }\n              ],\n              countFileSuccess: prev.countFileSuccess + 1\n            }),\n            () => {\n              if (this.state.resourceType !== resourceType.SLIDE && this.state.countFileSuccess === fileList.length) {\n                this._handleOk()\n              }\n            }\n          )\n        }\n      } else {\n        if (error) return newNotification('Vui lòng chọn ảnh có kích thước <2Mb', 'warning')\n        if (response) {\n          this.setState(\n            prev => ({\n              images: [\n                ...prev.images,\n                {\n                  URL: `http://${process.env.REACT_APP_GRAPHQL_URN.split('/').shift()}/images/${response}`,\n                  size,\n                  type,\n                  uid,\n                  name\n                }\n              ],\n              countFileSuccess: prev.countFileSuccess + 1\n            }),\n            () => {\n              if (this.state.resourceType !== resourceType.SLIDE && this.state.countFileSuccess === fileList.length) {\n                this._handleOk()\n              }\n            }\n          )\n        }\n      }\n    }\n  }\n\n  _handleOk = () => {\n    const resourceInput = this._createSlide()\n\n    if (resourceInput.length !== 0) {\n      client\n        .mutate({\n          mutation: M_UPLOAD_RESOURCE,\n          variables: {\n            resourceInput\n          }\n        })\n        .then(({ data: { uploadResource } }) => {\n          if (uploadResource) {\n            if (this.state.resourceType === resourceType.SLIDE) {\n              this.setState({\n                visible: false,\n                images: [],\n                countFileSuccess: 0,\n                fileSuccess: [],\n                nameSlide: ''\n              })\n            }\n            return newNotification('Upload success')\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    }\n  }\n\n  _deleteFile = uid => {\n    let fileDelete = this.state.images.find(image => image.uid === uid)\n\n    client\n      .mutate({\n        mutation: M_DELETE_FILE_BY_URL,\n        variables: {\n          URL: fileDelete.URL\n        }\n      })\n      .then(({ data: { deleteFileByURL } }) => {\n        if (deleteFileByURL) {\n          return newNotification('Delete Success')\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n\n    this.setState(prev => ({\n      countFileSuccess: prev.countFileSuccess - 1,\n      fileSuccess: prev.fileSuccess.filter(file => file !== uid),\n      images: prev.images.filter(image => image.uid !== uid)\n    }))\n  }\n\n  _createSlide = () => {\n    let resourceInputs = []\n    let fileSuccess = []\n    if (this.state.resourceType === resourceType.SLIDE) {\n      if (!this.state.nameSlide) {\n        returnError('Error', { errorMessage: 'Vui lòng nhập tên bài trình chiếu' }, { container: 'top-right' })\n        return []\n      }\n      let resourceInput = {}\n      resourceInput['size'] = this.state.images.map(image => image.size).reduce((a, b) => a + b)\n      resourceInput['resources'] = this.state.images.map(item => item.URL)\n      resourceInput['type'] = resourceType.SLIDE\n      resourceInput['partOf'] = resourceType.SLIDE\n      resourceInput['conferenceId'] = this.props.conferenceState.conference._id\n      resourceInput['filename'] = this.state.nameSlide\n\n      let externalData = {}\n      externalData[_SLIDE._externalData.CURRENT_PAGE] = 0\n      externalData[_SLIDE._externalData.NUM_PAGES] = this.state.images.length\n\n      resourceInput['externalData'] = JSON.stringify(externalData)\n\n      return [resourceInput]\n    }\n\n    this.state.images\n      .filter(image => !this.state.fileSuccess.includes(image.uid))\n      .map(image => {\n        let resourceInput = {}\n        resourceInput['size'] = image.size\n        resourceInput['resources'] = image.URL\n        resourceInput['type'] = image.type.includes('pdf') ? resourceType.PDF : resourceType.IMAGE\n        resourceInput['partOf'] = image.type.includes('pdf') ? resourceType.PDF : resourceType.IMAGE\n        resourceInput['conferenceId'] = this.props.conferenceState.conference._id\n        resourceInput['filename'] = image.name\n\n        fileSuccess.push(image.uid)\n\n        return resourceInputs.push(resourceInput)\n      })\n\n    this.setState({ fileSuccess })\n    return resourceInputs\n  }\n\n\n  singleUpload = (file) => {\n    client\n      .mutate({\n        mutation: M_UPLOAD_FILE,\n        variables: {\n          file\n        }\n      })\n      .then(({ data: { uploadFile } }) => {\n        if (!uploadFile) throw new Error()\n        return newNotification('Upload success')\n\n      })\n      .catch(err => {\n        console.log(err)\n        return newNotification('errrorr')\n\n      })\n  }\n\n\n  render() {\n    return (\n      <Modal\n        className='modal-share-file'\n        visible={this.props.conferenceState.modalResourceVisible}\n        onOk={this._handleOk}\n        onCancel={this._closeModal}\n        footer={null}\n      >\n        <Radio.Group value={this.state.resourceType} onChange={this._handleChangeType}>\n          <Radio value={resourceType.SLIDE}>Trình chiếu</Radio>\n          <Radio value={resourceType.FILES}>Tập tin</Radio>\n        </Radio.Group>\n\n        {this.state.resourceType === resourceType.SLIDE && (\n          <div className='slide-share'>\n            <div>Chọn danh sách hình ảnh để trình chiếu</div>\n            <Input\n              placeholder='Đặt tên cho bài trình chiếu'\n              onChange={e => this.setState({ nameSlide: e.target.value })}\n            />\n            <div className='modal-share-body'>\n              {this.state.images.length !== 0 &&\n                this.state.images.map(({ URL }) => (\n                  <Upload\n                    key={URL}\n                    name='rawImage'\n                    type='file'\n                    accept='image/*'\n                    listType='picture-card'\n                    className='share-file-upload'\n                    action={\n                      process.env.NODE_ENV === 'development'\n                        ? `http://${process.env.REACT_APP_GRAPHQL_URN.split('/').shift()}/upload-file/image`\n                        : `${window.location.origin}/uploadcfr/upload-file/image`\n                    }\n                    showUploadList={false}\n                    onChange={this._readFileImg}\n                  >\n                    <Avatar\n                      shape='square'\n                      style={{\n                        backgroundColor: '#CCCCCC',\n                        verticalAlign: 'middle',\n                        height: '100px',\n                        width: '100px'\n                      }}\n                      src={URL}\n                    />\n                  </Upload>\n                ))}\n              <Upload\n                name='rawImage'\n                type='file'\n                accept='image/*'\n                listType='picture-card'\n                className='share-file-upload'\n                action={\n                  process.env.NODE_ENV === 'development'\n                    ? `http://${process.env.REACT_APP_GRAPHQL_URN.split('/').shift()}/upload-file/image`\n                    : `${window.location.origin}/uploadcfr/upload-file/image`\n                }\n                showUploadList={false}\n                onChange={this._readFileImg}\n                beforeUpload={this._beforeUpdate}\n              >\n                <div className='whenNoFile'>\n                  <div>\n                    {/* <Icon type='plus' /> */}\n                    <span>Slide {this.state.images.length + 1}</span>\n                  </div>\n                </div>\n              </Upload>\n            </div>\n            <div className='footer-modal-share'>\n              <Button onClick={this._closeModal}>Huỷ</Button>\n              <Button type='primary' onClick={this._handleOk}>\n                Chia sẻ\n              </Button>\n            </div>\n          </div>\n        )}\n\n        {this.state.resourceType === resourceType.FILES && (\n          <Upload.Dragger\n            accept='image/*, .pdf'\n            action={\n              process.env.NODE_ENV === 'development'\n                ? `http://${process.env.REACT_APP_GRAPHQL_URN.split('/').shift()}/upload-file/image`\n                : `${window.location.origin}/uploadcfr/upload-file/image`\n            }\n            multiple={true}\n            name='rawImage'\n            showUploadList={{ showDownloadIcon: false }}\n            onChange={this._readFileImg}\n          >\n            <img src={shareGreen} alt='icon' />\n            <span className='title-highlight'>Drag and drop</span>\n            <span> or browse files</span>\n          </Upload.Dragger>\n        )\n        }\n\n      </Modal>\n    )\n  }\n}\n\nexport default ModalResource\n"]},"metadata":{},"sourceType":"module"}