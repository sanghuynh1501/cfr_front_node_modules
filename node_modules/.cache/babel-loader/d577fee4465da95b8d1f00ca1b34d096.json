{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/index.jsx\";\n\nimport React from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport ReactNotification from 'react-notifications-component';\nimport { decode } from 'jsonwebtoken';\nimport { withTranslation } from 'react-i18next';\nimport liveIcon from \"@misc/images/conference/live.svg\";\nimport lockIcon from \"@misc/images/ngocly/lock.svg\";\nimport logo from \"@misc/logo/asset9.svg\";\nimport './index.less';\nimport { BounceLoader, AvatarComponent } from '@components';\nimport { client, M_JOIN_CONFERENCE, Q_CONFERENCE, Q_CONFERENCE_MY_INFO, Q_UNREAD_MESSAGE, Q_POLLS, S_ON_VOTING, Q_RESOURCES, Q_RESOURCE, Q_DRAW, M_CLEAR_DRAW, Q_RECORDING_BY_CONFERENCE, S_ON_ATTENDING, Q_ATTENDANCES, M_LEAVE_CONFERENCE, Q_GET_ONLINE_IN_CONFERENCE, M_VERIFY_PASSWORD, Q_QNA_ACTIVE_SESSION } from '@graphql';\nimport { routesPath } from '@router';\nimport { returnError, newNotification } from '@utils';\nimport { _userStatus, _queryPollsType, _tabs } from '@constants';\nimport JitsiComponent from './jitsi';\nimport NotificationSubscriber from './subscribers/Notification';\nimport { obtainDesktopSources } from './jitsi/desktopicker';\nimport KeyboardShortcuts from './KeyboardShortcuts';\nimport ReactTour from './ReactTour';\nimport ModalInputPassword from './modals/ModalInputPassword';\nimport WaitingRoom from './WaitingRoom';\nimport BoxMessage from './boxMessage';\nimport ModalNotificationOpenManyTab from './modals/ModalNotificationOpenManyTab';\nvar ConferenceComponent = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(ConferenceComponent, _React$Component);\n\n  var _super = _createSuper(ConferenceComponent);\n\n  function ConferenceComponent(props) {\n    var _this;\n\n    _classCallCheck(this, ConferenceComponent);\n\n    _this = _super.call(this, props); // subscriberPoll = null\n    // subscriberAttend = null\n\n    _this.state = {\n      conferenceCode: _this.props.history.location.pathname.split('/')[2],\n      conferenceId: '',\n      connecting: true,\n      visible: false,\n      show: 'PASSWORD',\n      isShowModalNotificationOpenManyTab: false\n    };\n\n    _this.mutateLeaveConference = function () {\n      return client.mutate({\n        mutation: M_LEAVE_CONFERENCE,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        }\n      }).then(function (_ref2) {\n        var leaveConference = _ref2.data.leaveConference;\n\n        if (leaveConference) {\n          newNotification('Leave conference successfully! Redirecting...', 'info', {\n            dismiss: {\n              duration: 1000,\n              onScreen: true\n            }\n          });\n          setTimeout(function () {\n            _this.props.history.push(routesPath.leave);\n          }, 1000);\n        }\n      }).catch(function (error) {\n        return returnError('Leave Conference', {\n          error: error,\n          errorMessage: 'An error occurred while leaving conference, please try again later!'\n        });\n      });\n    };\n\n    _this.queryGetOnlineInConference = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_GET_ONLINE_IN_CONFERENCE,\n          variables: {\n            conferenceCode: _this.state.conferenceCode\n          },\n          fetchPolicy: 'no-cache'\n        }).then(function (_ref3) {\n          var _ref3$data$getOnlineI = _ref3.data.getOnlineInConference,\n              getOnlineInConference = _ref3$data$getOnlineI === void 0 ? [] : _ref3$data$getOnlineI;\n          resolve(getOnlineInConference);\n        }).catch(function (error) {\n          returnError('Query user online', {\n            error: error,\n            errorMessage: 'Failed to get user online in conference!'\n          });\n          resolve([]);\n        });\n      });\n    };\n\n    _this.joinConference = function () {\n      return client.mutate({\n        mutation: M_JOIN_CONFERENCE,\n        variables: {\n          conferenceCode: _this.state.conferenceCode\n        }\n      }).then(function (_ref4) {\n        var joinConference = _ref4.data.joinConference;\n\n        _this.setState({\n          conferenceId: joinConference.conferenceId\n        });\n\n        _this.props.conferenceState.setState({\n          statusConference: joinConference.status\n        });\n\n        return joinConference.status;\n      }).catch(function (errors) {\n        returnError('Mutation joinConference', {\n          errors: errors,\n          errorMessage: 'Failed to join conference!'\n        });\n        throw errors;\n      });\n    };\n\n    _this.verifyPassword = function (password) {\n      client.mutate({\n        mutation: M_VERIFY_PASSWORD,\n        variables: {\n          conferenceCode: _this.state.conferenceCode,\n          password: password\n        }\n      }).then(function (_ref5) {\n        var verifyPassword = _ref5.data.verifyPassword;\n\n        _this.setState({\n          conferenceId: verifyPassword.conferenceId\n        });\n\n        _this.props.conferenceState.setState({\n          statusConference: verifyPassword.status\n        });\n\n        if (verifyPassword && verifyPassword.status !== _userStatus.WAITING) return _this.queryConferenceData();\n\n        if (verifyPassword && verifyPassword.status === _userStatus.WAITING) {\n          return _this.queryConference().then(function (queryConferenceResult) {\n            if (queryConferenceResult) return _this.queryMyInfo().then(function (queryMyInfoResult) {\n              if (queryMyInfoResult) {\n                return _this.setState({\n                  connecting: false,\n                  show: 'DETAIL'\n                });\n              }\n            });\n          });\n        }\n      }).catch(function (errors) {\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'WRONG_PASSWORD') {\n          returnError('Mutation joinConference', {\n            errors: errors,\n            errorMessage: 'Wrong Password!'\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_HAS_NOT_STARTED') {\n          _this.setState({\n            connecting: false,\n            show: 'NOT_STARTED'\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_FINISHED') {\n          _this.setState({\n            connecting: false,\n            show: 'FINISHED'\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_NOT_FOUND') {\n          _this.props.history.push('/notfound');\n        }\n      });\n    };\n\n    _this.queryConference = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_CONFERENCE,\n          variables: {\n            conferenceId: _this.state.conferenceId\n          },\n          fetchPolicy: 'no-cache'\n        }).then(function (_ref6) {\n          var conference = _ref6.data.conference;\n\n          if (!conference) {\n            throw new Error();\n          }\n\n          _this.props.conferenceState.setState({\n            conference: conference,\n            conferenceUsers: conference.users\n          });\n\n          resolve(true);\n        }).catch(function (error) {\n          returnError('Query conference', {\n            error: error,\n            errorMessage: 'Failed to get conference data!'\n          });\n          resolve(false);\n        });\n      });\n    };\n\n    _this.queryMyInfo = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_CONFERENCE_MY_INFO,\n          fetchPolicy: 'no-cache'\n        }).then(function (_ref7) {\n          var myInfo = _ref7.data.myInfo;\n\n          if (!myInfo) {\n            throw new Error();\n          }\n\n          var _this$props$conferenc = _this.props.conferenceState,\n              setState = _this$props$conferenc.setState,\n              conferenceUsers = _this$props$conferenc.conferenceUsers;\n\n          var _conferenceUsers$filt = conferenceUsers.filter(function (_ref8) {\n            var user = _ref8.user;\n            return user && user._id === myInfo._id;\n          }),\n              _conferenceUsers$filt2 = _slicedToArray(_conferenceUsers$filt, 1),\n              me = _conferenceUsers$filt2[0];\n\n          if (me && me.role) {\n            setState({\n              myRole: me.role._id,\n              myPermissions: me.role.permissions.map(function (per) {\n                return per._id;\n              }),\n              myInfo: myInfo,\n              myUserId: myInfo._id\n            });\n            return resolve(true);\n          }\n\n          setState({\n            myInfo: myInfo,\n            myUserId: myInfo._id\n          });\n          return resolve(true);\n        }).catch(function (error) {\n          returnError('Query myInfo', {\n            error: error,\n            errorMessage: 'Failed to get your account information!'\n          });\n          resolve(false);\n        });\n      });\n    };\n\n    _this.queryUnreadMessages = function () {\n      client.query({\n        query: Q_UNREAD_MESSAGE,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref9) {\n        var unreadMessages = _ref9.data.unreadMessages;\n\n        if (typeof unreadMessages === 'number') {\n          _this.props.conferenceState.setState({\n            unreadMessage: unreadMessages\n          });\n        }\n      }).catch(function (error) {\n        returnError('Query unreadMessages', {\n          error: error,\n          errorMessage: 'Failed to get unread messages!'\n        });\n      });\n    };\n\n    _this.shufflePolls = function (array, type) {\n      if (type === _queryPollsType.PUBLIC || type === _queryPollsType.LOCK) {\n        var gotItems = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY));\n\n        for (var i = 0; i < gotItems.length; i -= -1) {\n          gotItems[i]['isPublic'] = array[0]['isPublic'];\n          gotItems[i]['isLocked'] = array[0]['isLocked'];\n        }\n\n        localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(gotItems));\n        return gotItems;\n      }\n\n      for (var _i = array.length - 1; _i >= 0; _i--) {\n        var j = Math.floor(Math.random() * (_i + 1));\n        var temp = array[_i];\n        array[_i] = array[j];\n        array[j] = temp;\n\n        if (array[_i].answers) {\n          var _temp2 = _toConsumableArray(array[_i].answers);\n\n          array[_i].answers = _this.shufflePolls(_temp2);\n        }\n      }\n\n      return _this.setupIndex(array);\n    };\n\n    _this.setupIndex = function (array) {\n      for (var i = 0; i < array.length; i++) {\n        array[i]['index'] = i;\n      }\n\n      return array;\n    };\n\n    _this.queryPolls = function (state) {\n      return client.query({\n        query: Q_POLLS,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then( /*#__PURE__*/function () {\n        var _ref11 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref10) {\n          var polls, createRandom, end, shuffledActivePolls, gotItems;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  polls = _ref10.data.polls;\n\n                  if (!polls) {\n                    _context.next = 9;\n                    break;\n                  }\n\n                  createRandom = polls.filter(function (poll) {\n                    return poll.isActive;\n                  }).length ? polls.filter(function (poll) {\n                    return poll.isActive;\n                  })[0].isRandom : false;\n                  end = !polls.filter(function (poll) {\n                    return poll.isActive;\n                  }).length;\n                  shuffledActivePolls = polls.filter(function (poll) {\n                    return poll.isActive;\n                  }).length ? polls.filter(function (poll) {\n                    return poll.isActive;\n                  })[0].isRandom ? _this.shufflePolls(polls.filter(function (poll) {\n                    return poll.isActive;\n                  }), state) : polls.filter(function (poll) {\n                    return poll.isActive;\n                  }) : polls.filter(function (poll) {\n                    return poll.isActive;\n                  });\n\n                  if (createRandom) {\n                    if (state === _queryPollsType.INIT) {\n                      gotItems = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY));\n\n                      if (gotItems) {\n                        shuffledActivePolls = _toConsumableArray(gotItems);\n                      } else {\n                        localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(shuffledActivePolls));\n                      }\n                    }\n\n                    if (state === _queryPollsType.CREATE) {\n                      localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(shuffledActivePolls));\n                    }\n                  } else if (end) {\n                    localStorage.removeItem(_queryPollsType.LOCAL_KEY.KEY);\n                  }\n\n                  _context.next = 8;\n                  return _this.props.conferenceState.setState({\n                    pollsInfo: shuffledActivePolls,\n                    // polls.filter(poll => poll.isActive),\n                    donePolls: polls.filter(function (poll) {\n                      return !poll.isActive;\n                    }),\n                    publicPolls: polls.filter(function (poll) {\n                      return poll.isPublic;\n                    })\n                  });\n\n                case 8:\n                  _this.pubsubVoting(shuffledActivePolls.map(function (poll) {\n                    return poll._id;\n                  }));\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref11.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        return returnError('Query polls', {\n          error: error,\n          errorMessage: 'Cannot get polling data!'\n        });\n      });\n    };\n\n    _this.queryAttendances = function (firstTime) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          conferenceState = _assertThisInitialize.props.conferenceState;\n\n      return client.query({\n        query: Q_ATTENDANCES,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then( /*#__PURE__*/function () {\n        var _ref13 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref12) {\n          var attendances, activeAttendance;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  attendances = _ref12.data.attendances;\n\n                  if (!attendances) {\n                    _context2.next = 6;\n                    break;\n                  }\n\n                  activeAttendance = attendances.find(function (attendance) {\n                    return attendance.isActive;\n                  });\n                  _context2.next = 5;\n                  return _this.props.conferenceState.setState({\n                    attendanceInfo: activeAttendance,\n                    doneAttendances: attendances.filter(function (attendance) {\n                      return !attendance.isActive;\n                    })\n                  });\n\n                case 5:\n                  if (activeAttendance) {\n                    if (firstTime) {\n                      setTimeout(function () {\n                        return conferenceState.setState({\n                          isShowAttendance: true\n                        });\n                      }, 1400);\n                    } else {\n                      conferenceState.setState({\n                        isShowAttendance: true\n                      });\n                    }\n\n                    _this.pubsubAttending(activeAttendance._id);\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function (_x2) {\n          return _ref13.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        return returnError('Query queryAttendances', {\n          error: error,\n          errorMessage: 'Cannot get queryAttendances data!'\n        });\n      });\n    };\n\n    _this.queryActiveQnASession = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          conferenceState = _assertThisInitialize2.props.conferenceState;\n\n      return client.query({\n        query: Q_QNA_ACTIVE_SESSION,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then( /*#__PURE__*/function () {\n        var _ref15 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref14) {\n          var getActiveQNASessions;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  getActiveQNASessions = _ref14.data.getActiveQNASessions;\n\n                  if (getActiveQNASessions) {\n                    conferenceState.setState({\n                      activeQnA: getActiveQNASessions,\n                      hasQnA: true\n                    });\n                  }\n\n                case 2:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n\n        return function (_x3) {\n          return _ref15.apply(this, arguments);\n        };\n      }()).catch(function (error) {\n        return returnError('Query queryActiveQnASession', {\n          error: error,\n          errorMessage: 'Cannot get queryActiveQnASession data!'\n        });\n      });\n    };\n\n    _this.pubsubVoting = function (pollIds) {\n      _this.subscriberPoll = client.subscribe({\n        query: S_ON_VOTING,\n        variables: {\n          pollIds: pollIds\n        },\n        fetchPolicy: 'network-only'\n      }).subscribe(function (_ref16) {\n        var onVoting = _ref16.data.onVoting;\n\n        _this._updatePollInfo(onVoting);\n      });\n    };\n\n    _this.pubsubAttending = function (attendanceId) {\n      _this.subscriberAttend = client.subscribe({\n        query: S_ON_ATTENDING,\n        variables: {\n          attendanceId: attendanceId\n        },\n        fetchPolicy: 'network-only'\n      }).subscribe(function (_ref17) {\n        var onAttending = _ref17.data.onAttending;\n\n        _this._updateAttendanceInfo(onAttending);\n      });\n    };\n\n    _this.queryDraw = function () {\n      return client.query({\n        query: Q_DRAW,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref18) {\n        var getDrawData = _ref18.data.getDrawData;\n\n        _this.props.conferenceState.setState({\n          drawData: getDrawData\n        });\n      }).catch(function (error) {\n        return returnError('Query Draw Data', {\n          error: error,\n          errorMessage: 'Cannot get Draw Data !'\n        });\n      });\n    };\n\n    _this.clearDraw = function () {\n      var _this$props$conferenc2 = _this.props.conferenceState,\n          fileOpen = _this$props$conferenc2.fileOpen,\n          myUserId = _this$props$conferenc2.myUserId;\n\n      if (fileOpen && fileOpen.isImage && fileOpen.uploadedBy._id === myUserId) {\n        client.mutate({\n          mutation: M_CLEAR_DRAW,\n          variables: {\n            conferenceId: _this.state.conferenceId,\n            imageUrl: fileOpen.resources[0]\n          }\n        }).then(function (res) {\n          return console.log(res);\n        }).catch(function (err) {\n          return console.log(err);\n        });\n      }\n    };\n\n    _this.queryResources = function () {\n      return client.query({\n        query: Q_RESOURCES,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref19) {\n        var conferenceResource = _ref19.data.conferenceResource;\n\n        if (conferenceResource) {\n          var _this$props$conferenc3 = _this.props.conferenceState,\n              setState = _this$props$conferenc3.setState,\n              myUserId = _this$props$conferenc3.myUserId;\n          setState({\n            myResources: conferenceResource.filter(function (resource) {\n              return resource.uploadedBy._id === myUserId;\n            }),\n            otherResources: conferenceResource.filter(function (resource) {\n              return resource.uploadedBy._id !== myUserId;\n            })\n          });\n        }\n      }).catch(function (error) {\n        return returnError('Querry Resources', {\n          error: error,\n          errorMessage: 'Cannot get Resources data!'\n        });\n      });\n    };\n\n    _this.queryRecording = function () {\n      client.query({\n        query: Q_RECORDING_BY_CONFERENCE,\n        variables: {\n          conferenceId: _this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref20) {\n        var recordingByConference = _ref20.data.recordingByConference;\n\n        _this.props.conferenceState.setState({\n          recording: recordingByConference\n        });\n      }).catch(function (error) {\n        return returnError('Querry Resources', {\n          error: error,\n          errorMessage: 'Cannot get recording by conference!'\n        });\n      });\n    };\n\n    _this.queryResource = function (_id) {\n      return client.query({\n        query: Q_RESOURCE,\n        variables: {\n          _id: _id\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref21) {\n        var resourceById = _ref21.data.resourceById;\n        var _this$props$conferenc4 = _this.props.conferenceState,\n            myResources = _this$props$conferenc4.myResources,\n            setState = _this$props$conferenc4.setState,\n            otherResources = _this$props$conferenc4.otherResources;\n\n        if (resourceById) {\n          if (myResources.some(function (item) {\n            return item._id === resourceById._id;\n          })) {\n            setState({\n              myResources: [resourceById].concat(_toConsumableArray(myResources.filter(function (item) {\n                return item._id !== resourceById._id;\n              })))\n            });\n          }\n\n          if (otherResources.some(function (item) {\n            return item._id === resourceById._id;\n          })) {\n            setState({\n              otherResources: [resourceById].concat(_toConsumableArray(otherResources.filter(function (item) {\n                return item._id !== resourceById._id;\n              })))\n            });\n          }\n        }\n      }).catch(function (error) {\n        return returnError('Querry Resource', {\n          error: error,\n          errorMessage: 'Cannot get Resource data!'\n        });\n      });\n    };\n\n    _this._updatePollInfo = function (poll) {\n      var _this$props$conferenc5 = _this.props.conferenceState,\n          setState = _this$props$conferenc5.setState,\n          pollsInfo = _this$props$conferenc5.pollsInfo,\n          donePolls = _this$props$conferenc5.donePolls,\n          publicPolls = _this$props$conferenc5.publicPolls;\n      var temp = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY));\n\n      if (temp) {\n        for (var index = 0; index < temp.length; index -= -1) {\n          if (temp[index]._id === poll._id) {\n            temp[index].userVotes = poll.userVotes;\n          }\n        }\n\n        localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(temp));\n      }\n\n      if (poll.isActive) {\n        setState({\n          pollsInfo: temp ? temp : [].concat(_toConsumableArray(pollsInfo.filter(function (item) {\n            return item._id !== poll._id;\n          })), [poll]),\n          donePolls: donePolls.filter(function (item) {\n            return item._id !== poll._id;\n          }),\n          publicPolls: poll.isPublic ? [].concat(_toConsumableArray(pollsInfo.filter(function (item) {\n            return item._id !== poll._id;\n          })), [poll]) : publicPolls\n        });\n      } else {\n        setState({\n          pollsInfo: pollsInfo.filter(function (item) {\n            return item._id !== poll._id;\n          }),\n          donePolls: [].concat(_toConsumableArray(donePolls.filter(function (item) {\n            return item._id !== poll._id;\n          })), [poll])\n        });\n      }\n    };\n\n    _this._updateAttendanceInfo = function (attendance) {\n      var _this$props$conferenc6 = _this.props.conferenceState,\n          setState = _this$props$conferenc6.setState,\n          doneAttendances = _this$props$conferenc6.doneAttendances;\n\n      if (attendance.isActive) {\n        setState({\n          attendanceInfo: attendance,\n          doneAttendances: doneAttendances.filter(function (item) {\n            return item._id !== attendance._id;\n          })\n        });\n      } else {\n        setState({\n          attendanceInfo: {},\n          doneAttendances: [].concat(_toConsumableArray(doneAttendances.filter(function (item) {\n            return item._id !== attendance._id;\n          })), [attendance])\n        });\n      }\n    };\n\n    _this.removeFocus = function (e) {\n      if (document.activeElement.toString() === '[object HTMLButtonElement]') {\n        document.activeElement.blur();\n      }\n    };\n\n    _this.setLoading = function () {\n      return _this.setState({\n        connecting: true\n      });\n    };\n\n    _this.queryConferenceData = function () {\n      return new Promise( /*#__PURE__*/function () {\n        var _ref22 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(resolve, reject) {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.prev = 0;\n                  _context4.next = 3;\n                  return _this.queryConference();\n\n                case 3:\n                  _context4.next = 5;\n                  return _this.queryMyInfo();\n\n                case 5:\n                  _this.queryUnreadMessages();\n\n                  _this.queryDraw();\n\n                  _this.queryResources();\n\n                  _this.queryRecording();\n\n                  _this.queryPolls(_queryPollsType.INIT);\n\n                  _this.queryAttendances(true);\n\n                  _this.queryActiveQnASession();\n\n                  _this.props.conferenceState.setState({\n                    statusConference: _userStatus.ONLINE\n                  });\n\n                  _this.setState({\n                    connecting: false,\n                    visible: false,\n                    show: 'DETAIL'\n                  }, function () {\n                    resolve(true);\n                  });\n\n                  _context4.next = 19;\n                  break;\n\n                case 16:\n                  _context4.prev = 16;\n                  _context4.t0 = _context4[\"catch\"](0);\n                  resolve(false);\n\n                case 19:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, null, [[0, 16]]);\n        }));\n\n        return function (_x4, _x5) {\n          return _ref22.apply(this, arguments);\n        };\n      }());\n    };\n\n    _this.initJoin = function () {\n      _this.joinConference().then(function (joinConferenceResult) {\n        if (joinConferenceResult && joinConferenceResult !== _userStatus.WAITING) return _this.queryConferenceData();\n\n        if (joinConferenceResult && joinConferenceResult === _userStatus.WAITING) {\n          return _this.queryConference().then(function (queryConferenceResult) {\n            if (queryConferenceResult) return _this.queryMyInfo().then(function (queryMyInfoResult) {\n              if (queryMyInfoResult) {\n                return _this.setState({\n                  connecting: false,\n                  show: 'DETAIL'\n                });\n              }\n            });\n          });\n        }\n      }).catch(function (errors) {\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'REQUIRE_PASSWORD') {\n          _this.setState({\n            connecting: false,\n            visible: true\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_HAS_NOT_STARTED') {\n          _this.setState({\n            connecting: false,\n            show: 'NOT_STARTED'\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_FINISHED') {\n          _this.setState({\n            connecting: false,\n            show: 'FINISHED'\n          });\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_NOT_FOUND') {\n          _this.props.history.push('/notfound');\n        }\n      });\n    };\n\n    _this.closeEverything = function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          setState = _assertThisInitialize3.props.conferenceState.setState;\n\n      setState({\n        isPanelOpen: false,\n        isShowAttendancesManagement: false,\n        isShowParticipants: false,\n        isShowMessages: false,\n        isShowPoll: false,\n        isShowPollManagement: false,\n        isShowQnAManagement: false,\n        isShowQnA: false,\n        currentTab: ''\n      });\n    };\n\n    var showDesktopPicker = function showDesktopPicker(_options, onSourceChoose) {\n      obtainDesktopSources(['screen', 'window']).then( /*#__PURE__*/function () {\n        var _ref23 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(_sources) {\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) {\n              switch (_context5.prev = _context5.next) {\n                case 0:\n                  onSourceChoose(_this.props.conferenceState.sourceDesktopElectron.source.id, _this.props.conferenceState.sourceDesktopElectron.type);\n\n                case 1:\n                case \"end\":\n                  return _context5.stop();\n              }\n            }\n          }, _callee5);\n        }));\n\n        return function (_x6) {\n          return _ref23.apply(this, arguments);\n        };\n      }());\n    };\n\n    window.JitsiMeetScreenObtainer = {\n      openDesktopPicker: function openDesktopPicker(options, onSourceChoose) {\n        showDesktopPicker(options, onSourceChoose);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(ConferenceComponent, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n        var last, usersOnline, data, detected;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                last = +new Date();\n                _context6.next = 3;\n                return this.queryGetOnlineInConference();\n\n              case 3:\n                usersOnline = _context6.sent;\n                _context6.prev = 4;\n                _context6.next = 7;\n                return decode(window.localStorage.getItem('access-token'));\n\n              case 7:\n                data = _context6.sent;\n                detected = usersOnline.some(function (obj) {\n                  return obj.userId === data.userId;\n                });\n\n                if (detected) {\n                  this.setState({\n                    isShowModalNotificationOpenManyTab: true\n                  });\n                } else {\n                  this.initJoin();\n                }\n\n                _context6.next = 14;\n                break;\n\n              case 12:\n                _context6.prev = 12;\n                _context6.t0 = _context6[\"catch\"](4);\n\n              case 14:\n                console.log(\"Process in \".concat(+new Date() - last, \" ms\"));\n\n              case 15:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[4, 12]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.subscriberPoll) {\n        this.subscriberPoll.unsubscribe();\n        this.subscriberPoll = null;\n      }\n\n      if (this.subscriberAttend) {\n        this.subscriberAttend.unsubscribe();\n        this.subscriberAttend = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this,\n          _conferenceState$conf,\n          _conferenceState$conf2,\n          _conferenceState$conf3,\n          _conferenceState$conf4;\n\n      if (this.state.connecting) return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ReactNotification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 729,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(ModalNotificationOpenManyTab, {\n        conferenceCode: this.state.conferenceCode,\n        handleJoin: this.initJoin,\n        visible: this.state.isShowModalNotificationOpenManyTab,\n        handleCancel: function handleCancel() {\n          return _this2.setState({\n            isShowModalNotificationOpenManyTab: false\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(BounceLoader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 11\n        }\n      }));\n      var _this$props = this.props,\n          conferenceState = _this$props.conferenceState,\n          _this$props$conferenc7 = _this$props.conferenceState,\n          pollsInfo = _this$props$conferenc7.pollsInfo,\n          myInfo = _this$props$conferenc7.myInfo;\n      var votedYet = pollsInfo.length ? pollsInfo.map(function (e) {\n        return e.userVotes.map(function (i) {\n          return i.user._id;\n        });\n      }).flat(1).includes(myInfo === null || myInfo === void 0 ? void 0 : myInfo._id) : false;\n      var publicPollState = votedYet && conferenceState.isPanelOpen && conferenceState.isShowPoll && conferenceState.isShowPollResult && conferenceState.currentTab === _tabs.POLL;\n      var renderCo = {\n        PASSWORD: /*#__PURE__*/React.createElement(ModalInputPassword, {\n          visible: this.state.visible,\n          verifyPassword: this.verifyPassword,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 17\n          }\n        }),\n        NOT_STARTED: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper-join-error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: logo,\n          alt: \"icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 11\n          }\n        }, \"Conference has not started. Please try again later\")),\n        FINISHED: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"wrapper-join-error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 770,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: logo,\n          alt: \"icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 11\n          }\n        }, \"Conference has finished. Please try again later\")),\n        DETAIL: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(NotificationSubscriber, {\n          conferenceId: this.state.conferenceId,\n          queryConference: this.queryConference,\n          queryMyInfo: this.queryMyInfo,\n          queryPolls: this.queryPolls,\n          queryAttendances: this.queryAttendances,\n          pubsubVoting: this.pubsubVoting,\n          queryResources: this.queryResources,\n          queryResource: this.queryResource,\n          queryRecording: this.queryRecording,\n          queryDraw: this.queryDraw,\n          setLoading: this.setLoading,\n          queryConferenceData: this.queryConferenceData,\n          pubsubAttending: this.pubsubAttending,\n          queryActiveQnASession: this.queryActiveQnASession,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 11\n          }\n        }), conferenceState.conference && /*#__PURE__*/React.createElement(_Tooltip, {\n          placement: \"right\",\n          mouseEnterDelay: 0.2,\n          title: function title() {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: \"conference-tooltip-container\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"tooltip-header\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(AvatarComponent, {\n              name: \"\".concat(conferenceState.conference.createdBy.firstname, \" \").concat(conferenceState.conference.createdBy.lastname),\n              size: 50,\n              isShowTooltip: false,\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 801,\n                columnNumber: 21\n              }\n            }), /*#__PURE__*/React.createElement(\"span\", {\n              className: \"conference-name\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 21\n              }\n            }, conferenceState.conference.name), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"conference-host\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 23\n              }\n            }, \"Host: \"), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 23\n              }\n            }, \"\".concat(conferenceState.conference.createdBy.firstname, \" \").concat(conferenceState.conference.createdBy.lastname)))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"tooltip-body\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 19\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              className: \"tooltip-content\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 23\n              }\n            }, \"URL: \"), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 817,\n                columnNumber: 23\n              }\n            }, document.URL)), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"tooltip-content\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 21\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 23\n              }\n            }, \"Meeting number: \"), /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 23\n              }\n            }, conferenceState.conference.code))));\n          },\n          overlayClassName: \"conference-info-tooltip\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(_Icon, {\n          type: \"info-circle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 15\n          }\n        })), (conferenceState === null || conferenceState === void 0 ? void 0 : conferenceState.conference) && conferenceState.statusConference !== _userStatus.WAITING && conferenceState.conference.isLocked && (conferenceState === null || conferenceState === void 0 ? void 0 : (_conferenceState$conf = conferenceState.conference) === null || _conferenceState$conf === void 0 ? void 0 : (_conferenceState$conf2 = _conferenceState$conf.createdBy) === null || _conferenceState$conf2 === void 0 ? void 0 : _conferenceState$conf2._id) === conferenceState.myUserId ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"lock-conference\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: lockIcon,\n          width: \"20px\",\n          height: \"20px\",\n          alt: \"icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 17\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }\n        }), conferenceState.isShowBoxChat ? /*#__PURE__*/React.createElement(BoxMessage, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 44\n          }\n        }) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 61\n          }\n        }), conferenceState.conference && /*#__PURE__*/React.createElement(_Button, {\n          onClick: this.closeEverything,\n          className: \"toggleOpenDrawer\",\n          style: conferenceState.isPanelOpen ? publicPollState ? {\n            transform: 'translate(calc(-100% - 762px),-50%) '\n          } : {\n            transform: 'translate(calc(-100% - 382px),-50%) '\n          } : {\n            transform: 'translate(calc(1000px),-50%) '\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          style: conferenceState.isPanelOpen ? {\n            transform: 'rotate(180deg)'\n          } : {\n            transform: 'rotate(0deg)'\n          },\n          className: \"arrowHolder\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(_Icon, {\n          type: \"left\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 862,\n            columnNumber: 17\n          }\n        }))), (conferenceState === null || conferenceState === void 0 ? void 0 : (_conferenceState$conf3 = conferenceState.conference) === null || _conferenceState$conf3 === void 0 ? void 0 : _conferenceState$conf3.isRecording) && !(conferenceState === null || conferenceState === void 0 ? void 0 : (_conferenceState$conf4 = conferenceState.conference) === null || _conferenceState$conf4 === void 0 ? void 0 : _conferenceState$conf4.isLocked) && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"live-icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: liveIcon,\n          alt: \"icon\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 15\n          }\n        })), conferenceState.statusConference !== _userStatus.WAITING && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(JitsiComponent, {\n          conferenceId: this.state.conferenceId,\n          server: conferenceState.conference.server,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(KeyboardShortcuts, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(ReactTour, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 15\n          }\n        })), conferenceState.statusConference === _userStatus.WAITING && /*#__PURE__*/React.createElement(WaitingRoom, {\n          leaveConference: this.mutateLeaveConference,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 884,\n            columnNumber: 13\n          }\n        }))\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"conference-container \".concat(conferenceState.isPanelOpen ? 'with-panel' : ''),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notification-wrapper \".concat(conferenceState.isPanelOpen ? 'with-panel' : 'without-panel'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ReactNotification, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 893,\n          columnNumber: 11\n        }\n      })), renderCo[this.state.show]);\n    }\n  }]);\n\n  return ConferenceComponent;\n}(React.Component), _temp)) || _class) || _class);\nexport default withTranslation()(withRouter(ConferenceComponent));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/index.jsx"],"names":["React","observer","inject","withRouter","ReactNotification","decode","withTranslation","BounceLoader","AvatarComponent","client","M_JOIN_CONFERENCE","Q_CONFERENCE","Q_CONFERENCE_MY_INFO","Q_UNREAD_MESSAGE","Q_POLLS","S_ON_VOTING","Q_RESOURCES","Q_RESOURCE","Q_DRAW","M_CLEAR_DRAW","Q_RECORDING_BY_CONFERENCE","S_ON_ATTENDING","Q_ATTENDANCES","M_LEAVE_CONFERENCE","Q_GET_ONLINE_IN_CONFERENCE","M_VERIFY_PASSWORD","Q_QNA_ACTIVE_SESSION","routesPath","returnError","newNotification","_userStatus","_queryPollsType","_tabs","JitsiComponent","NotificationSubscriber","obtainDesktopSources","KeyboardShortcuts","ReactTour","ModalInputPassword","WaitingRoom","BoxMessage","ModalNotificationOpenManyTab","ConferenceComponent","stores","props","state","conferenceCode","history","location","pathname","split","conferenceId","connecting","visible","show","isShowModalNotificationOpenManyTab","mutateLeaveConference","mutate","mutation","variables","then","leaveConference","data","dismiss","duration","onScreen","setTimeout","push","leave","catch","error","errorMessage","queryGetOnlineInConference","Promise","resolve","reject","query","fetchPolicy","getOnlineInConference","joinConference","setState","conferenceState","statusConference","status","errors","verifyPassword","password","WAITING","queryConferenceData","queryConference","queryConferenceResult","queryMyInfo","queryMyInfoResult","graphQLErrors","message","conference","Error","conferenceUsers","users","myInfo","filter","user","_id","me","role","myRole","myPermissions","permissions","map","per","myUserId","queryUnreadMessages","unreadMessages","unreadMessage","shufflePolls","array","type","PUBLIC","LOCK","gotItems","JSON","parse","localStorage","getItem","LOCAL_KEY","KEY","i","length","setItem","stringify","j","Math","floor","random","temp","answers","setupIndex","queryPolls","polls","createRandom","poll","isActive","isRandom","end","shuffledActivePolls","INIT","CREATE","removeItem","pollsInfo","donePolls","publicPolls","isPublic","pubsubVoting","queryAttendances","firstTime","attendances","activeAttendance","find","attendance","attendanceInfo","doneAttendances","isShowAttendance","pubsubAttending","queryActiveQnASession","getActiveQNASessions","activeQnA","hasQnA","pollIds","subscriberPoll","subscribe","onVoting","_updatePollInfo","attendanceId","subscriberAttend","onAttending","_updateAttendanceInfo","queryDraw","getDrawData","drawData","clearDraw","fileOpen","isImage","uploadedBy","imageUrl","resources","res","console","log","err","queryResources","conferenceResource","myResources","resource","otherResources","queryRecording","recordingByConference","recording","queryResource","resourceById","some","item","index","userVotes","removeFocus","e","document","activeElement","toString","blur","setLoading","ONLINE","initJoin","joinConferenceResult","closeEverything","isPanelOpen","isShowAttendancesManagement","isShowParticipants","isShowMessages","isShowPoll","isShowPollManagement","isShowQnAManagement","isShowQnA","currentTab","showDesktopPicker","_options","onSourceChoose","_sources","sourceDesktopElectron","source","id","window","JitsiMeetScreenObtainer","openDesktopPicker","options","last","Date","usersOnline","detected","obj","userId","unsubscribe","votedYet","flat","includes","publicPollState","isShowPollResult","POLL","renderCo","PASSWORD","NOT_STARTED","logo","FINISHED","DETAIL","createdBy","firstname","lastname","name","URL","code","isLocked","lockIcon","isShowBoxChat","transform","isRecording","liveIcon","server","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport { Tooltip, Icon, Button } from 'antd'\nimport ReactNotification from 'react-notifications-component'\nimport { decode } from 'jsonwebtoken'\nimport { withTranslation } from 'react-i18next'\n\nimport liveIcon from '@misc/images/conference/live.svg'\nimport lockIcon from '@misc/images/ngocly/lock.svg'\nimport logo from '@misc/logo/asset9.svg'\n\nimport './index.less'\n\nimport { BounceLoader, AvatarComponent } from '@components'\nimport {\n  client,\n  M_JOIN_CONFERENCE,\n  Q_CONFERENCE,\n  Q_CONFERENCE_MY_INFO,\n  Q_UNREAD_MESSAGE,\n  Q_POLLS,\n  S_ON_VOTING,\n  Q_RESOURCES,\n  Q_RESOURCE,\n  Q_DRAW,\n  M_CLEAR_DRAW,\n  Q_RECORDING_BY_CONFERENCE,\n  S_ON_ATTENDING,\n  Q_ATTENDANCES,\n  M_LEAVE_CONFERENCE,\n  Q_GET_ONLINE_IN_CONFERENCE,\n  M_VERIFY_PASSWORD,\n  Q_QNA_ACTIVE_SESSION\n} from '@graphql'\nimport { routesPath } from '@router'\nimport { returnError, newNotification } from '@utils'\nimport { _userStatus, _queryPollsType, _tabs } from '@constants'\n\nimport JitsiComponent from './jitsi'\nimport NotificationSubscriber from './subscribers/Notification'\nimport { obtainDesktopSources } from './jitsi/desktopicker'\nimport KeyboardShortcuts from './KeyboardShortcuts'\nimport ReactTour from './ReactTour'\nimport ModalInputPassword from './modals/ModalInputPassword'\nimport WaitingRoom from './WaitingRoom'\nimport BoxMessage from './boxMessage'\nimport ModalNotificationOpenManyTab from './modals/ModalNotificationOpenManyTab'\n\n@inject(({ stores }) => stores)\n@observer\nclass ConferenceComponent extends React.Component {\n  state = {\n    conferenceCode: this.props.history.location.pathname.split('/')[2],\n    conferenceId: '',\n    connecting: true,\n    visible: false,\n    show: 'PASSWORD',\n    isShowModalNotificationOpenManyTab: false\n  }\n\n  constructor(props) {\n    super(props)\n\n    // subscriberPoll = null\n    // subscriberAttend = null\n    const showDesktopPicker = (_options, onSourceChoose) => {\n      obtainDesktopSources(['screen', 'window']).then(async _sources => {\n        onSourceChoose(\n          this.props.conferenceState.sourceDesktopElectron.source.id,\n          this.props.conferenceState.sourceDesktopElectron.type\n        )\n      })\n    }\n\n    window.JitsiMeetScreenObtainer = {\n      openDesktopPicker(options, onSourceChoose) {\n        showDesktopPicker(options, onSourceChoose)\n      }\n    }\n  }\n\n  mutateLeaveConference = () =>\n    client\n      .mutate({\n        mutation: M_LEAVE_CONFERENCE,\n        variables: { conferenceId: this.state.conferenceId }\n      })\n      .then(({ data: { leaveConference } }) => {\n        if (leaveConference) {\n          newNotification('Leave conference successfully! Redirecting...', 'info', {\n            dismiss: { duration: 1000, onScreen: true }\n          })\n          setTimeout(() => {\n            this.props.history.push(routesPath.leave)\n          }, 1000)\n        }\n      })\n      .catch(error =>\n        returnError('Leave Conference', {\n          error,\n          errorMessage: 'An error occurred while leaving conference, please try again later!'\n        })\n      )\n\n  queryGetOnlineInConference = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_GET_ONLINE_IN_CONFERENCE,\n          variables: { conferenceCode: this.state.conferenceCode },\n          fetchPolicy: 'no-cache'\n        })\n        .then(({ data: { getOnlineInConference = [] } }) => {\n          resolve(getOnlineInConference)\n        })\n        .catch(error => {\n          returnError('Query user online', {\n            error,\n            errorMessage: 'Failed to get user online in conference!'\n          })\n          resolve([])\n        })\n    })\n  }\n\n  joinConference = () =>\n    client\n      .mutate({\n        mutation: M_JOIN_CONFERENCE,\n        variables: { conferenceCode: this.state.conferenceCode }\n      })\n      .then(({ data: { joinConference } }) => {\n        this.setState({ conferenceId: joinConference.conferenceId })\n        this.props.conferenceState.setState({ statusConference: joinConference.status })\n        return joinConference.status\n      })\n      .catch(errors => {\n        returnError('Mutation joinConference', {\n          errors,\n          errorMessage: 'Failed to join conference!'\n        })\n        throw errors\n      })\n\n  verifyPassword = password => {\n    client\n      .mutate({\n        mutation: M_VERIFY_PASSWORD,\n        variables: {\n          conferenceCode: this.state.conferenceCode,\n          password\n        }\n      })\n      .then(({ data: { verifyPassword } }) => {\n        this.setState({ conferenceId: verifyPassword.conferenceId })\n        this.props.conferenceState.setState({ statusConference: verifyPassword.status })\n\n        if (verifyPassword && verifyPassword.status !== _userStatus.WAITING) return this.queryConferenceData()\n\n        if (verifyPassword && verifyPassword.status === _userStatus.WAITING) {\n          return this.queryConference().then(queryConferenceResult => {\n            if (queryConferenceResult)\n              return this.queryMyInfo().then(queryMyInfoResult => {\n                if (queryMyInfoResult) {\n                  return this.setState({ connecting: false, show: 'DETAIL' })\n                }\n              })\n          })\n        }\n      })\n      .catch(errors => {\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'WRONG_PASSWORD') {\n          returnError('Mutation joinConference', {\n            errors,\n            errorMessage: 'Wrong Password!'\n          })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_HAS_NOT_STARTED') {\n          this.setState({ connecting: false, show: 'NOT_STARTED' })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_FINISHED') {\n          this.setState({ connecting: false, show: 'FINISHED' })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_NOT_FOUND') {\n          this.props.history.push('/notfound')\n        }\n      })\n  }\n\n  queryConference = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_CONFERENCE,\n          variables: { conferenceId: this.state.conferenceId },\n          fetchPolicy: 'no-cache'\n        })\n        .then(({ data: { conference } }) => {\n          if (!conference) {\n            throw new Error()\n          }\n          this.props.conferenceState.setState({\n            conference: conference,\n            conferenceUsers: conference.users\n          })\n          resolve(true)\n        })\n        .catch(error => {\n          returnError('Query conference', {\n            error,\n            errorMessage: 'Failed to get conference data!'\n          })\n          resolve(false)\n        })\n    })\n  }\n\n  queryMyInfo = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_CONFERENCE_MY_INFO,\n          fetchPolicy: 'no-cache'\n        })\n        .then(({ data: { myInfo } }) => {\n          if (!myInfo) {\n            throw new Error()\n          }\n\n          const { setState, conferenceUsers } = this.props.conferenceState\n          const [me] = conferenceUsers.filter(({ user }) => user && user._id === myInfo._id)\n\n          if (me && me.role) {\n            setState({\n              myRole: me.role._id,\n              myPermissions: me.role.permissions.map(per => per._id),\n              myInfo: myInfo,\n              myUserId: myInfo._id\n            })\n            return resolve(true)\n          }\n\n          setState({ myInfo: myInfo, myUserId: myInfo._id })\n          return resolve(true)\n        })\n        .catch(error => {\n          returnError('Query myInfo', {\n            error,\n            errorMessage: 'Failed to get your account information!'\n          })\n\n          resolve(false)\n        })\n    })\n  }\n\n  queryUnreadMessages = () => {\n    client\n      .query({\n        query: Q_UNREAD_MESSAGE,\n        variables: { conferenceId: this.state.conferenceId },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { unreadMessages } }) => {\n        if (typeof unreadMessages === 'number') {\n          this.props.conferenceState.setState({ unreadMessage: unreadMessages })\n        }\n      })\n      .catch(error => {\n        returnError('Query unreadMessages', {\n          error,\n          errorMessage: 'Failed to get unread messages!'\n        })\n      })\n  }\n\n  shufflePolls = (array, type) => {\n    if (type === _queryPollsType.PUBLIC || type === _queryPollsType.LOCK) {\n      let gotItems = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY))\n\n      for (let i = 0; i < gotItems.length; i -= -1) {\n        gotItems[i]['isPublic'] = array[0]['isPublic']\n        gotItems[i]['isLocked'] = array[0]['isLocked']\n      }\n\n      localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(gotItems))\n\n      return gotItems\n    }\n\n    for (let i = array.length - 1; i >= 0; i--) {\n      let j = Math.floor(Math.random() * (i + 1))\n      let temp = array[i]\n      array[i] = array[j]\n      array[j] = temp\n\n      if (array[i].answers) {\n        let temp = [...array[i].answers]\n        array[i].answers = this.shufflePolls(temp)\n      }\n    }\n\n    return this.setupIndex(array)\n  }\n\n  setupIndex = array => {\n    for (let i = 0; i < array.length; i++) {\n      array[i]['index'] = i\n    }\n    return array\n  }\n\n  queryPolls = state =>\n    client\n      .query({\n        query: Q_POLLS,\n        variables: { conferenceId: this.state.conferenceId },\n        fetchPolicy: 'network-only'\n      })\n      .then(async ({ data: { polls } }) => {\n        if (polls) {\n          let createRandom = polls.filter(poll => poll.isActive).length\n            ? polls.filter(poll => poll.isActive)[0].isRandom\n            : false\n\n          let end = !polls.filter(poll => poll.isActive).length\n\n          let shuffledActivePolls = polls.filter(poll => poll.isActive).length\n            ? polls.filter(poll => poll.isActive)[0].isRandom\n              ? this.shufflePolls(\n                polls.filter(poll => poll.isActive),\n                state\n              )\n              : polls.filter(poll => poll.isActive)\n            : polls.filter(poll => poll.isActive)\n\n          if (createRandom) {\n            if (state === _queryPollsType.INIT) {\n              const gotItems = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY))\n              if (gotItems) {\n                shuffledActivePolls = [...gotItems]\n              } else {\n                localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(shuffledActivePolls))\n              }\n            }\n\n            if (state === _queryPollsType.CREATE) {\n              localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(shuffledActivePolls))\n            }\n          } else if (end) {\n            localStorage.removeItem(_queryPollsType.LOCAL_KEY.KEY)\n          }\n          await this.props.conferenceState.setState({\n            pollsInfo: shuffledActivePolls,\n            // polls.filter(poll => poll.isActive),\n\n            donePolls: polls.filter(poll => !poll.isActive),\n            publicPolls: polls.filter(poll => poll.isPublic)\n          })\n          this.pubsubVoting(shuffledActivePolls.map(poll => poll._id))\n        }\n      })\n      .catch(error =>\n        returnError('Query polls', {\n          error,\n          errorMessage: 'Cannot get polling data!'\n        })\n      )\n\n  queryAttendances = firstTime => {\n    const {\n      props: { conferenceState }\n    } = this\n    return client\n      .query({\n        query: Q_ATTENDANCES,\n        variables: { conferenceId: this.state.conferenceId },\n        fetchPolicy: 'network-only'\n      })\n      .then(async ({ data: { attendances } }) => {\n        if (attendances) {\n          const activeAttendance = attendances.find(attendance => attendance.isActive)\n          await this.props.conferenceState.setState({\n            attendanceInfo: activeAttendance,\n            doneAttendances: attendances.filter(attendance => !attendance.isActive)\n          })\n          if (activeAttendance) {\n            if (firstTime) {\n              setTimeout(() => conferenceState.setState({ isShowAttendance: true }), 1400)\n            } else {\n              conferenceState.setState({ isShowAttendance: true })\n            }\n            this.pubsubAttending(activeAttendance._id)\n          }\n        }\n      })\n      .catch(error =>\n        returnError('Query queryAttendances', {\n          error,\n          errorMessage: 'Cannot get queryAttendances data!'\n        })\n      )\n  }\n\n  queryActiveQnASession = () => {\n    const {\n      props: { conferenceState }\n    } = this\n    return client\n      .query({\n        query: Q_QNA_ACTIVE_SESSION,\n        variables: { conferenceId: this.state.conferenceId },\n        fetchPolicy: 'network-only'\n      })\n      .then(async ({ data: { getActiveQNASessions } }) => {\n        if (getActiveQNASessions) {\n          conferenceState.setState({\n            activeQnA: getActiveQNASessions,\n            hasQnA: true\n          })\n        }\n      })\n      .catch(error =>\n        returnError('Query queryActiveQnASession', {\n          error,\n          errorMessage: 'Cannot get queryActiveQnASession data!'\n        })\n      )\n  }\n\n  pubsubVoting = pollIds => {\n    this.subscriberPoll = client\n      .subscribe({\n        query: S_ON_VOTING,\n        variables: { pollIds },\n        fetchPolicy: 'network-only'\n      })\n      .subscribe(({ data: { onVoting } }) => {\n        this._updatePollInfo(onVoting)\n      })\n  }\n\n  pubsubAttending = attendanceId => {\n    this.subscriberAttend = client\n      .subscribe({\n        query: S_ON_ATTENDING,\n        variables: { attendanceId },\n        fetchPolicy: 'network-only'\n      })\n      .subscribe(({ data: { onAttending } }) => {\n        this._updateAttendanceInfo(onAttending)\n      })\n  }\n\n  queryDraw = () =>\n    client\n      .query({\n        query: Q_DRAW,\n        variables: {\n          conferenceId: this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { getDrawData } }) => {\n        this.props.conferenceState.setState({ drawData: getDrawData })\n      })\n      .catch(error =>\n        returnError('Query Draw Data', {\n          error,\n          errorMessage: 'Cannot get Draw Data !'\n        })\n      )\n\n  clearDraw = () => {\n    const { fileOpen, myUserId } = this.props.conferenceState\n    if (fileOpen && fileOpen.isImage && fileOpen.uploadedBy._id === myUserId) {\n      client\n        .mutate({\n          mutation: M_CLEAR_DRAW,\n          variables: {\n            conferenceId: this.state.conferenceId,\n            imageUrl: fileOpen.resources[0]\n          }\n        })\n        .then(res => console.log(res))\n        .catch(err => console.log(err))\n    }\n  }\n\n  queryResources = () =>\n    client\n      .query({\n        query: Q_RESOURCES,\n        variables: {\n          conferenceId: this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { conferenceResource } }) => {\n        if (conferenceResource) {\n          const { setState, myUserId } = this.props.conferenceState\n          setState({\n            myResources: conferenceResource.filter(resource => resource.uploadedBy._id === myUserId),\n            otherResources: conferenceResource.filter(resource => resource.uploadedBy._id !== myUserId)\n          })\n        }\n      })\n      .catch(error =>\n        returnError('Querry Resources', {\n          error,\n          errorMessage: 'Cannot get Resources data!'\n        })\n      )\n\n  queryRecording = () => {\n    client\n      .query({\n        query: Q_RECORDING_BY_CONFERENCE,\n        variables: {\n          conferenceId: this.state.conferenceId\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { recordingByConference } }) => {\n        this.props.conferenceState.setState({ recording: recordingByConference })\n      })\n      .catch(error =>\n        returnError('Querry Resources', {\n          error,\n          errorMessage: 'Cannot get recording by conference!'\n        })\n      )\n  }\n\n  queryResource = _id =>\n    client\n      .query({\n        query: Q_RESOURCE,\n        variables: {\n          _id\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { resourceById } }) => {\n        const { myResources, setState, otherResources } = this.props.conferenceState\n        if (resourceById) {\n          if (myResources.some(item => item._id === resourceById._id)) {\n            setState({ myResources: [resourceById, ...myResources.filter(item => item._id !== resourceById._id)] })\n          }\n\n          if (otherResources.some(item => item._id === resourceById._id)) {\n            setState({\n              otherResources: [resourceById, ...otherResources.filter(item => item._id !== resourceById._id)]\n            })\n          }\n        }\n      })\n      .catch(error =>\n        returnError('Querry Resource', {\n          error,\n          errorMessage: 'Cannot get Resource data!'\n        })\n      )\n\n  _updatePollInfo = poll => {\n    const { setState, pollsInfo, donePolls, publicPolls } = this.props.conferenceState\n    let temp = JSON.parse(localStorage.getItem(_queryPollsType.LOCAL_KEY.KEY))\n    if (temp) {\n      for (let index = 0; index < temp.length; index -= -1) {\n        if (temp[index]._id === poll._id) {\n          temp[index].userVotes = poll.userVotes\n        }\n      }\n      localStorage.setItem(_queryPollsType.LOCAL_KEY.KEY, JSON.stringify(temp))\n    }\n\n    if (poll.isActive) {\n      setState({\n        pollsInfo: temp ? temp : [...pollsInfo.filter(item => item._id !== poll._id), poll],\n        donePolls: donePolls.filter(item => item._id !== poll._id),\n        publicPolls: poll.isPublic ? [...pollsInfo.filter(item => item._id !== poll._id), poll] : publicPolls\n      })\n    } else {\n      setState({\n        pollsInfo: pollsInfo.filter(item => item._id !== poll._id),\n        donePolls: [...donePolls.filter(item => item._id !== poll._id), poll]\n      })\n    }\n  }\n\n  _updateAttendanceInfo = attendance => {\n    const { setState, doneAttendances } = this.props.conferenceState\n    if (attendance.isActive) {\n      setState({\n        attendanceInfo: attendance,\n        doneAttendances: doneAttendances.filter(item => item._id !== attendance._id)\n      })\n    } else {\n      setState({\n        attendanceInfo: {},\n        doneAttendances: [...doneAttendances.filter(item => item._id !== attendance._id), attendance]\n      })\n    }\n  }\n\n  // *_: Component life cycle\n  removeFocus = e => {\n    if (document.activeElement.toString() === '[object HTMLButtonElement]') {\n      document.activeElement.blur()\n    }\n  }\n\n  setLoading = () => this.setState({ connecting: true })\n\n  queryConferenceData = () => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        await this.queryConference()\n        await this.queryMyInfo()\n\n        this.queryUnreadMessages()\n        this.queryDraw()\n\n        this.queryResources()\n        this.queryRecording()\n        this.queryPolls(_queryPollsType.INIT)\n        this.queryAttendances(true)\n        this.queryActiveQnASession()\n        this.props.conferenceState.setState({ statusConference: _userStatus.ONLINE })\n        this.setState({ connecting: false, visible: false, show: 'DETAIL' }, () => {\n          resolve(true)\n        })\n      } catch (err) {\n        resolve(false)\n      }\n    })\n  }\n\n  initJoin = () => {\n    this.joinConference()\n      .then(joinConferenceResult => {\n        if (joinConferenceResult && joinConferenceResult !== _userStatus.WAITING) return this.queryConferenceData()\n\n        if (joinConferenceResult && joinConferenceResult === _userStatus.WAITING) {\n          return this.queryConference().then(queryConferenceResult => {\n            if (queryConferenceResult)\n              return this.queryMyInfo().then(queryMyInfoResult => {\n                if (queryMyInfoResult) {\n                  return this.setState({ connecting: false, show: 'DETAIL' })\n                }\n              })\n          })\n        }\n      })\n      .catch(errors => {\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'REQUIRE_PASSWORD') {\n          this.setState({ connecting: false, visible: true })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_HAS_NOT_STARTED') {\n          this.setState({ connecting: false, show: 'NOT_STARTED' })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_FINISHED') {\n          this.setState({ connecting: false, show: 'FINISHED' })\n        }\n\n        if (errors.graphQLErrors && errors.graphQLErrors[0].message === 'CONFERENCE_NOT_FOUND') {\n          this.props.history.push('/notfound')\n        }\n      })\n  }\n\n  async componentDidMount() {\n    const last = +new Date()\n    const usersOnline = await this.queryGetOnlineInConference()\n    try {\n      const data = await decode(window.localStorage.getItem('access-token'))\n      const detected = usersOnline.some(obj => obj.userId === data.userId)\n      if (detected) {\n        this.setState({ isShowModalNotificationOpenManyTab: true })\n      } else {\n        this.initJoin()\n      }\n    } catch (error) { }\n    console.log(`Process in ${+new Date() - last} ms`)\n  }\n\n  closeEverything = () => {\n    const {\n      props: {\n        conferenceState: { setState }\n      }\n    } = this\n\n    setState({\n      isPanelOpen: false,\n      isShowAttendancesManagement: false,\n      isShowParticipants: false,\n      isShowMessages: false,\n      isShowPoll: false,\n      isShowPollManagement: false,\n      isShowQnAManagement: false,\n      isShowQnA: false,\n      currentTab: ''\n    })\n  }\n\n  componentWillUnmount() {\n    if (this.subscriberPoll) {\n      this.subscriberPoll.unsubscribe()\n      this.subscriberPoll = null\n    }\n\n    if (this.subscriberAttend) {\n      this.subscriberAttend.unsubscribe()\n      this.subscriberAttend = null\n    }\n  }\n\n  render() {\n    if (this.state.connecting)\n      return (\n        <>\n          <ReactNotification />\n\n          <ModalNotificationOpenManyTab\n            conferenceCode={this.state.conferenceCode}\n            handleJoin={this.initJoin}\n            visible={this.state.isShowModalNotificationOpenManyTab}\n            handleCancel={() => this.setState({ isShowModalNotificationOpenManyTab: false })}\n          />\n\n          <BounceLoader />\n        </>\n      )\n\n    const {\n      conferenceState,\n      conferenceState: { pollsInfo, myInfo }\n    } = this.props\n\n    const votedYet = pollsInfo.length\n      ? pollsInfo\n        .map(e => e.userVotes.map(i => i.user._id))\n        .flat(1)\n        .includes(myInfo?._id)\n      : false\n\n    const publicPollState =\n      votedYet &&\n      conferenceState.isPanelOpen &&\n      conferenceState.isShowPoll &&\n      conferenceState.isShowPollResult &&\n      conferenceState.currentTab === _tabs.POLL\n\n    const renderCo = {\n      PASSWORD: <ModalInputPassword visible={this.state.visible} verifyPassword={this.verifyPassword} />,\n      NOT_STARTED: (\n        <div className='wrapper-join-error'>\n          <img src={logo} alt='icon' />\n          <p>Conference has not started. Please try again later</p>\n        </div>\n      ),\n      FINISHED: (\n        <div className='wrapper-join-error'>\n          <img src={logo} alt='icon' />\n          <p>Conference has finished. Please try again later</p>\n        </div>\n      ),\n      DETAIL: (\n        <>\n          <NotificationSubscriber\n            conferenceId={this.state.conferenceId}\n            queryConference={this.queryConference}\n            queryMyInfo={this.queryMyInfo}\n            queryPolls={this.queryPolls}\n            queryAttendances={this.queryAttendances}\n            pubsubVoting={this.pubsubVoting}\n            queryResources={this.queryResources}\n            queryResource={this.queryResource}\n            queryRecording={this.queryRecording}\n            queryDraw={this.queryDraw}\n            setLoading={this.setLoading}\n            queryConferenceData={this.queryConferenceData}\n            pubsubAttending={this.pubsubAttending}\n            queryActiveQnASession={this.queryActiveQnASession}\n          />\n\n          {conferenceState.conference && (\n            <Tooltip\n              placement='right'\n              mouseEnterDelay={0.2}\n              title={() => (\n                <div className='conference-tooltip-container'>\n                  <div className='tooltip-header'>\n                    <AvatarComponent\n                      name={`${conferenceState.conference.createdBy.firstname} ${conferenceState.conference.createdBy.lastname}`}\n                      size={50}\n                      isShowTooltip={false}\n                    />\n                    <span className='conference-name'>{conferenceState.conference.name}</span>\n                    <div className='conference-host'>\n                      <span>Host: </span>\n                      <span>\n                        {`${conferenceState.conference.createdBy.firstname} ${conferenceState.conference.createdBy.lastname}`}\n                      </span>\n                    </div>\n                  </div>\n                  <div className='tooltip-body'>\n                    <div className='tooltip-content'>\n                      <span>URL: </span>\n                      <span>{document.URL}</span>\n                    </div>\n                    <div className='tooltip-content'>\n                      <span>Meeting number: </span>\n                      <span>{conferenceState.conference.code}</span>\n                    </div>\n                  </div>\n                </div>\n              )}\n              overlayClassName='conference-info-tooltip'\n            >\n              {/* <span className='iconHolder'></span>x, */}\n              <Icon type='info-circle' />\n            </Tooltip>\n          )}\n\n          {conferenceState?.conference &&\n            conferenceState.statusConference !== _userStatus.WAITING &&\n            conferenceState.conference.isLocked &&\n            conferenceState?.conference?.createdBy?._id === conferenceState.myUserId ? (\n              <div className='lock-conference'>\n                <img src={lockIcon} width='20px' height='20px' alt='icon' />\n              </div>\n            ) : (\n              <React.Fragment />\n            )}\n\n          {conferenceState.isShowBoxChat ? <BoxMessage /> : <React.Fragment />}\n\n          {conferenceState.conference && (\n            <Button\n              onClick={this.closeEverything}\n              className='toggleOpenDrawer'\n              style={\n                conferenceState.isPanelOpen\n                  ? publicPollState\n                    ? { transform: 'translate(calc(-100% - 762px),-50%) ' }\n                    : { transform: 'translate(calc(-100% - 382px),-50%) ' }\n                  : { transform: 'translate(calc(1000px),-50%) ' }\n              }\n            >\n              <span\n                style={conferenceState.isPanelOpen ? { transform: 'rotate(180deg)' } : { transform: 'rotate(0deg)' }}\n                className='arrowHolder'\n              >\n                <Icon type='left' />\n              </span>\n            </Button>\n          )}\n\n          {conferenceState?.conference?.isRecording && !conferenceState?.conference?.isLocked && (\n            <div className='live-icon'>\n              <img src={liveIcon} alt='icon' />\n            </div>\n          )}\n\n          {conferenceState.statusConference !== _userStatus.WAITING && (\n            <>\n              <JitsiComponent conferenceId={this.state.conferenceId} server={conferenceState.conference.server} />\n              <KeyboardShortcuts />\n\n              {/* Tour */}\n              <ReactTour />\n            </>\n          )}\n\n          {conferenceState.statusConference === _userStatus.WAITING && (\n            <WaitingRoom leaveConference={this.mutateLeaveConference} />\n          )}\n        </>\n      )\n    }\n\n    return (\n      <div className={`conference-container ${conferenceState.isPanelOpen ? 'with-panel' : ''}`}>\n        <div className={`notification-wrapper ${conferenceState.isPanelOpen ? 'with-panel' : 'without-panel'}`}>\n          <ReactNotification />\n        </div>\n        {renderCo[this.state.show]}\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(withRouter(ConferenceComponent))\n"]},"metadata":{},"sourceType":"module"}