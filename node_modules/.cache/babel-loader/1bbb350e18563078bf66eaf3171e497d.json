{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/settings/EmailSetting/FormAddEmail.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './FormAddEmail.less';\n\nvar AddEmailForm = /*#__PURE__*/function (_React$Component) {\n  _inherits(AddEmailForm, _React$Component);\n\n  var _super = _createSuper(AddEmailForm);\n\n  function AddEmailForm() {\n    var _this;\n\n    _classCallCheck(this, AddEmailForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          if (_this.props.type === 'CREATE') {\n            _this.props.handleCreateItem(values.email);\n          } else {\n            _this.props.handleUpdateItem(values.email, _this.props.data.isActive);\n          }\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AddEmailForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          getFieldDecorator = _this$props.form.getFieldDecorator,\n          i18n = _this$props.i18n,\n          handleCancelEmailSetting = _this$props.handleCancelEmailSetting,\n          type = _this$props.type,\n          data = _this$props.data;\n      return /*#__PURE__*/React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"add-email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(_Form.Item, {\n        className: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, \"@\"), getFieldDecorator('email', {\n        initialValue: type === 'UPDATE' ? data['rootEmail'] : '',\n        rules: [{\n          required: true,\n          message: i18n.t('require.requireEmail')\n        }, {\n          pattern: /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n          message: i18n.t('require.requireEmailExtensionCorrect')\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        placeholder: \"Email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        className: \"group-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'flex-end'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        ghost: true,\n        className: \"login-form-button\",\n        style: {\n          marginRight: '12px'\n        },\n        onClick: handleCancelEmailSetting,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, i18n.t('common.save')))));\n    }\n  }]);\n\n  return AddEmailForm;\n}(React.Component);\n\nexport default withTranslation()(_Form.create({\n  name: 'fofgot_password'\n})(AddEmailForm));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/settings/EmailSetting/FormAddEmail.jsx"],"names":["React","withTranslation","AddEmailForm","handleSubmit","e","preventDefault","props","form","validateFields","err","values","type","handleCreateItem","email","handleUpdateItem","data","isActive","getFieldDecorator","i18n","handleCancelEmailSetting","initialValue","rules","required","message","t","pattern","display","justifyContent","marginRight","Component","create","name"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Form, Input, Button } from 'antd'\nimport './FormAddEmail.less'\n\nclass AddEmailForm extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        if(this.props.type === 'CREATE') {\n          this.props.handleCreateItem(values.email)\n        } else {\n          this.props.handleUpdateItem(values.email, this.props.data.isActive)\n        }\n      }\n    })\n  }\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      i18n,\n      handleCancelEmailSetting,\n      type,\n      data\n    } = this.props\n\n    return (\n      <Form onSubmit={this.handleSubmit} className='add-email'>\n        <Form.Item className='email'>\n          <p>@</p>\n          {getFieldDecorator('email', {\n            initialValue: type === 'UPDATE' ? data['rootEmail'] : '',\n            rules: [\n              { required: true, message: i18n.t('require.requireEmail') },\n              {\n                pattern: /^((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n                message: i18n.t('require.requireEmailExtensionCorrect')\n              }\n            ]\n          })(<Input placeholder='Email' />)}\n        </Form.Item>\n        <Form.Item className='group-button'>\n          <div style={{display: 'flex', justifyContent: 'flex-end'}}>\n            <Button \n              type='primary' \n              ghost \n              className='login-form-button' \n              style={{marginRight: '12px'}}\n              onClick={handleCancelEmailSetting}\n            >\n              {i18n.t('common.cancel')}\n            </Button>\n            <Button type='primary' htmlType='submit' className='login-form-button'>\n              {i18n.t('common.save')}\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nexport default withTranslation()(Form.create({ name: 'fofgot_password' })(AddEmailForm))\n"]},"metadata":{},"sourceType":"module"}