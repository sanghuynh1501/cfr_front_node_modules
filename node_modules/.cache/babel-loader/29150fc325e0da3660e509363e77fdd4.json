{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/ModalEditNode.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './ModalCreateNode.less';\nimport { client, M_UPDATE_NODE } from '@graphql';\nimport { returnError, newNotification, parseError } from '@utils';\nimport NodeForm from './NodeForm';\n\nvar ModalEditNode = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalEditNode, _React$PureComponent);\n\n  var _super = _createSuper(ModalEditNode);\n\n  function ModalEditNode() {\n    var _this;\n\n    _classCallCheck(this, ModalEditNode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visible: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      _this.refs['create-form'].validateFields(function (err, values) {\n        if (!err) {\n          _this.handleEditGroup(values);\n        }\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      _this.refs['create-form'].resetFields();\n    };\n\n    _this.handleEditGroup = function (data) {\n      var _this$props = _this.props,\n          queryNode = _this$props.queryNode,\n          node = _this$props.node;\n      var descriptions = data.descriptions,\n          name = data.name;\n      client.mutate({\n        mutation: M_UPDATE_NODE,\n        variables: {\n          nodeId: node._id,\n          input: {\n            name: name,\n            descriptions: descriptions\n          }\n        }\n      }).then(function (_ref) {\n        var updateNode = _ref.data.updateNode;\n\n        _this.refs['create-form'].resetFields();\n\n        newNotification(_this.props.i18n.t('notification.updateGroupSuccess'), 'success', {\n          container: 'top-right'\n        });\n\n        _this.handleCancel();\n\n        queryNode(node._id);\n      }).catch(function (err) {\n        returnError('Error', {\n          errorMessage: _this.props.i18n.t(parseError(err))\n        }, {\n          container: 'top-right'\n        });\n        return false;\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalEditNode, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          i18n = _this$props2.i18n,\n          node = _this$props2.node;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n        className: \"btn-edit\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, i18n.t('common.edit')), /*#__PURE__*/React.createElement(_Modal, {\n        title: i18n.t('group.editGroup'),\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        className: \"common-modal modal-template\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NodeForm, {\n        node: node,\n        ref: \"create-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, i18n.t('common.edit')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        ghost: true,\n        onClick: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')))));\n    }\n  }]);\n\n  return ModalEditNode;\n}(React.PureComponent);\n\nexport default withTranslation()(ModalEditNode);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/ModalEditNode.jsx"],"names":["React","withTranslation","client","M_UPDATE_NODE","returnError","newNotification","parseError","NodeForm","ModalEditNode","state","visible","showModal","setState","handleOk","e","refs","validateFields","err","values","handleEditGroup","handleCancel","resetFields","data","props","queryNode","node","descriptions","name","mutate","mutation","variables","nodeId","_id","input","then","updateNode","i18n","t","container","catch","errorMessage","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Modal, Button } from 'antd'\nimport './ModalCreateNode.less'\n\nimport { client, M_UPDATE_NODE } from '@graphql'\nimport { returnError, newNotification, parseError } from '@utils'\n\nimport NodeForm from './NodeForm'\n\nclass ModalEditNode extends React.PureComponent {\n  state = {\n    visible: false\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    })\n  }\n\n  handleOk = e => {\n    this.refs['create-form'].validateFields((err, values) => {\n      if (!err) {\n        this.handleEditGroup(values)\n      }\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    })\n    this.refs['create-form'].resetFields()\n  }\n\n\n  handleEditGroup = data => {\n    const { queryNode, node } = this.props\n    const {\n      descriptions,\n      name\n    } = data\n\n    client\n      .mutate({\n        mutation: M_UPDATE_NODE,\n        variables: {\n          nodeId: node._id,\n          input: {\n            name,\n            descriptions\n          }\n        }\n      })\n      .then(({ data: { updateNode } }) => {\n        this.refs['create-form'].resetFields()\n        newNotification(this.props.i18n.t('notification.updateGroupSuccess'), 'success', {\n          container: 'top-right'\n        })\n        this.handleCancel()\n        queryNode(node._id)\n      })\n      .catch(err => {\n        returnError(\n          'Error',\n          { errorMessage: this.props.i18n.t(parseError(err)) },\n          { container: 'top-right' }\n        )\n        return false\n      })\n  }\n\n  render() {\n    const {\n      props: { i18n, node }\n    } = this\n\n    return (\n      <>\n        <Button className='btn-edit' onClick={this.showModal}>\n          {i18n.t('common.edit')}\n        </Button>\n        <Modal\n          title={i18n.t('group.editGroup')}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          className='common-modal modal-template'\n        >\n          <NodeForm node={node} ref='create-form' />\n          <div className='wrapper-button'>\n            <Button\n              type='primary'\n              onClick={this.handleOk}\n            >\n              {i18n.t('common.edit')}\n            </Button>\n            <Button\n              type='primary'\n              ghost\n              onClick={this.handleCancel}\n            >\n              {i18n.t('common.cancel')}\n            </Button>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(ModalEditNode)"]},"metadata":{},"sourceType":"module"}