{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/settings/index.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ServerSetting from './ServerSetting';\nimport { inject, observer } from 'mobx-react';\nimport { withRouter } from 'react-router-dom';\nimport { isSupperAdmin, hasPermission } from '@utils';\nimport { PER } from '@constants';\nimport EmailSetting from './EmailSetting';\nimport GoogleAPISetting from './GoogleAPISetting';\nimport TelegramAPISetting from './TelegramAPISetting';\nvar TabPane = _Tabs.TabPane;\nvar Settings = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), withRouter(_class = _dec(_class = observer(_class = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Settings, _React$PureComponent);\n\n  var _super = _createSuper(Settings);\n\n  function Settings() {\n    _classCallCheck(this, Settings);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Settings, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _globalState$myInfo;\n\n      var _this$props = this.props,\n          globalState = _this$props.globalState,\n          history = _this$props.history;\n      var profiles = globalState === null || globalState === void 0 ? void 0 : (_globalState$myInfo = globalState.myInfo) === null || _globalState$myInfo === void 0 ? void 0 : _globalState$myInfo.profiles;\n      var isAllowSettingApp = isSupperAdmin(profiles) || hasPermission(profiles, PER.P_SETTING_UPDATE);\n\n      if (!isAllowSettingApp) {\n        history.push('/');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var i18n = this.props.i18n;\n      return /*#__PURE__*/React.createElement(_Tabs, {\n        className: \"conferenceTabs\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tab: \"Servers\",\n        key: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(ServerSetting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: i18n.t('setting.emailSetting'),\n        key: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(EmailSetting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: i18n.t('setting.googleAPI.setting'),\n        key: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(GoogleAPISetting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: i18n.t('setting.telegramAPI.setting'),\n        key: \"4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TelegramAPISetting, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return Settings;\n}(React.PureComponent)) || _class) || _class) || _class);\nexport default withTranslation()(Settings);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/settings/index.jsx"],"names":["React","withTranslation","ServerSetting","inject","observer","withRouter","isSupperAdmin","hasPermission","PER","EmailSetting","GoogleAPISetting","TelegramAPISetting","TabPane","Settings","stores","props","globalState","history","profiles","myInfo","isAllowSettingApp","P_SETTING_UPDATE","push","i18n","t","PureComponent"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;AAGA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AACA,SAASC,GAAT,QAAoB,YAApB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;IAEQC,O,SAAAA,O;IAKFC,Q,WAFLV,MAAM,CAAC;AAAA,MAAGW,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,EADNT,U,wBAEAD,Q;;;;;;;;;;;;;wCAGqB;AAAA;;AAAA,wBAId,KAAKW,KAJS;AAAA,UAEhBC,WAFgB,eAEhBA,WAFgB;AAAA,UAGhBC,OAHgB,eAGhBA,OAHgB;AAKlB,UAAMC,QAAQ,GAAGF,WAAH,aAAGA,WAAH,8CAAGA,WAAW,CAAEG,MAAhB,wDAAG,oBAAqBD,QAAtC;AACA,UAAME,iBAAiB,GAAGd,aAAa,CAACY,QAAD,CAAb,IAA2BX,aAAa,CAACW,QAAD,EAAWV,GAAG,CAACa,gBAAf,CAAlE;;AAEA,UAAI,CAACD,iBAAL,EAAwB;AACtBH,QAAAA,OAAO,CAACK,IAAR,CAAa,GAAb;AACD;AACF;;;6BAEQ;AAAA,UACCC,IADD,GACU,KAAKR,KADf,CACCQ,IADD;AAEP,0BACE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAC,SAAb;AAAuB,QAAA,GAAG,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAKE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAEA,IAAI,CAACC,CAAL,CAAO,sBAAP,CAAd;AAA8C,QAAA,GAAG,EAAC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,eASE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAED,IAAI,CAACC,CAAL,CAAO,2BAAP,CAAd;AAAmD,QAAA,GAAG,EAAC,GAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATF,eAaE,oBAAC,OAAD;AAAS,QAAA,GAAG,EAAED,IAAI,CAACC,CAAL,CAAO,6BAAP,CAAd;AAAqD,QAAA,GAAG,EAAC,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAbF,CADF;AAoBD;;;;EArCoBxB,KAAK,CAACyB,a;AAwC7B,eAAexB,eAAe,GAAGY,QAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Tabs } from 'antd'\n\nimport ServerSetting from './ServerSetting'\nimport { inject, observer } from 'mobx-react'\nimport { withRouter } from 'react-router-dom'\nimport { isSupperAdmin, hasPermission } from '@utils'\nimport { PER } from '@constants'\nimport EmailSetting from './EmailSetting'\nimport GoogleAPISetting from './GoogleAPISetting'\nimport TelegramAPISetting from './TelegramAPISetting'\n\nconst { TabPane } = Tabs\n\n@withRouter\n@inject(({ stores }) => stores)\n@observer\nclass Settings extends React.PureComponent {\n\n  componentDidMount() {\n    const {\n      globalState,\n      history\n    } = this.props\n    const profiles = globalState?.myInfo?.profiles\n    const isAllowSettingApp = isSupperAdmin(profiles) || hasPermission(profiles, PER.P_SETTING_UPDATE)\n\n    if (!isAllowSettingApp) {\n      history.push('/')\n    }\n  }\n\n  render() {\n    const { i18n } = this.props\n    return (\n      <Tabs className='conferenceTabs'>\n        <TabPane tab='Servers' key='1'>\n          <ServerSetting />\n        </TabPane>\n\n        <TabPane tab={i18n.t('setting.emailSetting')} key='2'>\n          <EmailSetting />\n        </TabPane>\n\n        <TabPane tab={i18n.t('setting.googleAPI.setting')} key='3'>\n          <GoogleAPISetting />\n        </TabPane>\n\n        <TabPane tab={i18n.t('setting.telegramAPI.setting')} key='4'>\n          <TelegramAPISetting />\n        </TabPane>\n\n      </Tabs>\n    )\n  }\n}\n\nexport default withTranslation()(Settings)\n"]},"metadata":{},"sourceType":"module"}