{"ast":null,"code":"import _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/components/ImageDraw.jsx\";\nimport React from 'react';\nimport { Arrow, Circle, Line, Rect } from 'react-konva';\nimport { _drawType } from '@constants';\n\nfunction generateRandomNumber() {\n  var randomNumber = ~~(Math.random() * (999 - 100) + 100);\n  return \"\".concat(randomNumber < 10 ? '00' : randomNumber < 100 ? '0' : '').concat(randomNumber);\n}\n\nvar idGenerator = function idGenerator() {\n  return \"\".concat(generateRandomNumber(), \"-\").concat(generateRandomNumber(), \"-\").concat(generateRandomNumber());\n};\n\nvar Drawable = function Drawable(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id) {\n  _classCallCheck(this, Drawable);\n\n  this.startx = startx;\n  this.starty = starty;\n  this.heightLine = heightLine;\n  this.colorLine = colorLine;\n  this.points = points;\n  this.draggable = draggable;\n  this.handleDragEnd = handleDragEnd;\n  this.id = id;\n};\n\nexport var ArrowDrawable = /*#__PURE__*/function (_Drawable) {\n  _inherits(ArrowDrawable, _Drawable);\n\n  var _super = _createSuper(ArrowDrawable);\n\n  function ArrowDrawable(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id) {\n    var _this;\n\n    _classCallCheck(this, ArrowDrawable);\n\n    _this = _super.call(this, startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id);\n    _this.x = startx;\n    _this.y = starty;\n    _this.colorLine = colorLine;\n    _this.heightLine = heightLine;\n    _this.points = points;\n    _this.type = _drawType.ARROW;\n    _this.id = id || idGenerator();\n    _this.draggable = draggable;\n    _this.handleDragEnd = handleDragEnd;\n    return _this;\n  }\n\n  _createClass(ArrowDrawable, [{\n    key: \"registerMovement\",\n    value: function registerMovement(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(points) {\n      this.points = points;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var points = this.points || [this.startx, this.starty, this.x, this.y];\n      return /*#__PURE__*/React.createElement(Arrow, {\n        key: this.id,\n        id: this.id,\n        points: points,\n        fill: this.colorLine,\n        stroke: this.colorLine,\n        strokeWidth: this.heightLine // draggable={this.draggable}\n        // onDragEnd={this.handleDragEnd}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return ArrowDrawable;\n}(Drawable);\nexport var CircleDrawable = /*#__PURE__*/function (_ArrowDrawable) {\n  _inherits(CircleDrawable, _ArrowDrawable);\n\n  var _super2 = _createSuper(CircleDrawable);\n\n  function CircleDrawable(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id) {\n    var _this2;\n\n    _classCallCheck(this, CircleDrawable);\n\n    _this2 = _super2.call(this, startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id);\n    _this2.x = startx;\n    _this2.y = starty;\n    _this2.colorLine = colorLine;\n    _this2.heightLine = heightLine;\n    _this2.type = _drawType.CIRCLE;\n    _this2.id = id || idGenerator();\n    _this2.draggable = draggable;\n    _this2.handleDragEnd = handleDragEnd;\n    return _this2;\n  }\n\n  _createClass(CircleDrawable, [{\n    key: \"render\",\n    value: function render() {\n      var dx = this.startx - this.x;\n      var dy = this.starty - this.y;\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      return /*#__PURE__*/React.createElement(Circle, {\n        key: this.id,\n        id: this.id,\n        radius: radius,\n        x: this.startx,\n        y: this.starty,\n        stroke: this.colorLine,\n        strokeWidth: this.heightLine // draggable={this.draggable}\n        // onDragEnd={this.handleDragEnd}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return CircleDrawable;\n}(ArrowDrawable);\nexport var FreePathDrawable = /*#__PURE__*/function (_Drawable2) {\n  _inherits(FreePathDrawable, _Drawable2);\n\n  var _super3 = _createSuper(FreePathDrawable);\n\n  function FreePathDrawable(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id) {\n    var _this3;\n\n    _classCallCheck(this, FreePathDrawable);\n\n    _this3 = _super3.call(this, startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id);\n    _this3.points = [startx, starty];\n    _this3.colorLine = colorLine;\n    _this3.heightLine = heightLine;\n    _this3.type = _drawType.FREEPATH;\n    _this3.id = id || idGenerator(); // this.draggable = draggable\n    // this.handleDragEnd = handleDragEnd\n\n    return _this3;\n  }\n\n  _createClass(FreePathDrawable, [{\n    key: \"registerMovement\",\n    value: function registerMovement(x, y) {\n      this.points = [].concat(_toConsumableArray(this.points), [x, y]);\n    }\n  }, {\n    key: \"renderPoints\",\n    value: function renderPoints(points) {\n      this.points = points;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(Line, {\n        key: this.id,\n        id: this.id,\n        points: this.points,\n        fill: this.colorLine,\n        stroke: this.colorLine,\n        strokeWidth: this.heightLine // draggable={this.draggable}\n        // onDragEnd={this.handleDragEnd}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return FreePathDrawable;\n}(Drawable);\nexport var RectDrawable = /*#__PURE__*/function (_Drawable3) {\n  _inherits(RectDrawable, _Drawable3);\n\n  var _super4 = _createSuper(RectDrawable);\n\n  function RectDrawable(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id) {\n    var _this4;\n\n    _classCallCheck(this, RectDrawable);\n\n    _this4 = _super4.call(this, startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id);\n    _this4.x = startx;\n    _this4.y = starty;\n    _this4.colorLine = colorLine;\n    _this4.heightLine = heightLine;\n    _this4.points = points;\n    _this4.type = _drawType.RECT;\n    _this4.id = id || idGenerator(); // this.draggable = draggable\n    // this.handleDragEnd = handleDragEnd\n\n    return _this4;\n  }\n\n  _createClass(RectDrawable, [{\n    key: \"registerMovement\",\n    value: function registerMovement(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var width = this.x - this.startx;\n      var height = this.y - this.starty;\n      return /*#__PURE__*/React.createElement(Rect, {\n        key: this.id,\n        id: this.id,\n        x: this.startx,\n        y: this.starty,\n        width: width,\n        height: height,\n        stroke: this.colorLine,\n        strokeWidth: this.heightLine // draggable={this.draggable}\n        // onDragEnd={this.handleDragEnd}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return RectDrawable;\n}(Drawable);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/components/ImageDraw.jsx"],"names":["React","Arrow","Circle","Line","Rect","_drawType","generateRandomNumber","randomNumber","Math","random","idGenerator","Drawable","startx","starty","heightLine","colorLine","points","draggable","handleDragEnd","id","ArrowDrawable","x","y","type","ARROW","CircleDrawable","CIRCLE","dx","dy","radius","sqrt","FreePathDrawable","FREEPATH","RectDrawable","RECT","width","height"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Arrow, Circle, Line, Rect } from 'react-konva'\nimport { _drawType } from '@constants'\n\nfunction generateRandomNumber() {\n  const randomNumber = ~~(Math.random() * (999 - 100) + 100)\n\n  return `${randomNumber < 10 ? '00' : randomNumber < 100 ? '0' : ''}${randomNumber}`\n}\n\nconst idGenerator = () => {\n  return `${generateRandomNumber()}-${generateRandomNumber()}-${generateRandomNumber()}`\n}\n\nclass Drawable {\n  constructor(startx, starty, heightLine,\n    colorLine, points, draggable, handleDragEnd, id) {\n    this.startx = startx;\n    this.starty = starty;\n    this.heightLine = heightLine;\n    this.colorLine = colorLine;\n    this.points = points\n    this.draggable = draggable\n    this.handleDragEnd = handleDragEnd\n    this.id = id\n  }\n}\n\nexport class ArrowDrawable extends Drawable {\n  constructor(startx, starty, heightLine,\n    colorLine, points, draggable, handleDragEnd, id) {\n    super(startx, starty, heightLine,\n      colorLine, points, draggable, handleDragEnd, id);\n    this.x = startx;\n    this.y = starty;\n    this.colorLine = colorLine\n    this.heightLine = heightLine\n    this.points = points\n    this.type = _drawType.ARROW\n    this.id = id || idGenerator()\n    this.draggable = draggable\n    this.handleDragEnd = handleDragEnd\n  }\n\n  registerMovement(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  renderPoints(points) {\n    this.points = points\n  }\n  render() {\n    const points = this.points || [this.startx, this.starty, this.x, this.y];\n    return <Arrow\n      key={this.id}\n      id={this.id}\n      points={points}\n      fill={this.colorLine}\n      stroke={this.colorLine}\n      strokeWidth={this.heightLine}\n    // draggable={this.draggable}\n    // onDragEnd={this.handleDragEnd}\n    />;\n  }\n}\n\nexport class CircleDrawable extends ArrowDrawable {\n  constructor(startx, starty, heightLine,\n    colorLine, points, draggable, handleDragEnd, id) {\n    super(startx, starty, heightLine,\n      colorLine, points, draggable, handleDragEnd, id);\n    this.x = startx;\n    this.y = starty;\n    this.colorLine = colorLine\n    this.heightLine = heightLine\n    this.type = _drawType.CIRCLE\n    this.id = id || idGenerator()\n    this.draggable = draggable\n    this.handleDragEnd = handleDragEnd\n  }\n  render() {\n    const dx = this.startx - this.x;\n    const dy = this.starty - this.y;\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    return (\n      <Circle\n        key={this.id}\n        id={this.id}\n        radius={radius}\n        x={this.startx}\n        y={this.starty}\n        stroke={this.colorLine}\n        strokeWidth={this.heightLine}\n      // draggable={this.draggable}\n      // onDragEnd={this.handleDragEnd}\n      />\n    );\n  }\n}\n\nexport class FreePathDrawable extends Drawable {\n  constructor(startx, starty, heightLine,\n    colorLine, points, draggable, handleDragEnd, id) {\n    super(startx, starty, heightLine, colorLine, points, draggable, handleDragEnd, id);\n    this.points = [startx, starty];\n    this.colorLine = colorLine\n    this.heightLine = heightLine\n    this.type = _drawType.FREEPATH\n    this.id = id || idGenerator()\n    // this.draggable = draggable\n    // this.handleDragEnd = handleDragEnd\n  }\n  registerMovement(x, y) {\n    this.points = [...this.points, x, y];\n  }\n\n  renderPoints(points) {\n    this.points = points\n  }\n\n  render() {\n    return <Line\n      key={this.id}\n      id={this.id}\n      points={this.points}\n      fill={this.colorLine}\n      stroke={this.colorLine}\n      strokeWidth={this.heightLine}\n    // draggable={this.draggable}\n    // onDragEnd={this.handleDragEnd}\n    />;\n  }\n}\n\nexport class RectDrawable extends Drawable {\n  constructor(startx, starty, heightLine,\n    colorLine, points, draggable, handleDragEnd, id) {\n    super(startx, starty, heightLine,\n      colorLine, points, draggable, handleDragEnd, id);\n    this.x = startx;\n    this.y = starty;\n    this.colorLine = colorLine\n    this.heightLine = heightLine\n    this.points = points\n    this.type = _drawType.RECT\n    this.id = id || idGenerator()\n    // this.draggable = draggable\n    // this.handleDragEnd = handleDragEnd\n  }\n\n  registerMovement(x, y) {\n    this.x = x\n    this.y = y\n  }\n\n  render() {\n    const width = this.x - this.startx\n    const height = this.y - this.starty\n    return (\n      <Rect\n        key={this.id}\n        id={this.id}\n        x={this.startx}\n        y={this.starty}\n        width={width}\n        height={height}\n        stroke={this.colorLine}\n        strokeWidth={this.heightLine}\n      // draggable={this.draggable}\n      // onDragEnd={this.handleDragEnd}\n      />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}