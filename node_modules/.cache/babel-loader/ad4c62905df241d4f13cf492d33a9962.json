{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/TimerView.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\n\nvar TimerView = /*#__PURE__*/function (_Component) {\n  _inherits(TimerView, _Component);\n\n  var _super = _createSuper(TimerView);\n\n  function TimerView() {\n    var _this;\n\n    _classCallCheck(this, TimerView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      timeRemain: _this.props.conferenceState.pollsInfo[0].createdAt + _this.props.conferenceState.pollsInfo[0].duration - moment.now()\n    };\n\n    _this.coundDown = function () {\n      if (_this.props.conferenceState.pollsInfo[0].createdAt + _this.props.conferenceState.pollsInfo[0].duration - moment.now() <= 0) {\n        _this.props.handleEndPoll();\n\n        _this.setState({\n          timeRemain: 0\n        });\n\n        return clearInterval(_this.timeRemain);\n      }\n\n      _this.setState({\n        timeRemain: _this.props.conferenceState.pollsInfo[0].createdAt + _this.props.conferenceState.pollsInfo[0].duration - moment.now()\n      });\n    };\n\n    _this.formatTimer = function (e) {\n      var sec = e / 1000;\n      var min = parseInt(sec / 60);\n      sec = sec % 60;\n\n      var formatNum = function formatNum(num) {\n        return num < 10 ? '0' + Math.floor(num).toString() : Math.floor(num).toString();\n      };\n\n      return formatNum(min) + ':' + formatNum(sec);\n    };\n\n    return _this;\n  }\n\n  _createClass(TimerView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.conferenceState.pollsInfo[0].duration) {\n        this.timeRemain = setInterval(this.coundDown, 1000);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timeRemain) {\n        clearInterval(this.timeRemain);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pollsInfo = this.props.conferenceState.pollsInfo;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"timerView\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, pollsInfo[0].duration && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"countDown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"timeLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, \"Th\\u1EDDi gian c\\xF2n l\\u1EA1i: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      }, this.state.timeRemain > 0 ? this.formatTimer(this.state.timeRemain) : 'Hết giờ')), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"duration\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }\n      }, \"Th\\u1EDDi gian gi\\u1EDBi h\\u1EA1n: \"), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }\n      }, this.formatTimer(this.props.conferenceState.pollsInfo[0].duration)))));\n    }\n  }]);\n\n  return TimerView;\n}(Component);\n\nexport { TimerView as default };","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/TimerView.jsx"],"names":["React","Component","moment","TimerView","state","timeRemain","props","conferenceState","pollsInfo","createdAt","duration","now","coundDown","handleEndPoll","setState","clearInterval","formatTimer","e","sec","min","parseInt","formatNum","num","Math","floor","toString","setInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport moment from 'moment'\n\nexport default class TimerView extends Component {\n  state = {\n    timeRemain:\n      this.props.conferenceState.pollsInfo[0].createdAt +\n      this.props.conferenceState.pollsInfo[0].duration -\n      moment.now()\n  }\n\n  componentDidMount() {\n    if (this.props.conferenceState.pollsInfo[0].duration) {\n      this.timeRemain = setInterval(this.coundDown, 1000)\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timeRemain) {\n      clearInterval(this.timeRemain)\n    }\n  }\n\n  coundDown = () => {\n    if (\n      this.props.conferenceState.pollsInfo[0].createdAt +\n        this.props.conferenceState.pollsInfo[0].duration -\n        moment.now() <=\n      0\n    ) {\n      this.props.handleEndPoll()\n      this.setState({ timeRemain: 0 })\n      return clearInterval(this.timeRemain)\n    }\n    this.setState({\n      timeRemain:\n        this.props.conferenceState.pollsInfo[0].createdAt +\n        this.props.conferenceState.pollsInfo[0].duration -\n        moment.now()\n    })\n  }\n\n  formatTimer = e => {\n    let sec = e / 1000\n    let min = parseInt(sec / 60)\n    sec = sec % 60\n\n    const formatNum = num => {\n      return num < 10 ? '0' + Math.floor(num).toString() : Math.floor(num).toString()\n    }\n\n    return formatNum(min) + ':' + formatNum(sec)\n  }\n\n  render() {\n    const {\n      props: {\n        conferenceState: { pollsInfo }\n      }\n    } = this\n    return (\n      <div className='timerView'>\n        {pollsInfo[0].duration && (\n          <div className='countDown'>\n            <div className='timeLeft'>\n              <span>Thời gian còn lại: </span>\n              <span>{this.state.timeRemain > 0 ? this.formatTimer(this.state.timeRemain) : 'Hết giờ'}</span>\n            </div>\n\n            <div className='duration'>\n              <span>Thời gian giới hạn: </span>\n              <span>{this.formatTimer(this.props.conferenceState.pollsInfo[0].duration)}</span>\n            </div>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}