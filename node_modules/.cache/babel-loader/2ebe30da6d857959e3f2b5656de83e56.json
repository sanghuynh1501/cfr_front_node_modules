{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($attendanceId: ID!) {\\n    onAttending(attendanceId: $attendanceId) {\\n      _id\\n      # conferenceId\\n      userAttendances {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n        isAttended\\n        isAttended\\n      }\\n      duration\\n      isActive\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n      }\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($conferenceId: ID!, $withUser: ID!) {\\n    onMessage(conferenceId: $conferenceId, withUser: $withUser) {\\n      messageId\\n      sender {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      receiver\\n      content\\n      sentAt\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($conferenceId: ID!) {\\n    onMessageList(conferenceId: $conferenceId) {\\n      sender\\n      content\\n      sentAt\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($pollIds: [ID]!) {\\n    onVoting(pollIds: $pollIds) {\\n      _id\\n      # conferenceId\\n      question\\n      duration\\n      answers {\\n        key\\n        value\\n      }\\n      userVotes {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          imageUrl\\n        }\\n        key\\n      }\\n      type\\n      isLocked\\n      isActive\\n      isPublic\\n      isPersonalPublic\\n      canBePersonalPublic\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      createdAt\\n      endAt\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($conferenceId: ID!) {\\n    onTimer(conferenceId: $conferenceId) {\\n      _id\\n      amountOfTime\\n      descriptions\\n      startAt\\n      type\\n      createdBy\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  subscription($conferenceId: ID!) {\\n    onConferenceNotification(conferenceId: $conferenceId) {\\n      code\\n      data\\n      pubsubCreatedBy\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '..';\nexport var S_ON_CONFERENCE_NOTIFICATIONS = gql(_templateObject());\nexport var S_ON_TIMER = gql(_templateObject2());\nexport var S_ON_VOTING = gql(_templateObject3());\nexport var S_ON_MESSAGE_LIST = gql(_templateObject4());\nexport var S_ON_MESSAGE = gql(_templateObject5());\nexport var S_ON_ATTENDING = gql(_templateObject6());","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/graphql/QMStrings/subscriptions.ts"],"names":["gql","S_ON_CONFERENCE_NOTIFICATIONS","S_ON_TIMER","S_ON_VOTING","S_ON_MESSAGE_LIST","S_ON_MESSAGE","S_ON_ATTENDING"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,IAApB;AAEA,OAAO,IAAMC,6BAA6B,GAAGD,GAAH,mBAAnC;AAUP,OAAO,IAAME,UAAU,GAAGF,GAAH,oBAAhB;AAaP,OAAO,IAAMG,WAAW,GAAGH,GAAH,oBAAjB;AAwCP,OAAO,IAAMI,iBAAiB,GAAGJ,GAAH,oBAAvB;AAUP,OAAO,IAAMK,YAAY,GAAGL,GAAH,oBAAlB;AAiBP,OAAO,IAAMM,cAAc,GAAGN,GAAH,oBAApB","sourcesContent":["import { gql } from '..'\n\nexport const S_ON_CONFERENCE_NOTIFICATIONS = gql`\n  subscription($conferenceId: ID!) {\n    onConferenceNotification(conferenceId: $conferenceId) {\n      code\n      data\n      pubsubCreatedBy\n    }\n  }\n`\n\nexport const S_ON_TIMER = gql`\n  subscription($conferenceId: ID!) {\n    onTimer(conferenceId: $conferenceId) {\n      _id\n      amountOfTime\n      descriptions\n      startAt\n      type\n      createdBy\n    }\n  }\n`\n\nexport const S_ON_VOTING = gql`\n  subscription($pollIds: [ID]!) {\n    onVoting(pollIds: $pollIds) {\n      _id\n      # conferenceId\n      question\n      duration\n      answers {\n        key\n        value\n      }\n      userVotes {\n        user {\n          _id\n          username\n          firstname\n          lastname\n          imageUrl\n        }\n        key\n      }\n      type\n      isLocked\n      isActive\n      isPublic\n      isPersonalPublic\n      canBePersonalPublic\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      createdAt\n      endAt\n    }\n  }\n`\n\nexport const S_ON_MESSAGE_LIST = gql`\n  subscription($conferenceId: ID!) {\n    onMessageList(conferenceId: $conferenceId) {\n      sender\n      content\n      sentAt\n    }\n  }\n`\n\nexport const S_ON_MESSAGE = gql`\n  subscription($conferenceId: ID!, $withUser: ID!) {\n    onMessage(conferenceId: $conferenceId, withUser: $withUser) {\n      messageId\n      sender {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      receiver\n      content\n      sentAt\n    }\n  }\n`\nexport const S_ON_ATTENDING = gql`\n  subscription($attendanceId: ID!) {\n    onAttending(attendanceId: $attendanceId) {\n      _id\n      # conferenceId\n      userAttendances {\n        user {\n          _id\n          username\n          firstname\n          lastname\n        }\n        isAttended\n        isAttended\n      }\n      duration\n      isActive\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n      }\n      createdAt\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}