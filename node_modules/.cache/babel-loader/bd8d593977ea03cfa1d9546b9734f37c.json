{"ast":null,"code":"import _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// var JitsiMeetJS;\nimport JitsiMeetJS from '@digihcs/lib-jitsi-meet-dist';\n/**\n * Loads a script from a specific URL. The script will be interpreted upon load.\n *\n * @param {string} url - The url to be loaded.\n * @returns {Promise} Resolved with no arguments when the script is loaded and\n * rejected with the error from JitsiMeetJS.ScriptUtil.loadScript method.\n */\n\nexport function loadScript(_x) {\n  return _loadScript.apply(this, arguments);\n}\n\nfunction _loadScript() {\n  _loadScript = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n              return JitsiMeetJS.util.ScriptUtil.loadScript(url,\n              /* async */\n              true,\n              /* prepend */\n              false,\n              /* relativeURL */\n              false,\n              /* loadCallback */\n              resolve,\n              /* errorCallback */\n              reject);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _loadScript.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/features/base/util/loadScript.web.js"],"names":["JitsiMeetJS","loadScript","url","Promise","resolve","reject","util","ScriptUtil"],"mappings":";;AAEA;AACA,OAAOA,WAAP,MAAwB,8BAAxB;AAEA;;;;;;;;AAOA,gBAAsBC,UAAtB;AAAA;AAAA;;;yEAAO,iBAA0BC,GAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,6CACE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV;AAAA,qBACjBL,WAAW,CAACM,IAAZ,CAAiBC,UAAjB,CAA4BN,UAA5B,CACEC,GADF;AAEE;AAAY,kBAFd;AAGE;AAAc,mBAHhB;AAIE;AAAkB,mBAJpB;AAKE;AAAmBE,cAAAA,OALrB;AAME;AAAoBC,cAAAA,MANtB,CADiB;AAAA,aAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["// @flow\n\n// var JitsiMeetJS;\nimport JitsiMeetJS from '@digihcs/lib-jitsi-meet-dist'\n\n/**\n * Loads a script from a specific URL. The script will be interpreted upon load.\n *\n * @param {string} url - The url to be loaded.\n * @returns {Promise} Resolved with no arguments when the script is loaded and\n * rejected with the error from JitsiMeetJS.ScriptUtil.loadScript method.\n */\nexport async function loadScript(url) {\n  return new Promise((resolve, reject) =>\n    JitsiMeetJS.util.ScriptUtil.loadScript(\n      url,\n      /* async */ true,\n      /* prepend */ false,\n      /* relativeURL */ false,\n      /* loadCallback */ resolve,\n      /* errorCallback */ reject\n    )\n  )\n}\n"]},"metadata":{},"sourceType":"module"}