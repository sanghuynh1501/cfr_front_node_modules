{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _defineProperty from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/conferenceDetail/StatisticComponents/PollsDetail.jsx\";\n\nimport React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { _pollType } from '@constants';\nimport { withTranslation } from 'react-i18next';\nvar PollsDetail = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(PollsDetail, _Component);\n\n  var _super = _createSuper(PollsDetail);\n\n  function PollsDetail() {\n    var _this;\n\n    _classCallCheck(this, PollsDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.dataToShow = function (items, key, type) {\n      var groupBy = function groupBy(items, key, type) {\n        // console.log('items', items)\n        if (type === _pollType.MULTIPLE) {\n          var multipleGroupedItems = [];\n          items.forEach(function (e) {\n            if (e.key === null) return;\n            e.key.forEach(function (i, index) {\n              multipleGroupedItems.push(_objectSpread({}, e, {\n                key: e.key[index]\n              }));\n            });\n          });\n          return multipleGroupedItems.reduce(function (result, item) {\n            return _objectSpread({}, result, _defineProperty({}, item[key], [].concat(_toConsumableArray(result[item[key]] || []), [item])));\n          }, {});\n        }\n\n        var groupedItems = items.reduce(function (result, item) {\n          return _objectSpread({}, result, _defineProperty({}, item[key], [].concat(_toConsumableArray(result[item[key]] || []), [item])));\n        }, {}); // console.log('groupedItems', groupedItems)\n\n        return groupedItems;\n      };\n\n      var obj = groupBy(items, key, type);\n      var res = []; // console.log('obj', obj)\n\n      for (var _key2 in obj) {\n        // console.log(key)\n        var a = {\n          key: _key2,\n          values: obj[_key2],\n          type: type\n        };\n        res.push(a);\n      }\n\n      return res;\n    };\n\n    return _this;\n  }\n\n  _createClass(PollsDetail, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          pollsToShow = _this$props.pollsToShow,\n          conferenceUsers = _this$props.conferenceUsers,\n          i18n = _this$props.i18n;\n      return pollsToShow.map(function (publicPoll, index) {\n        var userVotes = publicPoll.userVotes,\n            answers = publicPoll.answers,\n            type = publicPoll.type;\n        var mappedUserVotes = userVotes.filter(function (e) {\n          return e.key !== null;\n        }); //Mapped data from data to show\n\n        var mappedData = _this2.dataToShow(mappedUserVotes, 'key', type); //Final data for displaying\n\n\n        var finalData = answers.map(function (e) {\n          return _objectSpread({}, e, {\n            values: mappedData.filter(function (k) {\n              return k.key === e.key;\n            }).pop() ? mappedData.filter(function (k) {\n              return k.key === e.key;\n            }).pop().values : []\n          });\n        }); // NOTE: for Polls Tabel\n\n        var pollsColumns = [type !== _pollType.OPEN_ANSWER ? {\n          title: '',\n          dataIndex: 'key',\n          className: 'key',\n          key: 'key'\n        } : {}, {\n          title: i18n.t('statistic.answer'),\n          dataIndex: 'answer',\n          key: 'answer',\n          className: type === _pollType.OPEN_ANSWER ? 'answerOpen' : 'answer' // render: date => <span>{moment(date).format('DD[/]MM[/]YYYY, HH:mm')}</span>\n\n        }, {\n          title: i18n.t('statistic.result'),\n          dataIndex: 'result',\n          key: 'result',\n          className: 'result' // render: date => <span>{moment(date).format('DD[/]MM[/]YYYY, HH:mm')}</span>\n\n        }, {\n          title: '%',\n          dataIndex: 'percent',\n          key: 'percent',\n          className: 'percent',\n          render: function render(per) {\n            return /*#__PURE__*/React.createElement(\"span\", {\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 26\n              }\n            }, per ? per + '%' : '');\n          }\n        }];\n        var pollsDataSrcs = [].concat(_toConsumableArray(type === _pollType.OPEN_ANSWER ? userVotes.filter(function (e) {\n          return e.key;\n        }).map(function (e) {\n          return {\n            key: '',\n            answer: e.key\n          };\n        }) : finalData.sort(function (a, b) {\n          return a.key.charCodeAt() - b.key.charCodeAt();\n        }).map(function (e, i) {\n          return {\n            key: e.key,\n            answer: e.value,\n            result: \"\".concat(mappedUserVotes.filter(function (m) {\n              return m.key.includes(e.key);\n            }).length, \"/\").concat(conferenceUsers.length),\n            percent: Math.round(mappedUserVotes.filter(function (m) {\n              return m.key.includes(e.key);\n            }).length / conferenceUsers.length * 100)\n          };\n        })), [{\n          key: '',\n          answer: i18n.t('statistic.noAnswer'),\n          result: \"\".concat(type === _pollType.OPEN_ANSWER ? conferenceUsers.length - userVotes.filter(function (e) {\n            return e.key !== null && e.key[0].length !== 0;\n          }).length : conferenceUsers.length - mappedUserVotes.length, \"/\").concat(conferenceUsers.length),\n          percent: Math.round((type === _pollType.OPEN_ANSWER ? conferenceUsers.length - userVotes.filter(function (e) {\n            return e.key !== null && e.key[0].length !== 0;\n          }).length : conferenceUsers.length - mappedUserVotes.length) / conferenceUsers.length * 100)\n        }]); // NOTE: for Participants Tabel\n\n        var participantColumns = [{\n          title: 'Họ và Tên',\n          dataIndex: 'fullName',\n          key: 'fullName'\n        }, type === _pollType.OPEN_ANSWER ? {\n          title: 'Result',\n          dataIndex: 'key',\n          key: 'key',\n          className: 'resultKeyOpen'\n        } : answers.map(function (answer) {\n          return {\n            title: answer.key,\n            dataIndex: answer.key,\n            key: answer.key,\n            className: 'resultKey'\n          };\n        })].flat();\n        var participantDataSrcs = conferenceUsers.map(function (conferenceUser, index) {\n          var mappedUserVotes = userVotes.find(function (userVote) {\n            return userVote.user._id === conferenceUser.user._id;\n          });\n\n          var res = _objectSpread({\n            index: index,\n            fullName: \"\".concat(conferenceUser.user.firstname + ' ' + conferenceUser.user.lastname)\n          }, type === _pollType.OPEN_ANSWER ? {\n            key: mappedUserVotes ? mappedUserVotes.key : ''\n          } : {});\n\n          if (type !== _pollType.OPEN_ANSWER) {\n            answers.forEach(function (answer) {\n              res[answer.key] = type === _pollType.SINGLE ? /*#__PURE__*/React.createElement(_Radio, {\n                disabled: true,\n                defaultChecked: mappedUserVotes ? mappedUserVotes.key.includes(answer.key) ? true : false : false,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 17\n                }\n              }) : /*#__PURE__*/React.createElement(_Checkbox, {\n                disabled: true,\n                checked: mappedUserVotes ? mappedUserVotes.key.includes(answer.key) ? true : false : false,\n                __self: _this2,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 17\n                }\n              });\n            });\n          }\n\n          return res;\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pollsDetail\",\n          key: index,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pollsDetailTitle\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }\n        }, index + 1, \". \", publicPoll.question), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tableWrapper\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(_Table, {\n          size: 'small',\n          pagination: false,\n          columns: pollsColumns,\n          dataSource: pollsDataSrcs,\n          rowKey: \"key\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tableWrapper\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"pollsDetailParticipants\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }\n        }, \"Ng\\u01B0\\u1EDDi tham gia:\"), /*#__PURE__*/React.createElement(_Table, {\n          size: 'small',\n          pagination: false,\n          columns: participantColumns,\n          dataSource: participantDataSrcs,\n          rowKey: \"index\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }\n        })));\n      });\n    }\n  }]);\n\n  return PollsDetail;\n}(Component), _temp)) || _class) || _class);\nexport default withTranslation()(PollsDetail);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/conferenceDetail/StatisticComponents/PollsDetail.jsx"],"names":["React","Component","inject","observer","_pollType","withTranslation","PollsDetail","stores","dataToShow","items","key","type","groupBy","MULTIPLE","multipleGroupedItems","forEach","e","i","index","push","reduce","result","item","groupedItems","obj","res","a","values","props","pollsToShow","conferenceUsers","i18n","map","publicPoll","userVotes","answers","mappedUserVotes","filter","mappedData","finalData","k","pop","pollsColumns","OPEN_ANSWER","title","dataIndex","className","t","render","per","pollsDataSrcs","answer","sort","b","charCodeAt","value","m","includes","length","percent","Math","round","participantColumns","flat","participantDataSrcs","conferenceUser","find","userVote","user","_id","fullName","firstname","lastname","SINGLE","question"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { _pollType } from '@constants'\nimport { Table, Radio, Checkbox } from 'antd'\nimport { withTranslation } from 'react-i18next'\n\n@inject(({ stores }) => stores)\n@observer\nclass PollsDetail extends Component {\n  // format data\n  dataToShow = (items, key, type) => {\n    const groupBy = (items, key, type) => {\n      // console.log('items', items)\n      if (type === _pollType.MULTIPLE) {\n        let multipleGroupedItems = []\n\n        items.forEach(e => {\n          if (e.key === null) return\n          e.key.forEach((i, index) => {\n            multipleGroupedItems.push({ ...e, key: e.key[index] })\n          })\n        })\n        return multipleGroupedItems.reduce(\n          (result, item) => ({\n            ...result,\n            [item[key]]: [...(result[item[key]] || []), item]\n          }),\n          {}\n        )\n      }\n      const groupedItems = items.reduce(\n        (result, item) => ({\n          ...result,\n          [item[key]]: [...(result[item[key]] || []), item]\n        }),\n        {}\n      )\n\n      // console.log('groupedItems', groupedItems)\n      return groupedItems\n    }\n\n    let obj = groupBy(items, key, type)\n    let res = []\n    // console.log('obj', obj)\n    for (let key in obj) {\n      // console.log(key)\n      let a = {\n        key,\n        values: obj[key],\n        type\n      }\n      res.push(a)\n    }\n    return res\n  }\n\n  render() {\n    const { pollsToShow, conferenceUsers, i18n } = this.props\n\n    return pollsToShow.map((publicPoll, index) => {\n      const { userVotes, answers, type } = publicPoll\n\n      const mappedUserVotes = userVotes.filter(e => e.key !== null)\n\n      //Mapped data from data to show\n      const mappedData = this.dataToShow(mappedUserVotes, 'key', type)\n\n      //Final data for displaying\n      const finalData = answers.map(e => ({\n        ...e,\n        values: mappedData.filter(k => k.key === e.key).pop()\n          ? mappedData.filter(k => k.key === e.key).pop().values\n          : []\n      }))\n\n      // NOTE: for Polls Tabel\n      const pollsColumns = [\n        type !== _pollType.OPEN_ANSWER\n          ? {\n              title: '',\n              dataIndex: 'key',\n              className: 'key',\n              key: 'key'\n            }\n          : {},\n        {\n          title: i18n.t('statistic.answer'),\n          dataIndex: 'answer',\n          key: 'answer',\n          className: type === _pollType.OPEN_ANSWER ? 'answerOpen' : 'answer'\n          // render: date => <span>{moment(date).format('DD[/]MM[/]YYYY, HH:mm')}</span>\n        },\n        {\n          title: i18n.t('statistic.result'),\n          dataIndex: 'result',\n          key: 'result',\n          className: 'result'\n          // render: date => <span>{moment(date).format('DD[/]MM[/]YYYY, HH:mm')}</span>\n        },\n\n        {\n          title: '%',\n          dataIndex: 'percent',\n          key: 'percent',\n          className: 'percent',\n          render: per => <span>{per ? per + '%' : ''}</span>\n        }\n      ]\n\n      const pollsDataSrcs = [\n        ...(type === _pollType.OPEN_ANSWER\n          ? userVotes\n              .filter(e => e.key)\n              .map(e => ({\n                key: '',\n                answer: e.key\n              }))\n          : finalData\n              .sort((a, b) => a.key.charCodeAt() - b.key.charCodeAt())\n              .map((e, i) => ({\n                key: e.key,\n                answer: e.value,\n                result: `${mappedUserVotes.filter(m => m.key.includes(e.key)).length}/${conferenceUsers.length}`,\n                percent: Math.round(\n                  (mappedUserVotes.filter(m => m.key.includes(e.key)).length / conferenceUsers.length) * 100\n                )\n              }))),\n        {\n          key: '',\n          answer: i18n.t('statistic.noAnswer'),\n          result: `${\n            type === _pollType.OPEN_ANSWER\n              ? conferenceUsers.length - userVotes.filter(e => e.key !== null && e.key[0].length !== 0).length\n              : conferenceUsers.length - mappedUserVotes.length\n          }/${conferenceUsers.length}`,\n          percent: Math.round(\n            ((type === _pollType.OPEN_ANSWER\n              ? conferenceUsers.length - userVotes.filter(e => e.key !== null && e.key[0].length !== 0).length\n              : conferenceUsers.length - mappedUserVotes.length) /\n              conferenceUsers.length) *\n              100\n          )\n        }\n      ]\n\n      // NOTE: for Participants Tabel\n      const participantColumns = [\n        {\n          title: 'Họ và Tên',\n          dataIndex: 'fullName',\n          key: 'fullName'\n        },\n        type === _pollType.OPEN_ANSWER\n          ? {\n              title: 'Result',\n              dataIndex: 'key',\n              key: 'key',\n              className: 'resultKeyOpen'\n            }\n          : answers.map(answer => ({\n              title: answer.key,\n              dataIndex: answer.key,\n              key: answer.key,\n              className: 'resultKey'\n            }))\n      ].flat()\n\n      const participantDataSrcs = conferenceUsers.map((conferenceUser, index) => {\n        const mappedUserVotes = userVotes.find(userVote => userVote.user._id === conferenceUser.user._id)\n\n        let res = {\n          index,\n          fullName: `${conferenceUser.user.firstname + ' ' + conferenceUser.user.lastname}`,\n          ...(type === _pollType.OPEN_ANSWER ? { key: mappedUserVotes ? mappedUserVotes.key : '' } : {})\n        }\n\n        if (type !== _pollType.OPEN_ANSWER) {\n          answers.forEach(answer => {\n            res[answer.key] =\n              type === _pollType.SINGLE ? (\n                <Radio\n                  disabled\n                  defaultChecked={mappedUserVotes ? (mappedUserVotes.key.includes(answer.key) ? true : false) : false}\n                />\n              ) : (\n                <Checkbox\n                  disabled\n                  checked={mappedUserVotes ? (mappedUserVotes.key.includes(answer.key) ? true : false) : false}\n                />\n              )\n          })\n        }\n\n        return res\n      })\n\n      return (\n        <div className='pollsDetail' key={index}>\n          <div className='pollsDetailTitle'>\n            {index + 1}. {publicPoll.question}\n          </div>\n\n          <div className='tableWrapper'>\n            <Table size={'small'} pagination={false} columns={pollsColumns} dataSource={pollsDataSrcs} rowKey='key' />\n          </div>\n\n          <div className='tableWrapper'>\n            <div className='pollsDetailParticipants'>Người tham gia:</div>\n            <Table\n              size={'small'}\n              pagination={false}\n              columns={participantColumns}\n              dataSource={participantDataSrcs}\n              rowKey='index'\n            />\n          </div>\n        </div>\n      )\n    })\n  }\n}\nexport default withTranslation()(PollsDetail)\n"]},"metadata":{},"sourceType":"module"}