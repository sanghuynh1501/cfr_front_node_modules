{"ast":null,"code":"import _slicedToArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/RemoteTracks.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { AvatarComponent } from '@components';\nimport { appConstants, checkPermission } from '@constants';\nimport microOn from \"@misc/images/ngocly/micro.svg\";\nimport chat from \"@misc/images/ngocly/chat-black.svg\";\nimport pinUser from \"@misc/images/ngocly/pin-icon.svg\";\nimport pinnedIcon from \"@misc/images/toolbar/pinned.svg\";\nimport microOff from \"@misc/images/ngocly/micro-off-white.svg\";\nimport { MEDIA_TYPE } from './constants';\nimport { Video } from './media';\nimport IndicatorToolbar from './components/IndicatorToolbar';\nimport ParticipantConnectionStats from './components/ParticipantConnectionStats';\nvar ROLE = appConstants.ROLE;\nvar RemoteTracks = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(RemoteTracks, _React$Component);\n\n  var _super = _createSuper(RemoteTracks);\n\n  function RemoteTracks() {\n    var _this;\n\n    _classCallCheck(this, RemoteTracks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visibleOverlay: '',\n      offset: 0\n    };\n\n    _this.isConferenceOwner = function () {\n      return _this.props.conferenceState.myRole === ROLE.OWNER;\n    };\n\n    _this.isOwner = function (displayName) {\n      return displayName ? displayName.split('|')[2] === ROLE.OWNER : false;\n    };\n\n    _this.updateRemoteStats = function (id, stats) {\n      if (_this[\"setStats\".concat(id)]) {\n        _this[\"setStats\".concat(id)](stats);\n      }\n    };\n\n    _this.REMOTE_MIC_OFF = function (id, hasAudio) {\n      if (checkPermission(_this.props.conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio) {\n        _this.props.jitsiStore.conference.sendCommandOnce('REMOTE_MIC_OFF', {\n          value: \"\".concat(id)\n        });\n      }\n    };\n\n    _this.sideScroll = function (element, direction, speed, distance, step) {\n      var scrollAmount = 0;\n      var slideTimer = setInterval(function () {\n        if (direction === 'left') {\n          element.scrollLeft -= step;\n        } else {\n          element.scrollLeft += step;\n        }\n\n        scrollAmount += step;\n\n        if (scrollAmount >= distance) {\n          window.clearInterval(slideTimer);\n        }\n      }, speed);\n    };\n\n    _this.handleScroll = function (e) {\n      var _this$props = _this.props,\n          jitsiStore = _this$props.jitsiStore,\n          conferenceState = _this$props.conferenceState;\n      var length = jitsiStore.participants.length - conferenceState.offsetRemoteTracks;\n\n      switch (e) {\n        case 'right':\n          {\n            if (length > 4) {\n              conferenceState.setState({\n                offsetRemoteTracks: conferenceState.offsetRemoteTracks + 4\n              });\n              break;\n            }\n\n            break;\n          }\n\n        case 'left':\n          {\n            if (conferenceState.offsetRemoteTracks >= 4) {\n              conferenceState.setState({\n                offsetRemoteTracks: conferenceState.offsetRemoteTracks - 4\n              });\n              break;\n            }\n\n            if (length < 4 && length >= 0) {\n              conferenceState.setState({\n                offsetRemoteTracks: 0\n              });\n              break;\n            }\n\n            break;\n          }\n\n        default:\n          break;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(RemoteTracks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.updateRemoteStats(this.updateRemoteStats);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          conferenceState = _this$props2.conferenceState,\n          jitsiStore = _this$props2.jitsiStore;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote-tracks-container-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, jitsiStore.participants.length > 4 ? /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.handleScroll('left');\n        },\n        className: \"btnScrollLeft\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"remote-tracks-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, jitsiStore.participants.map(function (_ref2, idx) {\n        var id = _ref2.id,\n            user = _ref2.user,\n            displayName = _ref2.displayName;\n\n        var tracks = _this2.props.tracksOfThisParticipant(id);\n\n        var hasAudio = _this2.props.doesParticipantHasAudio(id);\n\n        var hasVideo = _this2.props.doesParticipantHasVideo(id);\n\n        var userProfile = {};\n\n        if (user && user._displayName) {\n          var _user$_displayName$sp = user._displayName.split('|'),\n              _user$_displayName$sp2 = _slicedToArray(_user$_displayName$sp, 1),\n              userId = _user$_displayName$sp2[0];\n\n          var _conferenceState$conf = conferenceState.conferenceUsers.filter(function (_ref3) {\n            var cUser = _ref3.user;\n            return cUser && cUser._id === userId;\n          }),\n              _conferenceState$conf2 = _slicedToArray(_conferenceState$conf, 1),\n              profileFound = _conferenceState$conf2[0];\n\n          if (profileFound) userProfile = profileFound;\n        }\n\n        return idx >= conferenceState.offsetRemoteTracks && idx < conferenceState.offsetRemoteTracks + 4 ? /*#__PURE__*/React.createElement(\"div\", {\n          key: id,\n          className: conferenceState.conference.pinnedUser === id && hasVideo ? 'remote-track remote-pinned' : 'remote-track',\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ParticipantConnectionStats, {\n          setConnectionStats: function setConnectionStats(callback) {\n            return _this2[\"setStats\".concat(id)] = callback;\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"track-box\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }\n        }, hasVideo ? /*#__PURE__*/React.createElement(React.Fragment, null, tracks.map(function (_ref4, i) {\n          var track = _ref4.track;\n\n          if (track.getType() === MEDIA_TYPE.VIDEO) {\n            return /*#__PURE__*/React.createElement(Video, {\n              key: i,\n              id: track.getId(),\n              videoTrack: track,\n              width: \"100%\",\n              __self: _this2,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 34\n              }\n            });\n          }\n\n          return /*#__PURE__*/React.createElement(React.Fragment, {\n            key: i,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 32\n            }\n          });\n        })) : /*#__PURE__*/React.createElement(AvatarComponent, Object.assign({}, userProfile.user, {\n          size: 64,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 23\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"track-box-opacity\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }\n        }, checkPermission(conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio ? /*#__PURE__*/React.createElement(\"button\", {\n          style: {\n            background: hasAudio ? '#fff' : '#f5483f'\n          },\n          disabled: _this2.isOwner(displayName),\n          onClick: function onClick() {\n            _this2.REMOTE_MIC_OFF(id, hasAudio);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: hasAudio ? microOn : microOff,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }\n        }), checkPermission(conferenceState.myPermissions, 'CHAT') ? /*#__PURE__*/React.createElement(\"button\", {\n          onClick: function onClick() {\n            if (user._displayName) {\n              var _conferenceState$conf3 = conferenceState.conferenceUsers.filter(function (_ref5) {\n                var _id = _ref5.user._id;\n                return _id === user._displayName.split('|')[0];\n              }),\n                  _conferenceState$conf4 = _slicedToArray(_conferenceState$conf3, 1),\n                  _profileFound = _conferenceState$conf4[0];\n\n              conferenceState.setState({\n                idChatUser: user._displayName.split('|')[0],\n                isShowBoxChat: true,\n                infoChatUser: {\n                  _id: user._displayName.split('|')[0],\n                  name: user._displayName.split('|')[1],\n                  imageUrl: _profileFound ? _profileFound.user.imageUrl : null\n                }\n              });\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: chat,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }\n        }), checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo ? /*#__PURE__*/React.createElement(\"button\", {\n          className: conferenceState.conference.pinnedUser === id ? 'btn-pin pin-active' : 'btn-pin',\n          onClick: function onClick() {\n            if (checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER')) {\n              _this2.props.mutateSetPinnedUser(conferenceState.conference.pinnedUser === id ? '' : id);\n            }\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: conferenceState.conference.pinnedUser === id ? pinnedIcon : pinUser,\n          alt: \"icon\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }\n        }))), /*#__PURE__*/React.createElement(IndicatorToolbar, {\n          displayName: user._displayName && user._displayName.split('|')[1] || 'Loading...',\n          hasAudio: hasAudio,\n          hasVideo: hasVideo,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }\n        })) : /*#__PURE__*/React.createElement(React.Fragment, {\n          key: id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 17\n          }\n        });\n      })), jitsiStore.participants.length > 4 ? /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.handleScroll('right');\n        },\n        className: \"btnScrollRight\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }\n      })) : /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return RemoteTracks;\n}(React.Component), _temp)) || _class) || _class);\nexport default RemoteTracks;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/jitsi/RemoteTracks.jsx"],"names":["React","inject","observer","AvatarComponent","appConstants","checkPermission","MEDIA_TYPE","Video","IndicatorToolbar","ParticipantConnectionStats","ROLE","RemoteTracks","stores","state","visibleOverlay","offset","isConferenceOwner","props","conferenceState","myRole","OWNER","isOwner","displayName","split","updateRemoteStats","id","stats","REMOTE_MIC_OFF","hasAudio","myPermissions","jitsiStore","conference","sendCommandOnce","value","sideScroll","element","direction","speed","distance","step","scrollAmount","slideTimer","setInterval","scrollLeft","window","clearInterval","handleScroll","e","length","participants","offsetRemoteTracks","setState","map","idx","user","tracks","tracksOfThisParticipant","doesParticipantHasAudio","hasVideo","doesParticipantHasVideo","userProfile","_displayName","userId","conferenceUsers","filter","cUser","_id","profileFound","pinnedUser","callback","i","track","getType","VIDEO","getId","background","microOn","microOff","idChatUser","isShowBoxChat","infoChatUser","name","imageUrl","chat","mutateSetPinnedUser","pinnedIcon","pinUser","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { AvatarComponent } from '@components'\nimport { appConstants, checkPermission } from '@constants'\n\nimport microOn from '@misc/images/ngocly/micro.svg'\nimport chat from '@misc/images/ngocly/chat-black.svg'\nimport pinUser from '@misc/images/ngocly/pin-icon.svg'\nimport pinnedIcon from '@misc/images/toolbar/pinned.svg'\nimport microOff from '@misc/images/ngocly/micro-off-white.svg'\nimport { Icon } from 'antd'\n\nimport { MEDIA_TYPE } from './constants'\n\nimport { Video } from './media'\n\nimport IndicatorToolbar from './components/IndicatorToolbar'\nimport ParticipantConnectionStats from './components/ParticipantConnectionStats'\n\nconst { ROLE } = appConstants\n\n@inject(({ stores }) => stores)\n@observer\nclass RemoteTracks extends React.Component {\n  state = { visibleOverlay: '', offset: 0 }\n\n  isConferenceOwner = () => this.props.conferenceState.myRole === ROLE.OWNER\n\n  isOwner = displayName => (displayName ? displayName.split('|')[2] === ROLE.OWNER : false)\n\n  componentDidMount() {\n    this.props.updateRemoteStats(this.updateRemoteStats)\n  }\n\n  updateRemoteStats = (id, stats) => {\n    if (this[`setStats${id}`]) {\n      this[`setStats${id}`](stats)\n    }\n  }\n\n  REMOTE_MIC_OFF = (id, hasAudio) => {\n    if (checkPermission(this.props.conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio) {\n      this.props.jitsiStore.conference.sendCommandOnce('REMOTE_MIC_OFF', { value: `${id}` })\n    }\n  }\n\n  sideScroll = (element, direction, speed, distance, step) => {\n    let scrollAmount = 0\n    let slideTimer = setInterval(function () {\n      if (direction === 'left') {\n        element.scrollLeft -= step\n      } else {\n        element.scrollLeft += step\n      }\n      scrollAmount += step\n      if (scrollAmount >= distance) {\n        window.clearInterval(slideTimer)\n      }\n    }, speed)\n  }\n\n  handleScroll = e => {\n    const { jitsiStore, conferenceState } = this.props\n    const length = jitsiStore.participants.length - conferenceState.offsetRemoteTracks\n    switch (e) {\n      case 'right': {\n        if (length > 4) {\n          conferenceState.setState({ offsetRemoteTracks: conferenceState.offsetRemoteTracks + 4 })\n          break\n        }\n        break\n      }\n\n      case 'left': {\n        if (conferenceState.offsetRemoteTracks >= 4) {\n          conferenceState.setState({ offsetRemoteTracks: conferenceState.offsetRemoteTracks - 4 })\n          break\n        }\n        if (length < 4 && length >= 0) {\n          conferenceState.setState({ offsetRemoteTracks: 0 })\n          break\n        }\n        break\n      }\n      default:\n        break\n    }\n  }\n\n  render() {\n    const { conferenceState, jitsiStore } = this.props\n\n    return (\n      <div className='remote-tracks-container-wrapper'>\n        {jitsiStore.participants.length > 4 ? (\n          <div onClick={() => this.handleScroll('left')} className='btnScrollLeft'>\n            <Icon type='left' />\n          </div>\n        ) : (\n            <React.Fragment />\n          )}\n\n        <div className='remote-tracks-container'>\n          {jitsiStore.participants.map(({ id, user, displayName }, idx) => {\n            const tracks = this.props.tracksOfThisParticipant(id)\n            const hasAudio = this.props.doesParticipantHasAudio(id)\n            const hasVideo = this.props.doesParticipantHasVideo(id)\n\n            let userProfile = {}\n\n            if (user && user._displayName) {\n              const [userId] = user._displayName.split('|')\n              const [profileFound] = conferenceState.conferenceUsers.filter(\n                ({ user: cUser }) => cUser && cUser._id === userId\n              )\n\n              if (profileFound) userProfile = profileFound\n            }\n\n            return idx >= conferenceState.offsetRemoteTracks && idx < conferenceState.offsetRemoteTracks + 4 ? (\n              <div\n                key={id}\n                className={\n                  conferenceState.conference.pinnedUser === id && hasVideo\n                    ? 'remote-track remote-pinned'\n                    : 'remote-track'\n                }\n              >\n                <ParticipantConnectionStats setConnectionStats={callback => (this[`setStats${id}`] = callback)} />\n                <div className='track-box'>\n                  {hasVideo ? (\n                    <>\n                      {tracks.map(({ track }, i) => {\n                        if (track.getType() === MEDIA_TYPE.VIDEO) {\n                          return <Video key={i} id={track.getId()} videoTrack={track} width='100%' />\n                        }\n                        return <React.Fragment key={i} />\n                      })}\n                    </>\n                  ) : (\n                      <AvatarComponent {...userProfile.user} size={64} />\n                    )}\n                </div>\n\n                <div className='track-box-opacity'>\n                  <div>\n                    {checkPermission(conferenceState.myPermissions, 'STOP_USER_AUDIO_SHARING') && hasAudio ? (\n                      <button\n                        style={{ background: hasAudio ? '#fff' : '#f5483f' }}\n                        disabled={this.isOwner(displayName)}\n                        onClick={() => {\n                          this.REMOTE_MIC_OFF(id, hasAudio)\n                        }}\n                      >\n                        <img src={hasAudio ? microOn : microOff} alt='icon' />\n                      </button>\n                    ) : (\n                        <React.Fragment />\n                      )}\n\n                    {checkPermission(conferenceState.myPermissions, 'CHAT') ? (\n                      <button\n                        onClick={() => {\n                          if (user._displayName) {\n                            const [profileFound] = conferenceState.conferenceUsers.filter(\n                              ({ user: { _id } }) => _id === user._displayName.split('|')[0]\n                            )\n\n                            conferenceState.setState({\n                              idChatUser: user._displayName.split('|')[0],\n                              isShowBoxChat: true,\n                              infoChatUser: {\n                                _id: user._displayName.split('|')[0],\n                                name: user._displayName.split('|')[1],\n                                imageUrl: profileFound ? profileFound.user.imageUrl : null\n                              }\n                            })\n                          }\n                        }}\n                      >\n                        <img src={chat} alt='icon' />\n                      </button>\n                    ) : (\n                        <React.Fragment />\n                      )}\n\n                    {checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER') && hasVideo ? (\n                      <button\n                        className={conferenceState.conference.pinnedUser === id ? 'btn-pin pin-active' : 'btn-pin'}\n                        onClick={() => {\n                          if (checkPermission(conferenceState.myPermissions, 'PIN_MAIN_SPEAKER')) {\n                            this.props.mutateSetPinnedUser(conferenceState.conference.pinnedUser === id ? '' : id)\n                          }\n                        }}\n                      >\n                        <img src={conferenceState.conference.pinnedUser === id ? pinnedIcon : pinUser} alt='icon' />\n                      </button>\n                    ) : (\n                        <React.Fragment />\n                      )}\n                  </div>\n                </div>\n\n                <IndicatorToolbar\n                  displayName={(user._displayName && user._displayName.split('|')[1]) || 'Loading...'}\n                  hasAudio={hasAudio}\n                  hasVideo={hasVideo}\n                />\n              </div>\n            ) : (\n                <React.Fragment key={id} />\n              )\n          })}\n        </div>\n\n        {jitsiStore.participants.length > 4 ? (\n          <div onClick={() => this.handleScroll('right')} className='btnScrollRight'>\n            <Icon type='right' />\n          </div>\n        ) : (\n            <React.Fragment />\n          )}\n      </div>\n    )\n  }\n}\n\nexport default RemoteTracks\n"]},"metadata":{},"sourceType":"module"}