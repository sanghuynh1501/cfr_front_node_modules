{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _this = this,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalShareScreen.jsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport { inject } from 'mobx-react';\nimport './ModalShareScreen.less';\nimport { obtainDesktopSources } from '../jitsi/desktopicker';\nimport share from \"@misc/images/action/share.svg\";\nimport noShare from \"@misc/images/action/no-share.svg\";\nvar TabPane = _Tabs.TabPane;\n\nvar ModalShareScreen = function ModalShareScreen(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState({\n    screen: [],\n    window: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      sources = _useState4[0],\n      setSources = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sourceSelected = _useState6[0],\n      setSourceSelected = _useState6[1];\n\n  var isShareScreen = props.isShareScreen,\n      onShareScreen = props.onShareScreen,\n      offShareScreen = props.offShareScreen;\n\n  var showModal = function showModal() {\n    setVisible(true);\n  };\n\n  var handleCancel = function handleCancel(e) {\n    setVisible(false);\n  };\n\n  var handleOk = function handleOk(e) {\n    props.stores.conferenceState.setState({\n      sourceDesktopElectron: sourceSelected\n    });\n    onShareScreen();\n    handleCancel();\n  };\n\n  useEffect(function () {\n    if (visible) {\n      obtainDesktopSources(['screen', 'window'], {\n        thumbnailSize: {\n          height: 150,\n          width: 200\n        }\n      }).then( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(sources) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  setSources(sources);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, [visible]);\n  var style = {\n    animation: 'animate 2s linear infinite'\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"action-item action-item-micro\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bg-micro\",\n    style: isShareScreen ? null : style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: !isShareScreen ? showModal : offShareScreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: isShareScreen ? share : noShare,\n    alt: \"icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(_Modal, {\n    title: \"Basic Modal\",\n    className: \"modal-share-screen\",\n    visible: visible,\n    onOk: handleOk,\n    onCancel: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Chia s\\u1EBB m\\xE0n h\\xECnh c\\u1EE7a b\\u1EA1n\"), /*#__PURE__*/React.createElement(_Tabs, {\n    defaultActiveKey: \"1\",\n    className: \"tabs-screen\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, sources && sources.screen && /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"To\\xE0n b\\u1ED9 m\\xE0n h\\xECnh c\\u1EE7a b\\u1EA1n\",\n    key: \"1\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-window\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, sources.screen.map(function (obj) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return setSourceSelected({\n          source: obj,\n          type: 'screen'\n        });\n      },\n      className: \"window-item\".concat(sourceSelected && obj.id === sourceSelected.source.id ? ' window-item-focus' : ''),\n      key: obj.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper-video\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: obj.name,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      src: obj.thumbnail.toDataURL(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-window\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }\n    }, obj.name)));\n  }))), sources && sources.window && /*#__PURE__*/React.createElement(TabPane, {\n    tab: \"C\\u1EEDa s\\u1ED5 \\u1EE9ng d\\u1EE5ng\",\n    key: \"2\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-window\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, sources.window.map(function (obj) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      onClick: function onClick() {\n        return setSourceSelected({\n          source: obj,\n          type: 'window'\n        });\n      },\n      className: \"window-item\".concat(sourceSelected && obj.id === sourceSelected.source.id ? ' window-item-focus' : ''),\n      key: obj.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper-video\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: obj.name,\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      src: obj.thumbnail.toDataURL(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"info-window\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }\n    }, obj.name)));\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-button\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(_Button, {\n    type: \"primary\",\n    disabled: !sourceSelected,\n    onClick: handleOk,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, \"Chia s\\u1EBB\"), /*#__PURE__*/React.createElement(_Button, {\n    type: \"default\",\n    onClick: handleCancel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"H\\u1EE7y\"))));\n};\n\nexport default inject('stores')(ModalShareScreen);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalShareScreen.jsx"],"names":["React","useEffect","useState","inject","obtainDesktopSources","TabPane","ModalShareScreen","props","visible","setVisible","screen","window","sources","setSources","sourceSelected","setSourceSelected","isShareScreen","onShareScreen","offShareScreen","showModal","handleCancel","e","handleOk","stores","conferenceState","setState","sourceDesktopElectron","thumbnailSize","height","width","then","style","animation","share","noShare","map","obj","source","type","id","name","thumbnail","toDataURL"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Modal, Tabs, Button } from 'antd'\nimport { inject } from 'mobx-react'\nimport './ModalShareScreen.less'\n\nimport { obtainDesktopSources } from '../jitsi/desktopicker'\n\nimport share from '@misc/images/action/share.svg'\nimport noShare from '@misc/images/action/no-share.svg'\n\nconst { TabPane } = Tabs\n\nconst ModalShareScreen = props => {\n  const [visible, setVisible] = useState(false)\n  const [sources, setSources] = useState({\n    screen: [],\n    window: []\n  })\n  const [sourceSelected, setSourceSelected] = useState(null)\n  const { isShareScreen, onShareScreen, offShareScreen } = props\n\n  const showModal = () => {\n    setVisible(true)\n  }\n\n  const handleCancel = e => {\n    setVisible(false)\n  }\n\n  const handleOk = e => {\n    props.stores.conferenceState.setState({ sourceDesktopElectron: sourceSelected })\n    onShareScreen()\n    handleCancel()\n  }\n\n  useEffect(() => {\n    if (visible) {\n      obtainDesktopSources(['screen', 'window'], {\n        thumbnailSize: {\n          height: 150,\n          width: 200\n        }\n      }).then(async sources => {\n        setSources(sources)\n      })\n    }\n  }, [visible])\n\n  const style = { animation: 'animate 2s linear infinite' }\n  return (\n    <>\n      <div className='action-item action-item-micro'>\n        <div className='bg-micro' style={isShareScreen ? null : style} />\n        <button type='button' onClick={!isShareScreen ? showModal : offShareScreen}>\n          <img src={isShareScreen ? share : noShare} alt='icon' />\n        </button>\n      </div>\n      <Modal\n        title='Basic Modal'\n        className='modal-share-screen'\n        visible={visible}\n        onOk={handleOk}\n        onCancel={handleCancel}\n      >\n        <p className='title'>Chia sẻ màn hình của bạn</p>\n        {/* <p className='sub-title'>Chọn nội dung bạn muốn Chia sẻ</p> */}\n        <Tabs defaultActiveKey='1' className='tabs-screen'>\n          {sources && sources.screen && (\n            <TabPane tab='Toàn bộ màn hình của bạn' key='1'>\n              <div className='wrapper-window'>\n                {sources.screen.map(obj => (\n                  <div\n                    onClick={() =>\n                      setSourceSelected({\n                        source: obj,\n                        type: 'screen'\n                      })\n                    }\n                    className={`window-item${\n                      sourceSelected && obj.id === sourceSelected.source.id ? ' window-item-focus' : ''\n                      }`}\n                    key={obj.id}\n                  >\n                    <div className='wrapper-video'>\n                      <img alt={obj.name} style={{ width: '100%', height: '100%' }} src={obj.thumbnail.toDataURL()} />\n                    </div>\n                    <div className='info-window'>\n                      <span>{obj.name}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabPane>\n          )}\n          {sources && sources.window && (\n            <TabPane tab='Cửa sổ ứng dụng' key='2'>\n              <div className='wrapper-window'>\n                {sources.window.map(obj => (\n                  <div\n                    onClick={() =>\n                      setSourceSelected({\n                        source: obj,\n                        type: 'window'\n                      })\n                    }\n                    className={`window-item${\n                      sourceSelected && obj.id === sourceSelected.source.id ? ' window-item-focus' : ''\n                      }`}\n                    key={obj.id}\n                  >\n                    <div className='wrapper-video'>\n                      <img alt={obj.name} style={{ width: '100%', height: '100%' }} src={obj.thumbnail.toDataURL()} />\n                    </div>\n                    <div className='info-window'>\n                      <span>{obj.name}</span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabPane>\n          )}\n        </Tabs>\n        <div className='wrapper-button'>\n          <Button type='primary' disabled={!sourceSelected} onClick={handleOk}>\n            Chia sẻ\n          </Button>\n          <Button type='default' onClick={handleCancel}>\n            Hủy\n          </Button>\n        </div>\n      </Modal>\n    </>\n  )\n}\n\nexport default inject('stores')(ModalShareScreen)\n"]},"metadata":{},"sourceType":"module"}