{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/ModalCreateNode.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './ModalCreateNode.less';\nimport { client, M_CREATE_NODE } from '@graphql';\nimport { returnError, newNotification, parseError } from '@utils';\nimport NodeForm from './NodeForm';\nimport { inject, observer } from 'mobx-react';\nvar ModalCreateNode = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalCreateNode, _React$PureComponent);\n\n  var _super = _createSuper(ModalCreateNode);\n\n  function ModalCreateNode() {\n    var _this;\n\n    _classCallCheck(this, ModalCreateNode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visible: false\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      _this.refs['create-form'].validateFields(function (err, values) {\n        if (!err) {\n          _this.handleAddGroup(values);\n        }\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      _this.refs['create-form'].resetFields();\n    };\n\n    _this.handleAddGroup = function (data) {\n      var _this$props = _this.props,\n          globalState = _this$props.globalState,\n          i18n = _this$props.i18n;\n      var name = data.name,\n          descriptions = data.descriptions;\n      client.mutate({\n        mutation: M_CREATE_NODE,\n        variables: {\n          input: {\n            name: name,\n            descriptions: descriptions\n          }\n        }\n      }).then(function (_ref2) {\n        var createNode = _ref2.data.createNode;\n\n        if (!createNode) {\n          throw new Error('notification.createGroupFailed');\n        }\n\n        _this.refs['create-form'].resetFields();\n\n        _this.handleCancel();\n\n        newNotification(i18n.t('notification.createGroupSuccess'), 'success', {\n          container: 'top-right'\n        });\n\n        _this.props.queryNodes();\n\n        globalState.queryMyInfo && globalState.queryMyInfo();\n      }).catch(function (err) {\n        returnError('Error', {\n          errorMessage: i18n.t(parseError(err))\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalCreateNode, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          itemToEdit = _this$props2.itemToEdit,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        className: \"btn-create\",\n        icon: \"plus\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }\n      }, i18n.t('group.addGroup')), /*#__PURE__*/React.createElement(_Modal, {\n        title: i18n.t('group.addGroup'),\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        className: \"common-modal modal-template\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(NodeForm, {\n        itemToEdit: itemToEdit,\n        ref: \"create-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.handleOk,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, i18n.t('common.add')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        ghost: true,\n        onClick: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, i18n.t('common.cancel')))));\n    }\n  }]);\n\n  return ModalCreateNode;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default withTranslation()(ModalCreateNode);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/groups2/components/ModalCreateNode.jsx"],"names":["React","withTranslation","client","M_CREATE_NODE","returnError","newNotification","parseError","NodeForm","inject","observer","ModalCreateNode","stores","state","visible","showModal","setState","handleOk","e","refs","validateFields","err","values","handleAddGroup","handleCancel","resetFields","data","props","globalState","i18n","name","descriptions","mutate","mutation","variables","input","then","createNode","Error","t","container","queryNodes","queryMyInfo","catch","errorMessage","itemToEdit","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Modal, Button } from 'antd'\nimport './ModalCreateNode.less'\n\nimport { client, M_CREATE_NODE } from '@graphql'\nimport { returnError, newNotification, parseError } from '@utils'\n\nimport NodeForm from './NodeForm'\nimport { inject, observer } from 'mobx-react'\n\n@inject(({ stores }) => stores)\n@observer\nclass ModalCreateNode extends React.PureComponent {\n  state = {\n    visible: false\n  }\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    })\n  }\n\n  handleOk = e => {\n    this.refs['create-form'].validateFields((err, values) => {\n      if (!err) {\n        this.handleAddGroup(values)\n      }\n    })\n  }\n\n  handleCancel = e => {\n    this.setState({\n      visible: false\n    })\n    this.refs['create-form'].resetFields()\n  }\n\n  handleAddGroup = data => {\n    const { globalState, i18n } = this.props\n    const { name, descriptions } = data\n    client\n      .mutate({\n        mutation: M_CREATE_NODE,\n        variables: {\n          input: {\n            name,\n            descriptions\n          }\n        }\n      })\n      .then(({ data: { createNode } }) => {\n        if (!createNode) {\n          throw new Error('notification.createGroupFailed')\n        }\n\n        this.refs['create-form'].resetFields()\n        this.handleCancel()\n        newNotification(i18n.t('notification.createGroupSuccess'), 'success', {\n          container: 'top-right'\n        })\n\n        this.props.queryNodes()\n        globalState.queryMyInfo && globalState.queryMyInfo()\n      })\n      .catch(err => {\n        returnError(\n          'Error',\n          { errorMessage: i18n.t(parseError(err)) },\n          { container: 'top-right' }\n        )\n      })\n  }\n\n\n  render() {\n    const {\n      props: { itemToEdit, i18n }\n    } = this\n\n    return (\n      <>\n        <Button\n          type='primary'\n          className='btn-create'\n          icon='plus'\n          onClick={this.showModal}\n        >\n          {i18n.t('group.addGroup')}\n        </Button>\n\n        <Modal\n          title={i18n.t('group.addGroup')}\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          className='common-modal modal-template'\n        >\n          <NodeForm itemToEdit={itemToEdit} ref='create-form' />\n          <div className='wrapper-button'>\n            <Button\n              type='primary'\n              onClick={this.handleOk}\n            >\n              {i18n.t('common.add')}\n            </Button>\n            <Button\n              type='primary'\n              ghost\n              onClick={this.handleCancel}\n            >\n              {i18n.t('common.cancel')}\n            </Button>\n          </div>\n        </Modal>\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(ModalCreateNode)"]},"metadata":{},"sourceType":"module"}