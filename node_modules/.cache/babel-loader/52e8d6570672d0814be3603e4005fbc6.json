{"ast":null,"code":"import \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/NewQuestion.jsx\";\nimport React, { Component } from 'react';\nimport { _pollType } from '@constants';\nvar focusingStyle = {\n  borderRadius: '5px',\n  boxShadow: ' -3px 2px 8px 0px rgba(212,212,212,0.7)'\n};\n\nvar NewQuestion = /*#__PURE__*/function (_Component) {\n  _inherits(NewQuestion, _Component);\n\n  var _super = _createSuper(NewQuestion);\n\n  function NewQuestion() {\n    var _this;\n\n    _classCallCheck(this, NewQuestion);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleFocus = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.inputHolderRef.current.click();\n\n              case 2:\n                if (!_this.inputRef.current) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return _this.inputRef.current.focus();\n\n              case 5:\n                _this.inputRef.current.select();\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleFocus2 = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!_this.inputRef.current) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 3;\n              return _this.inputRef.current.focus();\n\n            case 3:\n              _this.inputRef.current.select();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    _this.handleClickAddAnswer = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(pollIndex, numberOfAnswers) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return _this.props.handleAddAnswer(pollIndex);\n\n              case 2:\n                document.getElementById(\"answer-\".concat(pollIndex, \"-\").concat(numberOfAnswers)).focus();\n                document.getElementById(\"answer-\".concat(pollIndex, \"-\").concat(numberOfAnswers)).select();\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.generateCheckbox = function (type) {\n      switch (type) {\n        case _pollType.SINGLE:\n          return /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(_Radio, {\n            disabled: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }\n          }));\n\n        case _pollType.MULTIPLE:\n          return /*#__PURE__*/React.createElement(React.Fragment, null, ' ', /*#__PURE__*/React.createElement(_Checkbox, {\n            disabled: true,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }\n          }));\n\n        default:\n          return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    };\n\n    _this.handleEnter = function (pollIndex, answerIndex, numberOfAnswers) {\n      if (answerIndex === null) {\n        //NOTE: enter on question\n        document.getElementById(\"answer-\".concat(pollIndex, \"-0\")).focus();\n        document.getElementById(\"answer-\".concat(pollIndex, \"-0\")).select();\n      } else if (numberOfAnswers === answerIndex + 1) {\n        //NOTE: last answer\n        _this.handleClickAddAnswer(pollIndex, numberOfAnswers);\n      } else {\n        document.getElementById(\"answer-\".concat(pollIndex, \"-\").concat(answerIndex + 1)).focus();\n        document.getElementById(\"answer-\".concat(pollIndex, \"-\").concat(answerIndex + 1)).select();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(NewQuestion, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.handleFocus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          poll = _this$props.poll,\n          pollIndex = _this$props.pollIndex,\n          handleDeleteItem = _this$props.handleDeleteItem,\n          _onChange = _this$props.onChange,\n          handleShowEditInput = _this$props.handleShowEditInput,\n          handleFocusPoll = _this$props.handleFocusPoll,\n          currentFocusingIndex = _this$props.currentFocusingIndex,\n          handleChangeSelectType = _this$props.handleChangeSelectType,\n          dragHandleProps = _this$props.dragHandleProps;\n      var isFocused = currentFocusingIndex === pollIndex;\n      this.inputHolderRef = React.createRef();\n      this.inputRef = React.createRef();\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.inputHolderRef,\n        className: \"NewQuestionForm \".concat(isFocused ? '' : 'focusing'),\n        key: pollIndex,\n        onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _context4.next = 2;\n                  return handleFocusPoll(pollIndex);\n\n                case 2:\n                  if (!isFocused) _this2.handleFocus2();\n\n                case 3:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4);\n        })),\n        style: isFocused ? focusingStyle : {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }\n      }, isFocused && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"focusOutline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topMenu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, !isFocused && /*#__PURE__*/React.createElement(\"span\", Object.assign({\n        className: \"dragBtn\"\n      }, dragHandleProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(_Icon, {\n        type: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }\n      })), isFocused && /*#__PURE__*/React.createElement(\"span\", Object.assign({\n        className: \"\"\n      }, dragHandleProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(_Icon, {\n        type: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }\n      })), isFocused && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"functionalBtns\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(_Select, {\n        defaultValue: poll.type,\n        onChange: function onChange(value) {\n          return handleChangeSelectType(pollIndex, value);\n        },\n        ref: this.selectRef,\n        size: 'small',\n        className: \"pollTypeSelect\",\n        style: {\n          width: 170\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Select.Option, {\n        value: _pollType.SINGLE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }\n      }, this.generateCheckbox(_pollType.SINGLE)), \"Single choice\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: _pollType.MULTIPLE,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, this.generateCheckbox(_pollType.MULTIPLE)), \"Multiple choice\"), /*#__PURE__*/React.createElement(_Select.Option, {\n        value: _pollType.OPEN_ANSWER,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"iconHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"align-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 49\n        }\n      })), \" Open answer\")), /*#__PURE__*/React.createElement(_Tooltip, {\n        title: \"X\\xF3a\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"delete\",\n        onClick: function onClick() {\n          return handleDeleteItem(pollIndex, null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 17\n        }\n      })))), isFocused ? /*#__PURE__*/React.createElement(_Input, {\n        ref: this.inputRef,\n        size: \"small\",\n        value: poll.question,\n        onChange: function onChange(e) {\n          _onChange(pollIndex, null, e);\n        },\n        onPressEnter: function onPressEnter() {\n          return _this2.handleEnter(pollIndex, null, null);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      }) : /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.handleClickQuestion;\n        },\n        className: \"question\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, poll.question), poll.type !== _pollType.OPEN_ANSWER && poll.answers.map(function (answer, answerIndex) {\n        return isFocused ? /*#__PURE__*/React.createElement(\"div\", {\n          className: \"answer-focusing\",\n          key: answerIndex,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }\n        }, _this2.generateCheckbox(poll.type), /*#__PURE__*/React.createElement(_Input, {\n          id: \"answer-\".concat(pollIndex, \"-\").concat(answerIndex),\n          size: \"small\",\n          value: answer,\n          onChange: function onChange(e) {\n            return _onChange(pollIndex, answerIndex, e);\n          },\n          onPressEnter: function onPressEnter() {\n            return _this2.handleEnter(pollIndex, answerIndex, poll.answers.length);\n          },\n          suffix: /*#__PURE__*/React.createElement(_Tooltip, {\n            title: \"X\\xF3a\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(_Icon, {\n            type: \"close\",\n            onClick: function onClick() {\n              return handleDeleteItem(pollIndex, answerIndex);\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }\n          })),\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }\n        })) : /*#__PURE__*/React.createElement(\"div\", {\n          onClick: function onClick() {\n            return handleShowEditInput(pollIndex, answerIndex, answer);\n          },\n          className: \"answer\",\n          key: answerIndex,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }\n        }, _this2.generateCheckbox(poll.type), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"answerContent\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }\n        }, String.fromCharCode(answerIndex + 65), \". \", answer));\n      }), isFocused && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"option-focusing\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }\n      }, poll.type !== _pollType.OPEN_ANSWER && /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          opacity: 0.5\n        },\n        onClick: function onClick() {\n          return _this2.handleClickAddAnswer(pollIndex, poll.answers.length);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 15\n        }\n      }, \"Th\\xEAm tu\\u1EF3 ch\\u1ECDn\")));\n    }\n  }]);\n\n  return NewQuestion;\n}(Component);\n\nexport default NewQuestion;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/NewQuestion.jsx"],"names":["React","Component","_pollType","focusingStyle","borderRadius","boxShadow","NewQuestion","handleFocus","e","inputHolderRef","current","click","inputRef","focus","select","handleFocus2","handleClickAddAnswer","pollIndex","numberOfAnswers","props","handleAddAnswer","document","getElementById","generateCheckbox","type","SINGLE","MULTIPLE","handleEnter","answerIndex","poll","handleDeleteItem","onChange","handleShowEditInput","handleFocusPoll","currentFocusingIndex","handleChangeSelectType","dragHandleProps","isFocused","createRef","value","selectRef","width","OPEN_ANSWER","question","handleClickQuestion","answers","map","answer","length","String","fromCharCode","opacity"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Checkbox, Radio, Input, Icon, Select, Tooltip } from 'antd'\nimport { _pollType } from '@constants'\n\nconst focusingStyle = { borderRadius: '5px', boxShadow: ' -3px 2px 8px 0px rgba(212,212,212,0.7)' }\nclass NewQuestion extends Component {\n  handleFocus = async e => {\n    await this.inputHolderRef.current.click()\n    if (this.inputRef.current) {\n      await this.inputRef.current.focus()\n      this.inputRef.current.select()\n    }\n  }\n\n  handleFocus2 = async () => {\n    if (this.inputRef.current) {\n      await this.inputRef.current.focus()\n      this.inputRef.current.select()\n    }\n  }\n\n  handleClickAddAnswer = async (pollIndex, numberOfAnswers) => {\n    await this.props.handleAddAnswer(pollIndex)\n    document.getElementById(`answer-${pollIndex}-${numberOfAnswers}`).focus()\n    document.getElementById(`answer-${pollIndex}-${numberOfAnswers}`).select()\n  }\n\n  generateCheckbox = type => {\n    switch (type) {\n      case _pollType.SINGLE:\n        return (\n          <>\n            {' '}\n            <Radio disabled />\n          </>\n        )\n\n      case _pollType.MULTIPLE:\n        return (\n          <>\n            {' '}\n            <Checkbox disabled />\n          </>\n        )\n\n      default:\n        return <></>\n    }\n  }\n\n  handleEnter = (pollIndex, answerIndex, numberOfAnswers) => {\n    if (answerIndex === null) {\n      //NOTE: enter on question\n      document.getElementById(`answer-${pollIndex}-0`).focus()\n      document.getElementById(`answer-${pollIndex}-0`).select()\n    } else if (numberOfAnswers === answerIndex + 1) {\n      //NOTE: last answer\n      this.handleClickAddAnswer(pollIndex, numberOfAnswers)\n    } else {\n      document.getElementById(`answer-${pollIndex}-${answerIndex + 1}`).focus()\n      document.getElementById(`answer-${pollIndex}-${answerIndex + 1}`).select()\n    }\n  }\n\n  componentDidMount() {\n    this.handleFocus()\n  }\n\n  render() {\n    const {\n      props: {\n        poll,\n        pollIndex,\n        handleDeleteItem,\n        onChange,\n        handleShowEditInput,\n        handleFocusPoll,\n        currentFocusingIndex,\n        handleChangeSelectType,\n        dragHandleProps\n      }\n    } = this\n    const isFocused = currentFocusingIndex === pollIndex\n    this.inputHolderRef = React.createRef()\n    this.inputRef = React.createRef()\n    return (\n      <div\n        ref={this.inputHolderRef}\n        className={`NewQuestionForm ${isFocused ? '' : 'focusing'}`}\n        key={pollIndex}\n        onClick={async () => {\n          await handleFocusPoll(pollIndex)\n          if (!isFocused) this.handleFocus2()\n        }}\n        style={isFocused ? focusingStyle : {}}\n      >\n        {isFocused && <div className='focusOutline'></div>}\n\n        <div className='topMenu'>\n          {/* Luc nay doi bung qua chua suy nghi duoc :) */}\n          {!isFocused && (\n            <span className='dragBtn' {...dragHandleProps}>\n              <Icon type='menu' />\n            </span>\n          )}\n\n          {isFocused && (\n            <span className='' {...dragHandleProps}>\n              <Icon type='menu' />\n            </span>\n          )}\n          {isFocused && (\n            <div className='functionalBtns'>\n              <Select\n                defaultValue={poll.type}\n                onChange={value => handleChangeSelectType(pollIndex, value)}\n                ref={this.selectRef}\n                size={'small'}\n                className='pollTypeSelect'\n                style={{ width: 170 }}\n              >\n                <Select.Option value={_pollType.SINGLE}>\n                  <span className='iconHolder'>{this.generateCheckbox(_pollType.SINGLE)}</span>\n                  Single choice\n                </Select.Option>\n                <Select.Option value={_pollType.MULTIPLE}>\n                  <span className='iconHolder'>{this.generateCheckbox(_pollType.MULTIPLE)}</span>\n                  Multiple choice\n                </Select.Option>\n                <Select.Option value={_pollType.OPEN_ANSWER}>\n                  <span className='iconHolder'>{<Icon type='align-left' />}</span> Open answer\n                </Select.Option>\n              </Select>\n\n              <Tooltip title='Xóa'>\n                <Icon type='delete' onClick={() => handleDeleteItem(pollIndex, null)} />\n              </Tooltip>\n            </div>\n          )}\n        </div>\n\n        {isFocused ? (\n          <Input\n            ref={this.inputRef}\n            size='small'\n            value={poll.question}\n            onChange={e => {\n              onChange(pollIndex, null, e)\n            }}\n            onPressEnter={() => this.handleEnter(pollIndex, null, null)}\n          />\n        ) : (\n          <div onClick={() => this.handleClickQuestion} className='question'>\n            {poll.question}\n          </div>\n        )}\n        {poll.type !== _pollType.OPEN_ANSWER &&\n          poll.answers.map((answer, answerIndex) =>\n            isFocused ? (\n              <div className='answer-focusing' key={answerIndex}>\n                {this.generateCheckbox(poll.type)}\n                <Input\n                  id={`answer-${pollIndex}-${answerIndex}`}\n                  size='small'\n                  value={answer}\n                  onChange={e => onChange(pollIndex, answerIndex, e)}\n                  onPressEnter={() => this.handleEnter(pollIndex, answerIndex, poll.answers.length)}\n                  suffix={\n                    <Tooltip title='Xóa'>\n                      <Icon type='close' onClick={() => handleDeleteItem(pollIndex, answerIndex)} />\n                    </Tooltip>\n                  }\n                />\n              </div>\n            ) : (\n              <div\n                onClick={() => handleShowEditInput(pollIndex, answerIndex, answer)}\n                className='answer'\n                key={answerIndex}\n              >\n                {this.generateCheckbox(poll.type)}\n                <span className='answerContent'>\n                  {String.fromCharCode(answerIndex + 65)}. {answer}\n                </span>\n              </div>\n            )\n          )}\n        {isFocused && (\n          <div className='option-focusing'>\n            {poll.type !== _pollType.OPEN_ANSWER && (\n              <span style={{ opacity: 0.5 }} onClick={() => this.handleClickAddAnswer(pollIndex, poll.answers.length)}>\n                Thêm tuỳ chọn\n              </span>\n            )}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default NewQuestion\n"]},"metadata":{},"sourceType":"module"}