{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport \"antd/es/tabs/style\";\nimport _Tabs from \"antd/es/tabs\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/components/ModalInvite.jsx\";\n\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { withTranslation } from 'react-i18next';\nimport './ModalInvite.less';\nimport TabRemind from './tabsInviteRemind/TabRemind';\nimport TabInvite from './tabsInviteRemind/TabInvite';\nimport TabUser from './tabsInviteRemind/TabUser';\nimport { client, Q_USER_EMAIL, Q_USERS } from '@graphql';\nimport { returnError } from '@utils';\nimport inviteIcon from \"@misc/images/toolbar/invite.svg\";\nimport remindIcon from \"@misc/images/toolbar/remind.svg\";\nimport inviteUserIcon from \"@misc/images/toolbar/invite-user.svg\";\nimport calendarIcon from \"@misc/images/toolbar/calendar.svg\";\nimport inviteActiveIcon from \"@misc/images/toolbar/invite-active.svg\";\nimport remindActiveIcon from \"@misc/images/toolbar/remind-active.svg\";\nimport inviteUserActiveIcon from \"@misc/images/toolbar/invite-user-active.svg\";\nimport calendarActiveIcon from \"@misc/images/toolbar/calendar-active.svg\";\nimport { observer, inject } from 'mobx-react';\nvar TabPane = _Tabs.TabPane;\nvar ModalInvite = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), withRouter(_class = _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalInvite, _React$PureComponent);\n\n  var _super = _createSuper(ModalInvite);\n\n  function ModalInvite() {\n    var _this;\n\n    _classCallCheck(this, ModalInvite);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      visible: false,\n      inviteEmail: [],\n      userEmail: [],\n      systemUser: [],\n      tabActive: 'user'\n    };\n\n    _this.queryRemindEmail = function () {\n      client.query({\n        query: Q_USER_EMAIL,\n        variables: {\n          conferenceId: _this.props.match.params.ID\n        },\n        fetchPolicy: 'network-only'\n      }).then(function (_ref2) {\n        var _ref2$data = _ref2.data,\n            InviteEmail = _ref2$data.InviteEmail,\n            UserEmail = _ref2$data.UserEmail;\n\n        _this.setState(function (_preState) {\n          return _objectSpread({}, _preState, {\n            userEmail: UserEmail,\n            inviteEmail: InviteEmail\n          });\n        });\n      }).catch(function (error) {\n        return returnError('Get Email', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryUserError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.queryUsers = function () {\n      client.query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only'\n      }).then(function (_ref3) {\n        var users = _ref3.data.users;\n\n        _this.setState({\n          systemUser: users\n        });\n      }).catch(function (error) {\n        return returnError('Get User', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryUserError')\n        }, {\n          container: 'top-right'\n        });\n      });\n    };\n\n    _this.showModal = function () {\n      _this.setState({\n        visible: true\n      });\n    };\n\n    _this.handleOk = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleCancel = function (e) {\n      _this.setState({\n        visible: false\n      });\n    };\n\n    _this.handleChangeTab = function (key) {\n      if (key === 'remind') {\n        _this.queryRemindEmail();\n      }\n\n      _this.setState({\n        tabActive: key\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ModalInvite, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.queryRemindEmail();\n      this.queryUsers();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var i18n = this.props.i18n;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn-invite\",\n        onClick: this.showModal,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }\n      }, i18n.t('meeting.inviteMembers')), /*#__PURE__*/React.createElement(_Modal, {\n        title: i18n.t('meeting.inviteMembers'),\n        className: \"modal-invite-dashboard\",\n        visible: this.state.visible,\n        onOk: this.handleOk,\n        onCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Tabs, {\n        className: \"tabs-invite\",\n        defaultActiveKey: this.state.tabActive,\n        onChange: this.handleChangeTab,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tabs-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: this.state.tabActive === 'user' ? inviteUserActiveIcon : inviteUserIcon,\n          alt: \"invite\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }\n        }, i18n.t('meeting.tabInviteUser'))),\n        key: \"user\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabUser, {\n        conference: this.props.conference,\n        users: this.state.systemUser,\n        handleCancel: this.handleCancel,\n        queryUsers: this.queryUsers,\n        _queryConferenceDetail: this.props._queryConferenceDetail,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }\n      })), this.props.globalState.isGoogleAPI && /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tabs-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: this.state.tabActive === 'calendar' ? calendarActiveIcon : calendarIcon,\n          alt: \"invite\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 21\n          }\n        }, i18n.t('meeting.inviteGoogle'))),\n        key: \"calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(TabInvite, {\n        type: \"calendar\",\n        statusEvent: this.props.statusEvent,\n        conference: this.props.conference,\n        handleCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tabs-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: this.state.tabActive === 'email' ? inviteActiveIcon : inviteIcon,\n          alt: \"invite\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }\n        }, i18n.t('meeting.tabInviteEmail'))),\n        key: \"email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabInvite, {\n        type: \"email\",\n        statusEvent: this.props.statusEvent,\n        conference: this.props.conference,\n        handleCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(TabPane, {\n        tab: /*#__PURE__*/React.createElement(\"div\", {\n          className: \"tabs-header\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: this.state.tabActive === 'remind' ? remindActiveIcon : remindIcon,\n          alt: \"invite\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 19\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 19\n          }\n        }, i18n.t('meeting.tabRemind'))),\n        key: \"remind\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(TabRemind, {\n        inviteEmail: this.state.inviteEmail,\n        userEmail: this.state.userEmail,\n        handleCancel: this.handleCancel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 15\n        }\n      })))));\n    }\n  }]);\n\n  return ModalInvite;\n}(React.PureComponent), _temp)) || _class) || _class) || _class);\nexport default withTranslation()(ModalInvite);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/components/ModalInvite.jsx"],"names":["React","withRouter","withTranslation","TabRemind","TabInvite","TabUser","client","Q_USER_EMAIL","Q_USERS","returnError","observer","inject","TabPane","ModalInvite","stores","state","visible","inviteEmail","userEmail","systemUser","tabActive","queryRemindEmail","query","variables","conferenceId","props","match","params","ID","fetchPolicy","then","data","InviteEmail","UserEmail","setState","_preState","catch","error","errorMessage","i18n","t","container","queryUsers","users","showModal","handleOk","e","handleCancel","handleChangeTab","key","inviteUserActiveIcon","inviteUserIcon","conference","_queryConferenceDetail","globalState","isGoogleAPI","calendarActiveIcon","calendarIcon","statusEvent","inviteActiveIcon","inviteIcon","remindActiveIcon","remindIcon","PureComponent"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,SAASC,eAAT,QAAgC,eAAhC;AAEA,OAAO,oBAAP;AAEA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,OAAP,MAAoB,4BAApB;AAEA,SAASC,MAAT,EAAiBC,YAAjB,EAA+BC,OAA/B,QAA8C,UAA9C;AACA,SAASC,WAAT,QAA4B,QAA5B;;;;;;;;;AAUA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,YAAjC;IAEQC,O,SAAAA,O;IAKFC,W,WAFLF,MAAM,CAAC;AAAA,MAAGG,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,EADNb,U,wBAEAS,Q;;;;;;;;;;;;;;;UAECK,K,GAAQ;AACNC,MAAAA,OAAO,EAAE,KADH;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,UAAU,EAAE,EAJN;AAKNC,MAAAA,SAAS,EAAE;AALL,K;;UAQRC,gB,GAAmB,YAAM;AACvBf,MAAAA,MAAM,CACHgB,KADH,CACS;AACLA,QAAAA,KAAK,EAAEf,YADF;AAELgB,QAAAA,SAAS,EAAE;AACTC,UAAAA,YAAY,EAAE,MAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC;AAD7B,SAFN;AAKLC,QAAAA,WAAW,EAAE;AALR,OADT,EAQGC,IARH,CAQQ,iBAA0C;AAAA,+BAAvCC,IAAuC;AAAA,YAA/BC,WAA+B,cAA/BA,WAA+B;AAAA,YAAlBC,SAAkB,cAAlBA,SAAkB;;AAC9C,cAAKC,QAAL,CAAc,UAAAC,SAAS;AAAA,mCAClBA,SADkB;AAErBjB,YAAAA,SAAS,EAAEe,SAFU;AAGrBhB,YAAAA,WAAW,EAAEe;AAHQ;AAAA,SAAvB;AAKD,OAdH,EAeGI,KAfH,CAeS,UAAAC,KAAK;AAAA,eACV5B,WAAW,CACT,WADS,EAET;AACE4B,UAAAA,KAAK,EAALA,KADF;AAEEC,UAAAA,YAAY,EAAE,MAAKb,KAAL,CAAWc,IAAX,CAAgBC,CAAhB,CAAkB,6BAAlB;AAFhB,SAFS,EAMT;AAAEC,UAAAA,SAAS,EAAE;AAAb,SANS,CADD;AAAA,OAfd;AAyBD,K;;UAGDC,U,GAAa,YAAM;AACjBpC,MAAAA,MAAM,CACHgB,KADH,CACS;AACLA,QAAAA,KAAK,EAAEd,OADF;AAELqB,QAAAA,WAAW,EAAE;AAFR,OADT,EAKGC,IALH,CAKQ,iBAAyB;AAAA,YAAda,KAAc,SAAtBZ,IAAsB,CAAdY,KAAc;;AAC7B,cAAKT,QAAL,CAAc;AAAEf,UAAAA,UAAU,EAAEwB;AAAd,SAAd;AACD,OAPH,EAQGP,KARH,CAQS,UAAAC,KAAK;AAAA,eACV5B,WAAW,CACT,UADS,EAET;AACE4B,UAAAA,KAAK,EAALA,KADF;AAEEC,UAAAA,YAAY,EAAE,MAAKb,KAAL,CAAWc,IAAX,CAAgBC,CAAhB,CAAkB,6BAAlB;AAFhB,SAFS,EAMT;AAAEC,UAAAA,SAAS,EAAE;AAAb,SANS,CADD;AAAA,OARd;AAkBD,K;;UAODG,S,GAAY,YAAM;AAChB,YAAKV,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAED6B,Q,GAAW,UAAAC,CAAC,EAAI;AACd,YAAKZ,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAED+B,Y,GAAe,UAAAD,CAAC,EAAI;AAClB,YAAKZ,QAAL,CAAc;AAAElB,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,K;;UAEDgC,e,GAAkB,UAAAC,GAAG,EAAI;AACvB,UAAIA,GAAG,KAAK,QAAZ,EAAsB;AACpB,cAAK5B,gBAAL;AACD;;AACD,YAAKa,QAAL,CAAc;AAAEd,QAAAA,SAAS,EAAE6B;AAAb,OAAd;AACD,K;;;;;;;wCAtBmB;AAClB,WAAK5B,gBAAL;AACA,WAAKqB,UAAL;AACD;;;6BAqBQ;AAAA,UACCH,IADD,GACU,KAAKd,KADf,CACCc,IADD;AAGP,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,YAAhC;AAA6C,QAAA,OAAO,EAAE,KAAKK,SAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,IAAI,CAACC,CAAL,CAAO,uBAAP,CADH,CADF,eAIE;AACE,QAAA,KAAK,EAAED,IAAI,CAACC,CAAL,CAAO,uBAAP,CADT;AAEE,QAAA,SAAS,EAAC,wBAFZ;AAGE,QAAA,OAAO,EAAE,KAAKzB,KAAL,CAAWC,OAHtB;AAIE,QAAA,IAAI,EAAE,KAAK6B,QAJb;AAKE,QAAA,QAAQ,EAAE,KAAKE,YALjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOE;AAAM,QAAA,SAAS,EAAC,aAAhB;AAA8B,QAAA,gBAAgB,EAAE,KAAKhC,KAAL,CAAWK,SAA3D;AAAsE,QAAA,QAAQ,EAAE,KAAK4B,eAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AACE,QAAA,GAAG,eACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAE,KAAKjC,KAAL,CAAWK,SAAX,KAAyB,MAAzB,GAAkC8B,oBAAlC,GAAyDC,cAAnE;AAAmF,UAAA,GAAG,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOZ,IAAI,CAACC,CAAL,CAAO,uBAAP,CAAP,CAFF,CAFJ;AAOE,QAAA,GAAG,EAAC,MAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,OAAD;AACE,QAAA,UAAU,EAAE,KAAKf,KAAL,CAAW2B,UADzB;AAEE,QAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWI,UAFpB;AAGE,QAAA,YAAY,EAAE,KAAK4B,YAHrB;AAIE,QAAA,UAAU,EAAE,KAAKL,UAJnB;AAKE,QAAA,sBAAsB,EAAE,KAAKjB,KAAL,CAAW4B,sBALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CADF,EAmBG,KAAK5B,KAAL,CAAW6B,WAAX,CAAuBC,WAAvB,iBACC,oBAAC,OAAD;AACE,QAAA,GAAG,eACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAE,KAAKxC,KAAL,CAAWK,SAAX,KAAyB,UAAzB,GAAsCoC,kBAAtC,GAA2DC,YAArE;AAAmF,UAAA,GAAG,EAAC,QAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOlB,IAAI,CAACC,CAAL,CAAO,sBAAP,CAAP,CAFF,CAFJ;AAOE,QAAA,GAAG,EAAC,UAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWiC,WAF1B;AAGE,QAAA,UAAU,EAAE,KAAKjC,KAAL,CAAW2B,UAHzB;AAIE,QAAA,YAAY,EAAE,KAAKL,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CApBJ,eAuCE,oBAAC,OAAD;AACE,QAAA,GAAG,eACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAE,KAAKhC,KAAL,CAAWK,SAAX,KAAyB,OAAzB,GAAmCuC,gBAAnC,GAAsDC,UAAhE;AAA4E,UAAA,GAAG,EAAC,QAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOrB,IAAI,CAACC,CAAL,CAAO,wBAAP,CAAP,CAFF,CAFJ;AAOE,QAAA,GAAG,EAAC,OAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,SAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWiC,WAF1B;AAGE,QAAA,UAAU,EAAE,KAAKjC,KAAL,CAAW2B,UAHzB;AAIE,QAAA,YAAY,EAAE,KAAKL,YAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAvCF,eAwDE,oBAAC,OAAD;AACE,QAAA,GAAG,eACD;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,GAAG,EAAE,KAAKhC,KAAL,CAAWK,SAAX,KAAyB,QAAzB,GAAoCyC,gBAApC,GAAuDC,UAAjE;AAA6E,UAAA,GAAG,EAAC,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOvB,IAAI,CAACC,CAAL,CAAO,mBAAP,CAAP,CAFF,CAFJ;AAOE,QAAA,GAAG,EAAC,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASE,oBAAC,SAAD;AACE,QAAA,WAAW,EAAE,KAAKzB,KAAL,CAAWE,WAD1B;AAEE,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,SAFxB;AAGE,QAAA,YAAY,EAAE,KAAK6B,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,CAxDF,CAPF,CAJF,CADF;AAuFD;;;;EA7KuB/C,KAAK,CAAC+D,a;AAgLhC,eAAe7D,eAAe,GAAGW,WAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withRouter } from 'react-router'\nimport { withTranslation } from 'react-i18next'\nimport { Modal, Tabs } from 'antd'\nimport './ModalInvite.less'\n\nimport TabRemind from './tabsInviteRemind/TabRemind'\nimport TabInvite from './tabsInviteRemind/TabInvite'\nimport TabUser from './tabsInviteRemind/TabUser'\n\nimport { client, Q_USER_EMAIL, Q_USERS } from '@graphql'\nimport { returnError } from '@utils'\n\nimport inviteIcon from '@misc/images/toolbar/invite.svg'\nimport remindIcon from '@misc/images/toolbar/remind.svg'\nimport inviteUserIcon from '@misc/images/toolbar/invite-user.svg'\nimport calendarIcon from '@misc/images/toolbar/calendar.svg'\nimport inviteActiveIcon from '@misc/images/toolbar/invite-active.svg'\nimport remindActiveIcon from '@misc/images/toolbar/remind-active.svg'\nimport inviteUserActiveIcon from '@misc/images/toolbar/invite-user-active.svg'\nimport calendarActiveIcon from '@misc/images/toolbar/calendar-active.svg'\nimport { observer, inject } from 'mobx-react'\n\nconst { TabPane } = Tabs\n\n@withRouter\n@inject(({ stores }) => stores)\n@observer\nclass ModalInvite extends React.PureComponent {\n  state = {\n    visible: false,\n    inviteEmail: [],\n    userEmail: [],\n    systemUser: [],\n    tabActive: 'user'\n  }\n\n  queryRemindEmail = () => {\n    client\n      .query({\n        query: Q_USER_EMAIL,\n        variables: {\n          conferenceId: this.props.match.params.ID\n        },\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { InviteEmail, UserEmail } }) => {\n        this.setState(_preState => ({\n          ..._preState,\n          userEmail: UserEmail,\n          inviteEmail: InviteEmail\n        }))\n      })\n      .catch(error =>\n        returnError(\n          'Get Email',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.queryUserError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  // TODO: filter backend không get hết users\n  queryUsers = () => {\n    client\n      .query({\n        query: Q_USERS,\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { users } }) => {\n        this.setState({ systemUser: users })\n      })\n      .catch(error =>\n        returnError(\n          'Get User',\n          {\n            error,\n            errorMessage: this.props.i18n.t('notification.queryUserError')\n          },\n          { container: 'top-right' }\n        )\n      )\n  }\n\n  componentDidMount() {\n    this.queryRemindEmail()\n    this.queryUsers()\n  }\n\n  showModal = () => {\n    this.setState({ visible: true })\n  }\n\n  handleOk = e => {\n    this.setState({ visible: false })\n  }\n\n  handleCancel = e => {\n    this.setState({ visible: false })\n  }\n\n  handleChangeTab = key => {\n    if (key === 'remind') {\n      this.queryRemindEmail()\n    }\n    this.setState({ tabActive: key })\n  }\n\n  render() {\n    const { i18n } = this.props\n\n    return (\n      <div>\n        <button type='button' className='btn-invite' onClick={this.showModal}>\n          {i18n.t('meeting.inviteMembers')}\n        </button>\n        <Modal\n          title={i18n.t('meeting.inviteMembers')}\n          className='modal-invite-dashboard'\n          visible={this.state.visible}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n        >\n          <Tabs className='tabs-invite' defaultActiveKey={this.state.tabActive} onChange={this.handleChangeTab}>\n            <TabPane\n              tab={\n                <div className='tabs-header'>\n                  <img src={this.state.tabActive === 'user' ? inviteUserActiveIcon : inviteUserIcon} alt='invite' />\n                  <span>{i18n.t('meeting.tabInviteUser')}</span>\n                </div>\n              }\n              key='user'\n            >\n              <TabUser\n                conference={this.props.conference}\n                users={this.state.systemUser}\n                handleCancel={this.handleCancel}\n                queryUsers={this.queryUsers}\n                _queryConferenceDetail={this.props._queryConferenceDetail}\n              />\n            </TabPane>\n\n            {this.props.globalState.isGoogleAPI && (\n              <TabPane\n                tab={\n                  <div className='tabs-header'>\n                    <img src={this.state.tabActive === 'calendar' ? calendarActiveIcon : calendarIcon} alt='invite' />\n                    <span>{i18n.t('meeting.inviteGoogle')}</span>\n                  </div>\n                }\n                key='calendar'\n              >\n                <TabInvite\n                  type='calendar'\n                  statusEvent={this.props.statusEvent}\n                  conference={this.props.conference}\n                  handleCancel={this.handleCancel}\n                />\n              </TabPane>\n            )}\n\n\n            <TabPane\n              tab={\n                <div className='tabs-header'>\n                  <img src={this.state.tabActive === 'email' ? inviteActiveIcon : inviteIcon} alt='invite' />\n                  <span>{i18n.t('meeting.tabInviteEmail')}</span>\n                </div>\n              }\n              key='email'\n            >\n              <TabInvite\n                type='email'\n                statusEvent={this.props.statusEvent}\n                conference={this.props.conference}\n                handleCancel={this.handleCancel}\n              />\n            </TabPane>\n\n            <TabPane\n              tab={\n                <div className='tabs-header'>\n                  <img src={this.state.tabActive === 'remind' ? remindActiveIcon : remindIcon} alt='invite' />\n                  <span>{i18n.t('meeting.tabRemind')}</span>\n                </div>\n              }\n              key='remind'\n            >\n              <TabRemind\n                inviteEmail={this.state.inviteEmail}\n                userEmail={this.state.userEmail}\n                handleCancel={this.handleCancel}\n              />\n            </TabPane>\n          </Tabs>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(ModalInvite)\n"]},"metadata":{},"sourceType":"module"}