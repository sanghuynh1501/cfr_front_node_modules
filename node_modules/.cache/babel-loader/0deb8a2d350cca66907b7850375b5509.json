{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/KeyboardShortcuts.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { appConstants } from '@constants';\nimport { newNotification } from '@utils';\nvar MUTE_POLICY = appConstants.MUTE_POLICY,\n    ROLE = appConstants.ROLE;\nvar KeyboardShortcuts = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(KeyboardShortcuts, _React$PureComponent);\n\n  var _super = _createSuper(KeyboardShortcuts);\n\n  function KeyboardShortcuts() {\n    var _this;\n\n    _classCallCheck(this, KeyboardShortcuts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this._shortcuts = new Map();\n    _this.state = {\n      shortcutsEnabled: true\n    };\n    return _this;\n  }\n\n  _createClass(KeyboardShortcuts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          jitsiStore = _this$props.jitsiStore,\n          conferenceState = _this$props.conferenceState;\n\n      this._initGlobalShortcuts();\n\n      window.onkeyup = function (e) {\n        if (!_this2.state.shortcutsEnabled) return;\n\n        var key = _this2._getKeyboardKey(e).toUpperCase(); // const num = parseInt(key, 10)\n\n\n        if (_this2._shortcuts.has(key)) {\n          _this2._shortcuts.get(key).function(e);\n        } //  else if (!isNaN(num) && num >= 0 && num <= 9) {\n        //   console.log(num)\n        // }\n\n      }; // *: On press button\n\n\n      window.onkeydown = function (e) {\n        var inputMessage = document.getElementById('input-message');\n        var inputInvite = document.getElementById('input-invite');\n        var inputPoll = document.querySelector('.answer');\n        if (!_this2.state.shortcutsEnabled) return;\n        if (inputMessage && document.activeElement === inputMessage) return;\n        if (inputInvite && document.activeElement === inputInvite) return;\n        if (inputPoll && document.activeElement === inputPoll) return;\n\n        if (_this2._getKeyboardKey(e).toUpperCase() === 'Z') {\n          if (conferenceState.conference.mutePolicy === MUTE_POLICY.HARD && conferenceState.myRole !== ROLE.OWNER) {\n            newNotification('Hard mute policy is on, please contact room moderator to enable', 'warning', {\n              dismiss: {\n                duration: 3000,\n                onScreen: true\n              }\n            });\n            return;\n          }\n\n          if (conferenceState.conference.mutePolicy === MUTE_POLICY.PRIORITY) {\n            if ((conferenceState === null || conferenceState === void 0 ? void 0 : conferenceState.myRole) === ROLE.PARTICIPANT) {\n              var _jitsiStore$_conferen, _conferenceState$conf;\n\n              var myUserIds = [jitsiStore.conference.myUserId(), jitsiStore === null || jitsiStore === void 0 ? void 0 : (_jitsiStore$_conferen = jitsiStore._conference) === null || _jitsiStore$_conferen === void 0 ? void 0 : _jitsiStore$_conferen.myUserId()];\n\n              if (!((conferenceState === null || conferenceState === void 0 ? void 0 : (_conferenceState$conf = conferenceState.conference) === null || _conferenceState$conf === void 0 ? void 0 : _conferenceState$conf.pinnedUser) && myUserIds.includes(conferenceState.conference.pinnedUser))) {\n                newNotification('Discussion policy is on, please contact room owner to enable', 'warning', {\n                  dismiss: {\n                    duration: 3000,\n                    onScreen: true\n                  }\n                });\n                return;\n              }\n            }\n          }\n\n          if (!jitsiStore.isAudio && conferenceState.onAudio) {\n            conferenceState.onAudio();\n          }\n        }\n      };\n    }\n  }, {\n    key: \"registerShortcut\",\n    value: function registerShortcut(shortcutChar, shortcutAttr, exec) {\n      this._shortcuts.set(shortcutChar, {\n        character: shortcutChar,\n        function: exec,\n        shortcutAttr: shortcutAttr\n      });\n    }\n  }, {\n    key: \"_initGlobalShortcuts\",\n    value: function _initGlobalShortcuts() {\n      var _this$props2 = this.props,\n          jitsiStore = _this$props2.jitsiStore,\n          conferenceState = _this$props2.conferenceState; // // *: On release button\n\n      this.registerShortcut('Z', null, function () {\n        if (jitsiStore.isAudio) {\n          conferenceState.offAudio();\n        }\n      });\n    }\n  }, {\n    key: \"_getKeyboardKey\",\n    value: function _getKeyboardKey(e) {\n      if (typeof e.key === 'string' && e.key !== 'Unidentified') {\n        return e.key;\n      }\n\n      if (e.type === 'keypress' && (e.which >= 32 && e.which <= 126 || e.which >= 160 && e.which <= 255)) {\n        return String.fromCharCode(e.which);\n      } // try to fallback (0-9A-Za-z and QWERTY keyboard)\n\n\n      switch (e.which) {\n        case 27:\n          return 'Escape';\n\n        case 191:\n          return e.shiftKey ? '?' : '/';\n\n        default:\n          {\n            if (e.shiftKey || e.type === 'keypress') {\n              return String.fromCharCode(e.which);\n            }\n\n            return String.fromCharCode(e.which).toLowerCase();\n          }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }\n      });\n    }\n  }]);\n\n  return KeyboardShortcuts;\n}(React.PureComponent), _temp)) || _class) || _class);\nexport default KeyboardShortcuts;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/KeyboardShortcuts.jsx"],"names":["React","inject","observer","appConstants","newNotification","MUTE_POLICY","ROLE","KeyboardShortcuts","stores","_shortcuts","Map","state","shortcutsEnabled","props","jitsiStore","conferenceState","_initGlobalShortcuts","window","onkeyup","e","key","_getKeyboardKey","toUpperCase","has","get","function","onkeydown","inputMessage","document","getElementById","inputInvite","inputPoll","querySelector","activeElement","conference","mutePolicy","HARD","myRole","OWNER","dismiss","duration","onScreen","PRIORITY","PARTICIPANT","myUserIds","myUserId","_conference","pinnedUser","includes","isAudio","onAudio","shortcutChar","shortcutAttr","exec","set","character","registerShortcut","offAudio","type","which","String","fromCharCode","shiftKey","toLowerCase","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { appConstants } from '@constants'\nimport { newNotification } from '@utils'\n\nconst { MUTE_POLICY, ROLE } = appConstants\n\n@inject(({ stores }) => stores)\n@observer\nclass KeyboardShortcuts extends React.PureComponent {\n  _shortcuts = new Map()\n\n  state = { shortcutsEnabled: true }\n\n  componentDidMount() {\n    const { jitsiStore, conferenceState } = this.props\n\n    this._initGlobalShortcuts()\n\n    window.onkeyup = e => {\n      if (!this.state.shortcutsEnabled) return\n\n      const key = this._getKeyboardKey(e).toUpperCase()\n      // const num = parseInt(key, 10)\n\n      if (this._shortcuts.has(key)) {\n        this._shortcuts.get(key).function(e)\n      }\n      //  else if (!isNaN(num) && num >= 0 && num <= 9) {\n      //   console.log(num)\n      // }\n    }\n\n    // *: On press button\n    window.onkeydown = e => {\n      const inputMessage = document.getElementById('input-message')\n      const inputInvite = document.getElementById('input-invite')\n      const inputPoll = document.querySelector('.answer')\n\n      if (!this.state.shortcutsEnabled) return\n      if (inputMessage && document.activeElement === inputMessage) return\n      if (inputInvite && document.activeElement === inputInvite) return\n      if (inputPoll && document.activeElement === inputPoll) return\n\n      if (this._getKeyboardKey(e).toUpperCase() === 'Z') {\n        if (conferenceState.conference.mutePolicy === MUTE_POLICY.HARD && conferenceState.myRole !== ROLE.OWNER) {\n          newNotification('Hard mute policy is on, please contact room moderator to enable', 'warning', {\n            dismiss: { duration: 3000, onScreen: true }\n          })\n          return\n        }\n\n        if (conferenceState.conference.mutePolicy === MUTE_POLICY.PRIORITY) {\n          if (conferenceState?.myRole === ROLE.PARTICIPANT) {\n            const myUserIds = [jitsiStore.conference.myUserId(), jitsiStore?._conference?.myUserId()]\n            if (!(conferenceState?.conference?.pinnedUser && myUserIds.includes(conferenceState.conference.pinnedUser))) {\n              newNotification('Discussion policy is on, please contact room owner to enable', 'warning', {\n                dismiss: { duration: 3000, onScreen: true }\n              })\n              return\n            }\n          }\n        }\n\n        if (!jitsiStore.isAudio && conferenceState.onAudio) {\n          conferenceState.onAudio()\n        }\n      }\n    }\n  }\n\n  registerShortcut(shortcutChar, shortcutAttr, exec) {\n    this._shortcuts.set(shortcutChar, {\n      character: shortcutChar,\n      function: exec,\n      shortcutAttr\n    })\n  }\n\n  _initGlobalShortcuts() {\n    const { jitsiStore, conferenceState } = this.props\n\n    // // *: On release button\n    this.registerShortcut('Z', null, () => {\n      if (jitsiStore.isAudio) {\n        conferenceState.offAudio()\n      }\n    })\n  }\n\n  _getKeyboardKey(e) {\n    if (typeof e.key === 'string' && e.key !== 'Unidentified') {\n      return e.key\n    }\n\n    if (e.type === 'keypress' && ((e.which >= 32 && e.which <= 126) || (e.which >= 160 && e.which <= 255))) {\n      return String.fromCharCode(e.which)\n    }\n\n    // try to fallback (0-9A-Za-z and QWERTY keyboard)\n    switch (e.which) {\n      case 27:\n        return 'Escape'\n      case 191:\n        return e.shiftKey ? '?' : '/'\n\n      default: {\n        if (e.shiftKey || e.type === 'keypress') {\n          return String.fromCharCode(e.which)\n        }\n\n        return String.fromCharCode(e.which).toLowerCase()\n      }\n    }\n  }\n\n  render() {\n    return <React.Fragment />\n  }\n}\n\nexport default KeyboardShortcuts\n"]},"metadata":{},"sourceType":"module"}