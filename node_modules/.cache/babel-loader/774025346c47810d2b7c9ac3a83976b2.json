{"ast":null,"code":"import \"antd/es/progress/style\";\nimport _Progress from \"antd/es/progress\";\nimport _defineProperty from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/PublicView.jsx\";\n\nimport React, { Component } from 'react';\nimport { observer, inject } from 'mobx-react';\nimport { _pollType } from '@constants';\nvar PublicView = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_Component) {\n  _inherits(PublicView, _Component);\n\n  var _super = _createSuper(PublicView);\n\n  function PublicView() {\n    var _this;\n\n    _classCallCheck(this, PublicView);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.groupBy = function (items, key, type) {\n      // console.log('items', items)\n      if (type === _pollType.MULTIPLE) {\n        var multipleGroupedItems = [];\n        items.forEach(function (e) {\n          if (e.key === null) return;\n          e.key.forEach(function (i, index) {\n            multipleGroupedItems.push(_objectSpread({}, e, {\n              key: e.key[index]\n            }));\n          });\n        });\n        return multipleGroupedItems.reduce(function (result, item) {\n          return _objectSpread({}, result, _defineProperty({}, item[key], [].concat(_toConsumableArray(result[item[key]] || []), [item])));\n        }, {});\n      }\n\n      var groupedItems = items.reduce(function (result, item) {\n        return _objectSpread({}, result, _defineProperty({}, item[key], [].concat(_toConsumableArray(result[item[key]] || []), [item])));\n      }, {}); // console.log('groupedItems', groupedItems)\n\n      return groupedItems;\n    };\n\n    _this.dataToShow = function (items, key, type) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          groupBy = _assertThisInitialize.groupBy;\n\n      var obj = groupBy(items, key, type);\n      var res = []; // console.log('obj', obj)\n\n      for (var _key2 in obj) {\n        // console.log(key)\n        var a = {\n          key: _key2,\n          values: obj[_key2],\n          type: type\n        };\n        res.push(a);\n      }\n\n      return res;\n    };\n\n    _this.generateMyAnswer = function (userVotes, userId, type) {\n      var res = userVotes.filter(function (e) {\n        return e.user._id === userId;\n      });\n      if (res.length === 0 || !res[0].key) return 'Không có câu trả lời';\n      if (type === _pollType.MULTIPLE && res[0].key.length > 1) return res[0].key.join(', ');\n      return res[0].key;\n    };\n\n    return _this;\n  }\n\n  _createClass(PublicView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props$conferenc = this.props.conferenceState,\n          publicPolls = _this$props$conferenc.publicPolls,\n          conferenceUsers = _this$props$conferenc.conferenceUsers,\n          myInfo = _this$props$conferenc.myInfo,\n          generateMyAnswer = this.generateMyAnswer;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          fontWeight: 600,\n          textAlign: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, \"K\\u1EBFt qu\\u1EA3 \\u0111ang \\u0111\\u01B0\\u1EE3c ch\\u1ECDn:\"), publicPolls.slice().sort(function (a, b) {\n        return a.createdAt - b.createdAt;\n      }).map(function (publicPoll, index) {\n        var userVotes = publicPoll.userVotes,\n            answers = publicPoll.answers,\n            _id = publicPoll._id,\n            type = publicPoll.type;\n        var mappedUserVotes = userVotes.filter(function (e) {\n          return e.key !== null;\n        }); //Mapped data from data to show\n\n        var mappedData = _this2.dataToShow(mappedUserVotes, 'key', type); //Final data for displaying\n\n\n        var finalData = answers.map(function (e) {\n          return _objectSpread({}, e, {\n            values: mappedData.filter(function (k) {\n              return k.key === e.key;\n            }).pop() ? mappedData.filter(function (k) {\n              return k.key === e.key;\n            }).pop().values : []\n          });\n        });\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"publicView\",\n          key: _id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"resultQuestion\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }\n        }, index + 1, \". \", publicPoll.question)), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"resultContent\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        }, type === _pollType.OPEN_ANSWER ? userVotes.filter(function (e) {\n          return e.key !== null;\n        }).map(function (e, i) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: i,\n            className: \"resultSubContent\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            style: {\n              color: '#5D9C5A'\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }\n          }, e.key));\n        }) : finalData.sort(function (a, b) {\n          return a.key.charCodeAt() - b.key.charCodeAt();\n        }).map(function (e, i) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            key: e.key,\n            className: \"resultSubContent\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 27\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }\n          }, e.key, \". \", e.value), /*#__PURE__*/React.createElement(\"div\", {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(_Progress, {\n            status: 'normal',\n            percent: Math.round(mappedUserVotes.filter(function (m) {\n              return m.key.includes(e.key);\n            }).length / conferenceUsers.length * 100),\n            size: \"small\",\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 31\n            }\n          })));\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"resultSubContent\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"noAnswer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }\n        }, \"Kh\\xF4ng c\\xF3 c\\xE2u tr\\u1EA3 l\\u1EDDi\"), /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(_Progress, {\n          status: 'normal',\n          percent: Math.round((type === _pollType.OPEN_ANSWER ? conferenceUsers.length - userVotes.filter(function (e) {\n            return e.key !== null && e.key[0].length !== 0;\n          }).length : conferenceUsers.length - mappedUserVotes.length) / conferenceUsers.length * 100),\n          size: \"small\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 23\n          }\n        })))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"userAnswer\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }\n        }, \"C\\xE2u tr\\u1EA3 l\\u1EDDi c\\u1EE7a t\\xF4i: \"), /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 19\n          }\n        }, generateMyAnswer(userVotes, myInfo._id, type))));\n      }));\n    }\n  }]);\n\n  return PublicView;\n}(Component), _temp)) || _class) || _class);\nexport default PublicView;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/PublicView.jsx"],"names":["React","Component","observer","inject","_pollType","PublicView","stores","groupBy","items","key","type","MULTIPLE","multipleGroupedItems","forEach","e","i","index","push","reduce","result","item","groupedItems","dataToShow","obj","res","a","values","generateMyAnswer","userVotes","userId","filter","user","_id","length","join","props","conferenceState","publicPolls","conferenceUsers","myInfo","fontWeight","textAlign","slice","sort","b","createdAt","map","publicPoll","answers","mappedUserVotes","mappedData","finalData","k","pop","question","OPEN_ANSWER","color","charCodeAt","value","Math","round","m","includes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { observer, inject } from 'mobx-react'\nimport { Progress } from 'antd'\nimport { _pollType } from '@constants'\n\n@inject(({ stores }) => stores)\n@observer\nclass PublicView extends Component {\n  groupBy = (items, key, type) => {\n    // console.log('items', items)\n    if (type === _pollType.MULTIPLE) {\n      let multipleGroupedItems = []\n\n      items.forEach(e => {\n        if (e.key === null) return\n        e.key.forEach((i, index) => {\n          multipleGroupedItems.push({ ...e, key: e.key[index] })\n        })\n      })\n      return multipleGroupedItems.reduce(\n        (result, item) => ({\n          ...result,\n          [item[key]]: [...(result[item[key]] || []), item]\n        }),\n        {}\n      )\n    }\n    const groupedItems = items.reduce(\n      (result, item) => ({\n        ...result,\n        [item[key]]: [...(result[item[key]] || []), item]\n      }),\n      {}\n    )\n\n    // console.log('groupedItems', groupedItems)\n    return groupedItems\n  }\n  // format data\n  dataToShow = (items, key, type) => {\n    const { groupBy } = this\n    let obj = groupBy(items, key, type)\n    let res = []\n    // console.log('obj', obj)\n    for (let key in obj) {\n      // console.log(key)\n      let a = {\n        key,\n        values: obj[key],\n        type\n      }\n      res.push(a)\n    }\n    return res\n  }\n\n  generateMyAnswer = (userVotes, userId, type) => {\n    let res = userVotes.filter(e => e.user._id === userId)\n\n    if (res.length === 0 || !res[0].key) return 'Không có câu trả lời'\n\n    if (type === _pollType.MULTIPLE && res[0].key.length > 1) return res[0].key.join(', ')\n\n    return res[0].key\n  }\n\n  render() {\n    const {\n      props: {\n        conferenceState: { publicPolls, conferenceUsers, myInfo }\n      },\n      generateMyAnswer\n    } = this\n    return (\n      <>\n        <div style={{ fontWeight: 600, textAlign: 'center' }}>Kết quả đang được chọn:</div>\n        {publicPolls\n          .slice()\n          .sort((a, b) => a.createdAt - b.createdAt)\n          .map((publicPoll, index) => {\n            const { userVotes, answers, _id, type } = publicPoll\n\n            const mappedUserVotes = userVotes.filter(e => e.key !== null)\n\n            //Mapped data from data to show\n            const mappedData = this.dataToShow(mappedUserVotes, 'key', type)\n\n            //Final data for displaying\n            const finalData = answers.map(e => ({\n              ...e,\n              values: mappedData.filter(k => k.key === e.key).pop()\n                ? mappedData.filter(k => k.key === e.key).pop().values\n                : []\n            }))\n            return (\n              <div className='publicView' key={_id}>\n                <div className='resultQuestion'>\n                  <span>\n                    {index + 1}. {publicPoll.question}\n                  </span>\n                </div>\n                <div className='resultContent'>\n                  {type === _pollType.OPEN_ANSWER\n                    ? userVotes\n                        .filter(e => e.key !== null)\n                        .map((e, i) => (\n                          <div key={i} className='resultSubContent'>\n                            <div style={{ color: '#5D9C5A' }}>{e.key}</div>\n                          </div>\n                        ))\n                    : finalData\n                        .sort((a, b) => a.key.charCodeAt() - b.key.charCodeAt())\n                        .map((e, i) => (\n                          <div key={e.key} className='resultSubContent'>\n                            <div>\n                              {e.key}. {e.value}\n                            </div>\n\n                            <div>\n                              <Progress\n                                status={'normal'}\n                                percent={Math.round(\n                                  (mappedUserVotes.filter(m => m.key.includes(e.key)).length / conferenceUsers.length) *\n                                    100\n                                )}\n                                size='small'\n                              />\n                            </div>\n                          </div>\n                        ))}\n                  <div className='resultSubContent'>\n                    <div className='noAnswer'>Không có câu trả lời</div>\n                    <div>\n                      <Progress\n                        status={'normal'}\n                        percent={Math.round(\n                          ((type === _pollType.OPEN_ANSWER\n                            ? conferenceUsers.length -\n                              userVotes.filter(e => e.key !== null && e.key[0].length !== 0).length\n                            : conferenceUsers.length - mappedUserVotes.length) /\n                            conferenceUsers.length) *\n                            100\n                        )}\n                        size='small'\n                      />\n                    </div>\n                  </div>\n                </div>\n                <div className='userAnswer'>\n                  <span>Câu trả lời của tôi: </span>\n                  <span>{generateMyAnswer(userVotes, myInfo._id, type)}</span>\n                </div>\n              </div>\n            )\n          })}\n      </>\n    )\n  }\n}\nexport default PublicView\n"]},"metadata":{},"sourceType":"module"}