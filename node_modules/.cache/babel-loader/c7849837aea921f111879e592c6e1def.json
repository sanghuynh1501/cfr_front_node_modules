{"ast":null,"code":"import \"antd/es/auto-complete/style\";\nimport _AutoComplete from \"antd/es/auto-complete\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/tabs/ChatComponents/Searchbox.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n\nvar Searchbox = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(Searchbox, _React$PureComponent);\n\n  var _super = _createSuper(Searchbox);\n\n  function Searchbox(props) {\n    var _this;\n\n    _classCallCheck(this, Searchbox);\n\n    _this = _super.call(this, props);\n\n    _this.defaultSuggestions = function () {\n      return _this.props.messageList.length && _this.props.messageList.slice(0, 5).map(function (_ref) {\n        var name = _ref.with.name;\n        return name;\n      }) || [];\n    };\n\n    _this.onSearch = function (searchText) {\n      _this.setState({\n        dataSource: !searchText ? _toConsumableArray(_this.defaultSuggestions()) : _toConsumableArray(_this.props.messageList.map(function (_ref2) {\n          var name = _ref2.with.name;\n          return name;\n        }).filter(function (item) {\n          return item.toLowerCase().indexOf(searchText.toLowerCase()) > -1;\n        }))\n      });\n    };\n\n    _this.onSelectFromSearch = function (selectedName) {\n      var _this$props$messageLi = _this.props.messageList.filter(function (_ref3) {\n        var name = _ref3.with.name;\n        return name === selectedName;\n      }),\n          _this$props$messageLi2 = _slicedToArray(_this$props$messageLi, 1),\n          selectedItem = _this$props$messageLi2[0];\n\n      if (selectedItem) _this.props.onSelectChat(_objectSpread({}, selectedItem.with, {\n        type: selectedItem.type\n      }));\n    };\n\n    _this.state = {\n      dataSource: []\n    };\n    return _this;\n  }\n\n  _createClass(Searchbox, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(_AutoComplete, {\n        dataSource: this.state.dataSource,\n        style: {\n          width: '100%',\n          height: 38\n        },\n        className: \"find-chat\",\n        onSelect: this.onSelectFromSearch,\n        onSearch: this.onSearch,\n        placeholder: this.props.i18n.t('placeholderChat'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return Searchbox;\n}(React.PureComponent);\n\nexport default withTranslation()(Searchbox);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/tabs/ChatComponents/Searchbox.jsx"],"names":["React","withTranslation","Searchbox","props","defaultSuggestions","messageList","length","slice","map","name","with","onSearch","searchText","setState","dataSource","filter","item","toLowerCase","indexOf","onSelectFromSearch","selectedName","selectedItem","onSelectChat","type","state","width","height","i18n","t","PureComponent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,eAAhC;;IAGMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,UAOnBC,kBAPmB,GAOE;AAAA,aAClB,MAAKD,KAAL,CAAWE,WAAX,CAAuBC,MAAvB,IACC,MAAKH,KAAL,CAAWE,WAAX,CAAuBE,KAAvB,CAA6B,CAA7B,EAAgC,CAAhC,EAAmCC,GAAnC,CAAuC;AAAA,YAAWC,IAAX,QAAGC,IAAH,CAAWD,IAAX;AAAA,eAAwBA,IAAxB;AAAA,OAAvC,CADF,IAEA,EAHmB;AAAA,KAPF;;AAAA,UAYnBE,QAZmB,GAYR,UAAAC,UAAU,EAAI;AACvB,YAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE,CAACF,UAAD,sBACJ,MAAKR,kBAAL,EADI,uBAGH,MAAKD,KAAL,CAAWE,WAAX,CACAG,GADA,CACI;AAAA,cAAWC,IAAX,SAAGC,IAAH,CAAWD,IAAX;AAAA,iBAAwBA,IAAxB;AAAA,SADJ,EAEAM,MAFA,CAGC,UAAAC,IAAI;AAAA,iBACFA,IAAI,CAACC,WAAL,GAAmBC,OAAnB,CAA2BN,UAAU,CAACK,WAAX,EAA3B,IAAuD,CAAC,CADtD;AAAA,SAHL,CAHG;AADA,OAAd;AAYD,KAzBkB;;AAAA,UA2BnBE,kBA3BmB,GA2BE,UAAAC,YAAY,EAAI;AAAA,kCACZ,MAAKjB,KAAL,CAAWE,WAAX,CAAuBU,MAAvB,CACrB;AAAA,YAAWN,IAAX,SAAGC,IAAH,CAAWD,IAAX;AAAA,eAAwBA,IAAI,KAAKW,YAAjC;AAAA,OADqB,CADY;AAAA;AAAA,UAC5BC,YAD4B;;AAKnC,UAAIA,YAAJ,EACE,MAAKlB,KAAL,CAAWmB,YAAX,mBAA6BD,YAAY,CAACX,IAA1C;AAAgDa,QAAAA,IAAI,EAAEF,YAAY,CAACE;AAAnE;AACH,KAlCkB;;AAEjB,UAAKC,KAAL,GAAa;AACXV,MAAAA,UAAU,EAAE;AADD,KAAb;AAFiB;AAKlB;;;;6BA+BQ;AACP,0BACE;AACE,QAAA,UAAU,EAAE,KAAKU,KAAL,CAAWV,UADzB;AAEE,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE;AAAzB,SAFT;AAGE,QAAA,SAAS,EAAC,WAHZ;AAIE,QAAA,QAAQ,EAAE,KAAKP,kBAJjB;AAKE,QAAA,QAAQ,EAAE,KAAKR,QALjB;AAME,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWwB,IAAX,CAAgBC,CAAhB,CAAkB,iBAAlB,CANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD;;;;EAhDqB5B,KAAK,CAAC6B,a;;AAmD9B,eAAe5B,eAAe,GAAGC,SAAH,CAA9B","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { AutoComplete } from 'antd'\n\nclass Searchbox extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dataSource: []\n    }\n  }\n\n  defaultSuggestions = () =>\n    (this.props.messageList.length &&\n      this.props.messageList.slice(0, 5).map(({ with: { name } }) => name)) ||\n    []\n\n  onSearch = searchText => {\n    this.setState({\n      dataSource: !searchText\n        ? [...this.defaultSuggestions()]\n        : [\n            ...this.props.messageList\n              .map(({ with: { name } }) => name)\n              .filter(\n                item =>\n                  item.toLowerCase().indexOf(searchText.toLowerCase()) > -1\n              )\n          ]\n    })\n  }\n\n  onSelectFromSearch = selectedName => {\n    const [selectedItem] = this.props.messageList.filter(\n      ({ with: { name } }) => name === selectedName\n    )\n\n    if (selectedItem)\n      this.props.onSelectChat({ ...selectedItem.with, type: selectedItem.type })\n  }\n\n  render() {\n    return (\n      <AutoComplete\n        dataSource={this.state.dataSource}\n        style={{ width: '100%', height: 38 }}\n        className='find-chat'\n        onSelect={this.onSelectFromSearch}\n        onSearch={this.onSearch}\n        placeholder={this.props.i18n.t('placeholderChat')}\n      />\n    )\n  }\n}\n\nexport default withTranslation()(Searchbox)\n"]},"metadata":{},"sourceType":"module"}