{"ast":null,"code":"import _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalTimer.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { checkPermission } from '@constants';\nimport endTimer from \"../../../misc/images/end_timer.svg\";\nimport resetTimer from \"../../../misc/images/reset_timer.svg\"; // import setTimer from '../../../misc/images/set_timer.svg'\n// import pauseTimer from '../../../misc/images/pause_timer.svg'\n// import playTimer from '../../../misc/images/play_timer.svg'\n\nvar ModalTimer = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = /*#__PURE__*/function (_React$Component) {\n  _inherits(ModalTimer, _React$Component);\n\n  var _super = _createSuper(ModalTimer);\n\n  function ModalTimer() {\n    _classCallCheck(this, ModalTimer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ModalTimer, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          data = _this$props.data,\n          handleReset = _this$props.handleReset,\n          handleComplete = _this$props.handleComplete,\n          conferenceState = _this$props.conferenceState;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"timer-show\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"current-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, data.currentTime), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"end-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, data.endTime))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control-timer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, checkPermission(conferenceState.myPermissions, 'TIMER_RESET') ? /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"reset-timer\",\n        onClick: handleReset,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: resetTimer,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }\n      })) : null, checkPermission(conferenceState.myPermissions, 'TIMER_REMOVE') ? /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"setting-timer\",\n        onClick: handleComplete,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: endTimer,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }\n      })) : null));\n    }\n  }]);\n\n  return ModalTimer;\n}(React.Component)) || _class) || _class);\nexport default ModalTimer;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/modals/ModalTimer.jsx"],"names":["React","inject","observer","checkPermission","ModalTimer","stores","props","data","handleReset","handleComplete","conferenceState","currentTime","endTime","myPermissions","resetTimer","endTimer","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AAEA,SAASC,eAAT,QAAgC,YAAhC;;+DAIA;AACA;AACA;;IAIMC,U,WAFLH,MAAM,CAAC;AAAA,MAAGI,MAAH,QAAGA,MAAH;AAAA,SAAgBA,MAAhB;AAAA,CAAD,C,gBACNH,Q;;;;;;;;;;;;;6BAEU;AAAA,wBASH,IATG,CAELI,KAFK;AAAA,UAGHC,IAHG,eAGHA,IAHG;AAAA,UAKHC,WALG,eAKHA,WALG;AAAA,UAMHC,cANG,eAMHA,cANG;AAAA,UAOHC,eAPG,eAOHA,eAPG;AAUP,0BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiCH,IAAI,CAACI,WAAtC,CADF,eAEE;AAAM,QAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6BJ,IAAI,CAACK,OAAlC,CAFF,CAZF,CADF,eAkBE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGT,eAAe,CAACO,eAAe,CAACG,aAAjB,EAAgC,aAAhC,CAAf,gBACC;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,aAAhC;AAA8C,QAAA,OAAO,EAAEL,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,GAAG,EAAEM,UAAV;AAAsB,QAAA,GAAG,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD,GAIG,IALN,EAMGX,eAAe,CAACO,eAAe,CAACG,aAAjB,EAAgC,cAAhC,CAAf,gBACC;AACC,QAAA,IAAI,EAAC,QADN;AAEC,QAAA,SAAS,EAAC,eAFX;AAGC,QAAA,OAAO,EAAEJ,cAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE;AAAK,QAAA,GAAG,EAAEM,QAAV;AAAoB,QAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADD,GAQG,IAdN,CAlBF,CADF;AAqCD;;;;EAhDsBf,KAAK,CAACgB,S;AAmD/B,eAAeZ,UAAf","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { checkPermission } from '@constants'\n\nimport endTimer from '../../../misc/images/end_timer.svg'\nimport resetTimer from '../../../misc/images/reset_timer.svg'\n// import setTimer from '../../../misc/images/set_timer.svg'\n// import pauseTimer from '../../../misc/images/pause_timer.svg'\n// import playTimer from '../../../misc/images/play_timer.svg'\n\n@inject(({ stores }) => stores)\n@observer\nclass ModalTimer extends React.Component {\n  render() {\n    const {\n      props: {\n        data,\n        // handlePauseStart,\n        handleReset,\n        handleComplete,\n        conferenceState\n      }\n    } = this\n    return (\n      <div className='modal-timer'>\n        <div className='timer-show'>\n          {/* {data.isComplete ? (\n            <></>\n          ) : (\n            <button\n              type='button'\n              className='resume-timer'\n              onClick={() => handlePauseStart(data.isPause)}\n            >\n              <img src={data.isPause ? playTimer : pauseTimer} alt='icon' />\n            </button>\n          )} */}\n          <div className='text-timer'>\n            <span className='current-timer'>{data.currentTime}</span>\n            <span className='end-timer'>{data.endTime}</span>\n          </div>\n        </div>\n        <div className='control-timer'>\n          {checkPermission(conferenceState.myPermissions, 'TIMER_RESET') ? (\n            <button type='button' className='reset-timer' onClick={handleReset}>\n              <img src={resetTimer} alt='icon' />\n            </button>\n          ) : null}\n          {checkPermission(conferenceState.myPermissions, 'TIMER_REMOVE') ? (\n            <button\n             type='button'\n             className='setting-timer'\n             onClick={handleComplete}\n            >\n              <img src={endTimer} alt='icon' />\n            </button>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ModalTimer\n"]},"metadata":{},"sourceType":"module"}