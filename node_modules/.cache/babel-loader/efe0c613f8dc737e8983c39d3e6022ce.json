{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject45() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!, $inputSearch: InputSearchFile) {\\n    allFilesConference(conferenceId: $conferenceId, inputSearch: $inputSearch) {\\n      _id\\n      name\\n      createdBy {\\n        _id\\n        username\\n      }\\n      type\\n      isShare\\n      isPresentation\\n      size\\n      path\\n    }\\n  }\\n\"]);\n\n  _templateObject45 = function _templateObject45() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject44() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!, $inputSearch: InputSearchFile) {\\n    myFilesConference(conferenceId: $conferenceId, inputSearch: $inputSearch) {\\n      _id\\n      name\\n      createdBy {\\n        _id\\n        username\\n      }\\n      type\\n      isShare\\n      isPresentation\\n      size\\n      path\\n    }\\n  }\\n\"]);\n\n  _templateObject44 = function _templateObject44() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject43() {\n  var data = _taggedTemplateLiteral([\"\\n  query($inputSearch: InputSearchFile) {\\n    myFiles(inputSearch: $inputSearch) {\\n      _id\\n      name\\n      createdBy {\\n        _id\\n        username\\n      }\\n      type\\n    }\\n  }\\n\"]);\n\n  _templateObject43 = function _templateObject43() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject42() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    isEnableGoogleAPI\\n  }\\n\"]);\n\n  _templateObject42 = function _templateObject42() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject41() {\n  var data = _taggedTemplateLiteral([\"\\n  query($type: EnumTypeRole) {\\n    roles(type: $type) {\\n      _id\\n      code\\n      name\\n      type\\n    }\\n  }\\n\"]);\n\n  _templateObject41 = function _templateObject41() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject40() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceCode: String!) {\\n    getOnlineInConference(conferenceCode: $conferenceCode) {\\n      _id\\n      userId\\n      conferenceId\\n      createdAt\\n      finishedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject40 = function _templateObject40() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject39() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    getEmailSetting {\\n      _id\\n      rootEmail\\n      isActive\\n      deleted\\n    }\\n  }\\n\"]);\n\n  _templateObject39 = function _templateObject39() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject38() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    getActiveQNASessions(conferenceId: $conferenceId) {\\n      _id\\n      duration\\n      isActive\\n      needApproval\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n      }\\n      QNA {\\n        _id\\n        isApproved\\n        question\\n        createdAt\\n        isAnonymous\\n        createdBy {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n        userAnswer {\\n          user {\\n            _id\\n            username\\n            firstname\\n            lastname\\n          }\\n          answer\\n          isPrivate\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject38 = function _templateObject38() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject37() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    attendances(conferenceId: $conferenceId) {\\n      _id\\n      # conferenceId\\n      userAttendances {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n        createdAt\\n        isAttended\\n      }\\n      duration\\n      isActive\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n      }\\n      createdAt\\n    }\\n  }\\n\"]);\n\n  _templateObject37 = function _templateObject37() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject36() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    getSetting {\\n      record\\n      googleAPI\\n      telegramAPI\\n      server\\n    }\\n  }\\n\"]);\n\n  _templateObject36 = function _templateObject36() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject35() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    InviteEmail: getInviteEmail(conferenceId: $conferenceId) {\\n      _id\\n      email\\n      conferenceId\\n    }\\n    UserEmail: conferenceUsers(conferenceId: $conferenceId) {\\n      user {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        email\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject35 = function _templateObject35() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject34() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    getInviteEmail(conferenceId: $conferenceId) {\\n      _id\\n      email\\n      conferenceId\\n    }\\n  }\\n\"]);\n\n  _templateObject34 = function _templateObject34() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject33() {\n  var data = _taggedTemplateLiteral([\"\\n  query($nodeId: ID!) {\\n    node(nodeId: $nodeId) {\\n      _id\\n      name\\n      descriptions\\n      createdAt\\n      createdBy {\\n        _id\\n        username\\n      }\\n      users {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        email\\n        phoneNumber\\n        profiles {\\n          _id\\n          value\\n          node {\\n            _id\\n          }\\n          role {\\n            _id\\n            name\\n            code\\n            type\\n            descriptions\\n            permissions {\\n              _id\\n              code\\n              descriptions\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject33 = function _templateObject33() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject32() {\n  var data = _taggedTemplateLiteral([\"\\n  query($inputSearch: InputSearchNode) {\\n    nodes(inputSearch: $inputSearch) {\\n      _id\\n      name\\n      descriptions\\n      createdAt\\n      createdBy {\\n        _id\\n        username\\n      }\\n      users {\\n        _id\\n        username\\n        email\\n        profiles {\\n          _id\\n          value\\n          role {\\n            type\\n            _id\\n            name\\n            code\\n            descriptions\\n            permissions {\\n              _id\\n              code\\n              descriptions\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject32 = function _templateObject32() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject31() {\n  var data = _taggedTemplateLiteral([\"\\n  query($inputSearch: InputSearchNode) {\\n    nodes(inputSearch: $inputSearch) {\\n      _id\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject31 = function _templateObject31() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject30() {\n  var data = _taggedTemplateLiteral([\"\\n  query conferenceRoles($conferenceId: ID!) {\\n    conferenceRoles(conferenceId: $conferenceId) {\\n      _id\\n      name\\n      description\\n      permissions {\\n        _id\\n        description\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject30 = function _templateObject30() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject29() {\n  var data = _taggedTemplateLiteral([\"\\n  query webinarPolls($webinarId: ID!) {\\n    webinarPolls(webinarId: $webinarId) {\\n      _id\\n      name\\n      questions {\\n        question\\n        type\\n        answers {\\n          key\\n          value\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject29 = function _templateObject29() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject28() {\n  var data = _taggedTemplateLiteral([\"\\n  query webinarTemplate($webinarTeamplateId: String!) {\\n    webinarTemplate(webinarTeamplateId: $webinarTeamplateId) {\\n      _id\\n      name\\n      createdAt\\n\\n      mutePolicy\\n      hostVideo\\n      panelistsVideo\\n      QnA\\n      practiceSession\\n      authenticatedOnly\\n      automaticallyRecord\\n    }\\n  }\\n\"]);\n\n  _templateObject28 = function _templateObject28() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject27() {\n  var data = _taggedTemplateLiteral([\"\\n  query webinarTemplates {\\n    webinarTemplates {\\n      _id\\n      name\\n      createdAt\\n\\n      mutePolicy\\n      hostVideo\\n      panelistsVideo\\n      QnA\\n      practiceSession\\n      authenticatedOnly\\n      automaticallyRecord\\n    }\\n  }\\n\"]);\n\n  _templateObject27 = function _templateObject27() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject26() {\n  var data = _taggedTemplateLiteral([\"\\n  query webinars {\\n    webinars {\\n      _id\\n      code\\n      name\\n      password\\n      startAt\\n\\n      createdBy {\\n        firstname\\n        lastname\\n      }\\n      userCount\\n      hostVideo\\n      panelistsVideo\\n      QnA\\n      startDate\\n      practiceSession\\n      authenticatedOnly\\n      automaticallyRecord\\n    }\\n  }\\n\"]);\n\n  _templateObject26 = function _templateObject26() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject25() {\n  var data = _taggedTemplateLiteral([\"\\n  query getDrawData($conferenceId: ID!) {\\n    getDrawData(conferenceId: $conferenceId) {\\n      imageUrl\\n      line\\n    }\\n  }\\n\"]);\n\n  _templateObject25 = function _templateObject25() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject24() {\n  var data = _taggedTemplateLiteral([\"\\n  query resourceById($_id: ID!) {\\n    resourceById(_id: $_id) {\\n      resources\\n      _id\\n      uploadedBy {\\n        _id\\n      }\\n      partOf\\n      uploadedAt\\n      externalData\\n      isShare\\n      isPDF\\n      isSlide\\n      isImage\\n      filename\\n      size\\n    }\\n  }\\n\"]);\n\n  _templateObject24 = function _templateObject24() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject23() {\n  var data = _taggedTemplateLiteral([\"\\n  query($text: String, $limit: Int) {\\n    searchUsers(text: $text, limit: $limit) {\\n      _id\\n      username\\n      firstname\\n      lastname\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject23 = function _templateObject23() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject22() {\n  var data = _taggedTemplateLiteral([\"\\n  query recordPrivate($recordId: String!) {\\n    recordPrivate(recordId: $recordId) {\\n      _id\\n      name\\n      conference {\\n        _id\\n        name\\n        createdBy {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n      }\\n      url\\n      state\\n      createdAt\\n      size\\n      duration\\n      lastStart\\n      users {\\n        permission\\n        createdAt\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject22 = function _templateObject22() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject21() {\n  var data = _taggedTemplateLiteral([\"\\n  query recordsPrivate($inputSearch: InputSearchRecord) {\\n    recordsPrivate(inputSearch: $inputSearch) {\\n      _id\\n      name\\n      conference {\\n        _id\\n        name\\n        code\\n        createdBy {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n      }\\n      url\\n      state\\n      createdAt\\n      size\\n      duration\\n      lastStart\\n      users {\\n        permission\\n        createdAt\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          email\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject21 = function _templateObject21() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject20() {\n  var data = _taggedTemplateLiteral([\"\\n  query recordingByConference($conferenceId: String!) {\\n    recordingByConference(conferenceId: $conferenceId) {\\n      _id\\n      name\\n      conference {\\n        _id\\n        name\\n        createdBy {\\n          _id\\n          username\\n          firstname\\n          lastname\\n        }\\n      }\\n      url\\n      state\\n      createdAt\\n      size\\n      duration\\n      lastStart\\n    }\\n  }\\n\"]);\n\n  _templateObject20 = function _templateObject20() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject19() {\n  var data = _taggedTemplateLiteral([\"\\n  query conferenceResource($conferenceId: ID!) {\\n    conferenceResource(conferenceId: $conferenceId) {\\n      resources\\n      _id\\n      uploadedBy {\\n        _id\\n      }\\n      partOf\\n      uploadedAt\\n      externalData\\n      isShare\\n      isPDF\\n      isSlide\\n      isImage\\n      filename\\n      size\\n    }\\n  }\\n\"]);\n\n  _templateObject19 = function _templateObject19() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject18() {\n  var data = _taggedTemplateLiteral([\"\\n  query hasSlideShare($conferenceId: ID!) {\\n    hasSlideShare(conferenceId: $conferenceId) {\\n      resources\\n      _id\\n      uploadedBy {\\n        _id\\n      }\\n      partOf\\n      uploadedAt\\n      externalData\\n      isShare\\n    }\\n  }\\n\"]);\n\n  _templateObject18 = function _templateObject18() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject17() {\n  var data = _taggedTemplateLiteral([\"\\n  query messages($conferenceId: ID!, $withUser: ID!, $first: Int, $offset: Int) {\\n    messages(conferenceId: $conferenceId, withUser: $withUser, first: $first, offset: $offset) {\\n      _id\\n      sender {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      receiver\\n      content\\n      sentAt\\n    }\\n  }\\n\"]);\n\n  _templateObject17 = function _templateObject17() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject16() {\n  var data = _taggedTemplateLiteral([\"\\n  query messageList($conferenceId: ID!) {\\n    messageList(conferenceId: $conferenceId) {\\n      with {\\n        _id\\n        name\\n        imageUrl\\n      }\\n      type\\n      latestMessage {\\n        _id\\n        content\\n        sentAt\\n      }\\n      unread\\n    }\\n  }\\n\"]);\n\n  _templateObject16 = function _templateObject16() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject15() {\n  var data = _taggedTemplateLiteral([\"\\n  query unreadMessages($conferenceId: ID!) {\\n    unreadMessages(conferenceId: $conferenceId)\\n  }\\n\"]);\n\n  _templateObject15 = function _templateObject15() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject14() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    hasPolling(conferenceId: $conferenceId) {\\n      _id\\n      # conferenceId\\n      question\\n      duration\\n      answers {\\n        key\\n        value\\n      }\\n      userVotes {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          imageUrl\\n        }\\n        key\\n      }\\n      type\\n      isLocked\\n      isActive\\n      isPublic\\n      isPersonalPublic\\n      canBePersonalPublic\\n      isRandom\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      createdAt\\n      endAt\\n    }\\n  }\\n\"]);\n\n  _templateObject14 = function _templateObject14() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject13() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    polls(conferenceId: $conferenceId) {\\n      _id\\n      # conferenceId\\n      question\\n      duration\\n      answers {\\n        key\\n        value\\n      }\\n      userVotes {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          imageUrl\\n        }\\n        key\\n      }\\n      type\\n      isLocked\\n      isActive\\n      isPublic\\n      isPersonalPublic\\n      canBePersonalPublic\\n      isRandom\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      createdAt\\n      endAt\\n    }\\n  }\\n\"]);\n\n  _templateObject13 = function _templateObject13() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject12() {\n  var data = _taggedTemplateLiteral([\"\\n  query hasTimer($conferenceId: ID!) {\\n    hasTimer(conferenceId: $conferenceId) {\\n      _id\\n      amountOfTime\\n      descriptions\\n      startAt\\n      type\\n      createdBy\\n    }\\n  }\\n\"]);\n\n  _templateObject12 = function _templateObject12() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject11() {\n  var data = _taggedTemplateLiteral([\"\\n  query conferenceRole($roleId: ID!) {\\n    conferenceRole(roleId: $roleId) {\\n      _id\\n      permissions {\\n        _id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject11 = function _templateObject11() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject10() {\n  var data = _taggedTemplateLiteral([\"\\n  query conferenceUsers($conferenceId: ID!) {\\n    conferenceUsers(conferenceId: $conferenceId) {\\n      user {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n        email\\n        phoneNumber\\n      }\\n      status\\n      role {\\n        _id\\n        permissions {\\n          _id\\n        }\\n      }\\n      joinedAt\\n    }\\n  }\\n\"]);\n\n  _templateObject10 = function _templateObject10() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject9() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    myInfo {\\n      _id\\n      username\\n      firstname\\n      lastname\\n      imageUrl\\n      email\\n      phoneNumber\\n      personalMeetingCode\\n\\n      profiles {\\n        _id\\n        role {\\n          _id\\n          name\\n          type\\n          code\\n          descriptions\\n          permissions {\\n            _id\\n            code\\n            descriptions\\n          }\\n        }\\n        node {\\n          _id\\n          name\\n          descriptions\\n          createdAt\\n        }\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject9 = function _templateObject9() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject8() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    myInfo {\\n      _id\\n      username\\n      firstname\\n      lastname\\n      imageUrl\\n      email\\n      phoneNumber\\n\\n      profiles {\\n        _id\\n        role {\\n          _id\\n          name\\n          code\\n          type\\n          descriptions\\n          permissions {\\n            _id\\n            code\\n            descriptions\\n          }\\n        }\\n        node {\\n          _id\\n          name\\n          descriptions\\n          createdAt\\n        }\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject8 = function _templateObject8() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!, $userId: ID!) {\\n    getDirectJoinToken(conferenceId: $conferenceId, userId: $userId)\\n  }\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  query($conferenceId: ID!) {\\n    conference(conferenceId: $conferenceId) {\\n      _id\\n      code\\n      name\\n      userCount\\n      description\\n      videoHostDefault\\n      videoParticipantDefault\\n      duration\\n      startAt\\n      password\\n\\n      createdBy {\\n        _id\\n        firstname\\n        lastname\\n      }\\n\\n      calendar {\\n        _id {\\n          conferenceId\\n          eventId\\n        }\\n        htmlLink\\n      }\\n\\n      users {\\n        user {\\n          _id\\n          username\\n          lastname\\n          firstname\\n          email\\n          imageUrl\\n        }\\n        isActive\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  query conference($conferenceId: ID!) {\\n    conference(conferenceId: $conferenceId) {\\n      _id\\n      code\\n      name\\n      password\\n      startAt\\n      description\\n      videoHostDefault\\n      videoParticipantDefault\\n      mutePolicy\\n      pinnedUser\\n      createdAt\\n      createdBy {\\n        _id\\n        username\\n        firstname\\n        lastname\\n        imageUrl\\n      }\\n      users {\\n        user {\\n          _id\\n          username\\n          firstname\\n          lastname\\n          imageUrl\\n        }\\n        role {\\n          _id\\n          permissions {\\n            _id\\n          }\\n        }\\n        status\\n        joinedAt\\n        isBanned\\n      }\\n      isLocked\\n      isRecording\\n\\n      server {\\n        hosts {\\n          domain\\n          muc\\n        }\\n        bosh\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  query($userId: ID!) {\\n    user(userId: $userId) {\\n      _id\\n      firstname\\n      lastname\\n      username\\n      email\\n      phoneNumber\\n      imageUrl\\n      createdAt\\n      personalMeetingCode\\n      profiles {\\n        _id\\n        role {\\n          _id\\n          name\\n          code\\n          type\\n          descriptions\\n          permissions {\\n            _id\\n            code\\n            descriptions\\n          }\\n        }\\n        node {\\n          _id\\n          name\\n          descriptions\\n          createdAt\\n        }\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query($inputSearch: InputSearchUser) {\\n    users(inputSearch: $inputSearch) {\\n      _id\\n      firstname\\n      lastname\\n      username\\n      email\\n      phoneNumber\\n      imageUrl\\n      createdAt\\n      profiles {\\n        _id\\n        role {\\n          _id\\n          name\\n          code\\n          type\\n          descriptions\\n          permissions {\\n            _id\\n            code\\n            descriptions\\n          }\\n        }\\n        node {\\n          _id\\n          name\\n          descriptions\\n          createdAt\\n        }\\n        value\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query($type: String, $filter: String) {\\n    conferences(type: $type, filter: $filter) {\\n      _id\\n      code\\n      name\\n      password\\n      startAt\\n      duration\\n      endAt\\n      createdBy {\\n        _id\\n        firstname\\n        lastname\\n      }\\n\\n      calendar {\\n        _id {\\n          conferenceId\\n          eventId\\n        }\\n        htmlLink\\n      }\\n\\n      users {\\n        user {\\n          _id\\n        }\\n      }\\n      userCount\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    servers {\\n      _id\\n      code\\n      name\\n      description\\n      hosts {\\n        domain\\n        muc\\n      }\\n      bosh\\n      range\\n      isActive\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from '..';\nexport var Q_SERVERS = gql(_templateObject());\nexport var Q_CONFERENCES = gql(_templateObject2());\nexport var Q_USERS = gql(_templateObject3());\nexport var Q_USER = gql(_templateObject4());\nexport var Q_CONFERENCE = gql(_templateObject5());\nexport var Q_CONFERENCE_DETAIL = gql(_templateObject6());\nexport var Q_GET_DIRECT_JOIN_TOKEN = gql(_templateObject7());\nexport var Q_CONFERENCE_MY_INFO = gql(_templateObject8());\nexport var Q_MY_INFO = gql(_templateObject9()); // NOTE: Inside\n\nexport var Q_CONFERENCE_USERS = gql(_templateObject10());\nexport var Q_CONFERENCE_ROLE = gql(_templateObject11());\nexport var Q_HAS_TIMER = gql(_templateObject12());\nexport var Q_POLLS = gql(_templateObject13());\nexport var Q_HAS_POLLING = gql(_templateObject14());\nexport var Q_UNREAD_MESSAGE = gql(_templateObject15());\nexport var Q_MESSAGE_LIST = gql(_templateObject16());\nexport var Q_MESSAGES = gql(_templateObject17());\nexport var Q_SLIDE_SHARE = gql(_templateObject18());\nexport var Q_RESOURCES = gql(_templateObject19());\nexport var Q_RECORDING_BY_CONFERENCE = gql(_templateObject20());\nexport var Q_RECORDS_PRIVATE = gql(_templateObject21());\nexport var Q_GET_RECORD = gql(_templateObject22());\nexport var Q_SEARCH_USERS = gql(_templateObject23());\nexport var Q_RESOURCE = gql(_templateObject24());\nexport var Q_DRAW = gql(_templateObject25()); // WEBINAR\n\nexport var Q_WEBINARS = gql(_templateObject26());\nexport var Q_WEBINAR_TEMPLATES = gql(_templateObject27());\nexport var Q_WEBINAR_TEMPLATE = gql(_templateObject28());\nexport var Q_WEBINAR_POLLS = gql(_templateObject29());\nexport var Q_CONFERENCE_ROLES = gql(_templateObject30());\nexport var Q_NODES_BASIC = gql(_templateObject31()); // Nodes\n\nexport var Q_NODES = gql(_templateObject32());\nexport var Q_NODE = gql(_templateObject33());\nexport var Q_INVITE_EMAIL = gql(_templateObject34());\nexport var Q_USER_EMAIL = gql(_templateObject35());\nexport var Q_GET_SETTING = gql(_templateObject36()); // NOTE: Attendances\n\nexport var Q_ATTENDANCES = gql(_templateObject37()); // NOTE: Q&A\n\nexport var Q_QNA_ACTIVE_SESSION = gql(_templateObject38());\nexport var Q_EMAIL_SETTING = gql(_templateObject39());\nexport var Q_GET_ONLINE_IN_CONFERENCE = gql(_templateObject40());\nexport var Q_ROLES = gql(_templateObject41());\nexport var Q_GET_IS_ENABLE_GOOGLE_API = gql(_templateObject42());\nexport var Q_MY_FILES = gql(_templateObject43());\nexport var Q_MY_FILES_CONFERENCE = gql(_templateObject44());\nexport var Q_ALL_FILES_CONFERENCE = gql(_templateObject45());","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/graphql/QMStrings/queries.ts"],"names":["gql","Q_SERVERS","Q_CONFERENCES","Q_USERS","Q_USER","Q_CONFERENCE","Q_CONFERENCE_DETAIL","Q_GET_DIRECT_JOIN_TOKEN","Q_CONFERENCE_MY_INFO","Q_MY_INFO","Q_CONFERENCE_USERS","Q_CONFERENCE_ROLE","Q_HAS_TIMER","Q_POLLS","Q_HAS_POLLING","Q_UNREAD_MESSAGE","Q_MESSAGE_LIST","Q_MESSAGES","Q_SLIDE_SHARE","Q_RESOURCES","Q_RECORDING_BY_CONFERENCE","Q_RECORDS_PRIVATE","Q_GET_RECORD","Q_SEARCH_USERS","Q_RESOURCE","Q_DRAW","Q_WEBINARS","Q_WEBINAR_TEMPLATES","Q_WEBINAR_TEMPLATE","Q_WEBINAR_POLLS","Q_CONFERENCE_ROLES","Q_NODES_BASIC","Q_NODES","Q_NODE","Q_INVITE_EMAIL","Q_USER_EMAIL","Q_GET_SETTING","Q_ATTENDANCES","Q_QNA_ACTIVE_SESSION","Q_EMAIL_SETTING","Q_GET_ONLINE_IN_CONFERENCE","Q_ROLES","Q_GET_IS_ENABLE_GOOGLE_API","Q_MY_FILES","Q_MY_FILES_CONFERENCE","Q_ALL_FILES_CONFERENCE"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,IAApB;AAEA,OAAO,IAAMC,SAAS,GAAGD,GAAH,mBAAf;AAkBP,OAAO,IAAME,aAAa,GAAGF,GAAH,oBAAnB;AAkCP,OAAO,IAAMG,OAAO,GAAGH,GAAH,oBAAb;AAqCP,OAAO,IAAMI,MAAM,GAAGJ,GAAH,oBAAZ;AAsCP,OAAO,IAAMK,YAAY,GAAGL,GAAH,oBAAlB;AAqDP,OAAO,IAAMM,mBAAmB,GAAGN,GAAH,oBAAzB;AA2CP,OAAO,IAAMO,uBAAuB,GAAGP,GAAH,oBAA7B;AAMP,OAAO,IAAMQ,oBAAoB,GAAGR,GAAH,oBAA1B;AAqCP,OAAO,IAAMS,SAAS,GAAGT,GAAH,oBAAf,C,CAsCP;;AAEA,OAAO,IAAMU,kBAAkB,GAAGV,GAAH,qBAAxB;AAwBP,OAAO,IAAMW,iBAAiB,GAAGX,GAAH,qBAAvB;AAWP,OAAO,IAAMY,WAAW,GAAGZ,GAAH,qBAAjB;AAaP,OAAO,IAAMa,OAAO,GAAGb,GAAH,qBAAb;AAyCP,OAAO,IAAMc,aAAa,GAAGd,GAAH,qBAAnB;AAyCP,OAAO,IAAMe,gBAAgB,GAAGf,GAAH,qBAAtB;AAMP,OAAO,IAAMgB,cAAc,GAAGhB,GAAH,qBAApB;AAmBP,OAAO,IAAMiB,UAAU,GAAGjB,GAAH,qBAAhB;AAkBP,OAAO,IAAMkB,aAAa,GAAGlB,GAAH,qBAAnB;AAgBP,OAAO,IAAMmB,WAAW,GAAGnB,GAAH,qBAAjB;AAqBP,OAAO,IAAMoB,yBAAyB,GAAGpB,GAAH,qBAA/B;AAyBP,OAAO,IAAMqB,iBAAiB,GAAGrB,GAAH,qBAAvB;AAqCP,OAAO,IAAMsB,YAAY,GAAGtB,GAAH,qBAAlB;AAoCP,OAAO,IAAMuB,cAAc,GAAGvB,GAAH,qBAApB;AAYP,OAAO,IAAMwB,UAAU,GAAGxB,GAAH,qBAAhB;AAqBP,OAAO,IAAMyB,MAAM,GAAGzB,GAAH,qBAAZ,C,CAQP;;AAEA,OAAO,IAAM0B,UAAU,GAAG1B,GAAH,qBAAhB;AAyBP,OAAO,IAAM2B,mBAAmB,GAAG3B,GAAH,qBAAzB;AAkBP,OAAO,IAAM4B,kBAAkB,GAAG5B,GAAH,qBAAxB;AAkBP,OAAO,IAAM6B,eAAe,GAAG7B,GAAH,qBAArB;AAiBP,OAAO,IAAM8B,kBAAkB,GAAG9B,GAAH,qBAAxB;AAcP,OAAO,IAAM+B,aAAa,GAAG/B,GAAH,qBAAnB,C,CASP;;AAEA,OAAO,IAAMgC,OAAO,GAAGhC,GAAH,qBAAb;AAoCP,OAAO,IAAMiC,MAAM,GAAGjC,GAAH,qBAAZ;AA0CP,OAAO,IAAMkC,cAAc,GAAGlC,GAAH,qBAApB;AAUP,OAAO,IAAMmC,YAAY,GAAGnC,GAAH,qBAAlB;AAmBP,OAAO,IAAMoC,aAAa,GAAGpC,GAAH,qBAAnB,C,CAWP;;AAEA,OAAO,IAAMqC,aAAa,GAAGrC,GAAH,qBAAnB,C,CA4BP;;AAEA,OAAO,IAAMsC,oBAAoB,GAAGtC,GAAH,qBAA1B;AAwCP,OAAO,IAAMuC,eAAe,GAAGvC,GAAH,qBAArB;AAWP,OAAO,IAAMwC,0BAA0B,GAAGxC,GAAH,qBAAhC;AAYP,OAAO,IAAMyC,OAAO,GAAGzC,GAAH,qBAAb;AAUP,OAAO,IAAM0C,0BAA0B,GAAG1C,GAAH,qBAAhC;AAMP,OAAO,IAAM2C,UAAU,GAAG3C,GAAH,qBAAhB;AAcP,OAAO,IAAM4C,qBAAqB,GAAG5C,GAAH,qBAA3B;AAiBP,OAAO,IAAM6C,sBAAsB,GAAG7C,GAAH,qBAA5B","sourcesContent":["import { gql } from '..'\n\nexport const Q_SERVERS = gql`\n  query {\n    servers {\n      _id\n      code\n      name\n      description\n      hosts {\n        domain\n        muc\n      }\n      bosh\n      range\n      isActive\n    }\n  }\n`\n\nexport const Q_CONFERENCES = gql`\n  query($type: String, $filter: String) {\n    conferences(type: $type, filter: $filter) {\n      _id\n      code\n      name\n      password\n      startAt\n      duration\n      endAt\n      createdBy {\n        _id\n        firstname\n        lastname\n      }\n\n      calendar {\n        _id {\n          conferenceId\n          eventId\n        }\n        htmlLink\n      }\n\n      users {\n        user {\n          _id\n        }\n      }\n      userCount\n    }\n  }\n`\n\nexport const Q_USERS = gql`\n  query($inputSearch: InputSearchUser) {\n    users(inputSearch: $inputSearch) {\n      _id\n      firstname\n      lastname\n      username\n      email\n      phoneNumber\n      imageUrl\n      createdAt\n      profiles {\n        _id\n        role {\n          _id\n          name\n          code\n          type\n          descriptions\n          permissions {\n            _id\n            code\n            descriptions\n          }\n        }\n        node {\n          _id\n          name\n          descriptions\n          createdAt\n        }\n        value\n      }\n    }\n  }\n`\n\nexport const Q_USER = gql`\n  query($userId: ID!) {\n    user(userId: $userId) {\n      _id\n      firstname\n      lastname\n      username\n      email\n      phoneNumber\n      imageUrl\n      createdAt\n      personalMeetingCode\n      profiles {\n        _id\n        role {\n          _id\n          name\n          code\n          type\n          descriptions\n          permissions {\n            _id\n            code\n            descriptions\n          }\n        }\n        node {\n          _id\n          name\n          descriptions\n          createdAt\n        }\n        value\n      }\n    }\n  }\n`\n\nexport const Q_CONFERENCE = gql`\n  query conference($conferenceId: ID!) {\n    conference(conferenceId: $conferenceId) {\n      _id\n      code\n      name\n      password\n      startAt\n      description\n      videoHostDefault\n      videoParticipantDefault\n      mutePolicy\n      pinnedUser\n      createdAt\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      users {\n        user {\n          _id\n          username\n          firstname\n          lastname\n          imageUrl\n        }\n        role {\n          _id\n          permissions {\n            _id\n          }\n        }\n        status\n        joinedAt\n        isBanned\n      }\n      isLocked\n      isRecording\n\n      server {\n        hosts {\n          domain\n          muc\n        }\n        bosh\n      }\n    }\n  }\n`\n\nexport const Q_CONFERENCE_DETAIL = gql`\n  query($conferenceId: ID!) {\n    conference(conferenceId: $conferenceId) {\n      _id\n      code\n      name\n      userCount\n      description\n      videoHostDefault\n      videoParticipantDefault\n      duration\n      startAt\n      password\n\n      createdBy {\n        _id\n        firstname\n        lastname\n      }\n\n      calendar {\n        _id {\n          conferenceId\n          eventId\n        }\n        htmlLink\n      }\n\n      users {\n        user {\n          _id\n          username\n          lastname\n          firstname\n          email\n          imageUrl\n        }\n        isActive\n      }\n    }\n  }\n`\n\nexport const Q_GET_DIRECT_JOIN_TOKEN = gql`\n  query($conferenceId: ID!, $userId: ID!) {\n    getDirectJoinToken(conferenceId: $conferenceId, userId: $userId)\n  }\n`\n\nexport const Q_CONFERENCE_MY_INFO = gql`\n  query {\n    myInfo {\n      _id\n      username\n      firstname\n      lastname\n      imageUrl\n      email\n      phoneNumber\n\n      profiles {\n        _id\n        role {\n          _id\n          name\n          code\n          type\n          descriptions\n          permissions {\n            _id\n            code\n            descriptions\n          }\n        }\n        node {\n          _id\n          name\n          descriptions\n          createdAt\n        }\n        value\n      }\n    }\n  }\n`\n\nexport const Q_MY_INFO = gql`\n  query {\n    myInfo {\n      _id\n      username\n      firstname\n      lastname\n      imageUrl\n      email\n      phoneNumber\n      personalMeetingCode\n\n      profiles {\n        _id\n        role {\n          _id\n          name\n          type\n          code\n          descriptions\n          permissions {\n            _id\n            code\n            descriptions\n          }\n        }\n        node {\n          _id\n          name\n          descriptions\n          createdAt\n        }\n        value\n      }\n    }\n  }\n`\n\n// NOTE: Inside\n\nexport const Q_CONFERENCE_USERS = gql`\n  query conferenceUsers($conferenceId: ID!) {\n    conferenceUsers(conferenceId: $conferenceId) {\n      user {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n        email\n        phoneNumber\n      }\n      status\n      role {\n        _id\n        permissions {\n          _id\n        }\n      }\n      joinedAt\n    }\n  }\n`\n\nexport const Q_CONFERENCE_ROLE = gql`\n  query conferenceRole($roleId: ID!) {\n    conferenceRole(roleId: $roleId) {\n      _id\n      permissions {\n        _id\n      }\n    }\n  }\n`\n\nexport const Q_HAS_TIMER = gql`\n  query hasTimer($conferenceId: ID!) {\n    hasTimer(conferenceId: $conferenceId) {\n      _id\n      amountOfTime\n      descriptions\n      startAt\n      type\n      createdBy\n    }\n  }\n`\n\nexport const Q_POLLS = gql`\n  query($conferenceId: ID!) {\n    polls(conferenceId: $conferenceId) {\n      _id\n      # conferenceId\n      question\n      duration\n      answers {\n        key\n        value\n      }\n      userVotes {\n        user {\n          _id\n          username\n          firstname\n          lastname\n          imageUrl\n        }\n        key\n      }\n      type\n      isLocked\n      isActive\n      isPublic\n      isPersonalPublic\n      canBePersonalPublic\n      isRandom\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      createdAt\n      endAt\n    }\n  }\n`\n\nexport const Q_HAS_POLLING = gql`\n  query($conferenceId: ID!) {\n    hasPolling(conferenceId: $conferenceId) {\n      _id\n      # conferenceId\n      question\n      duration\n      answers {\n        key\n        value\n      }\n      userVotes {\n        user {\n          _id\n          username\n          firstname\n          lastname\n          imageUrl\n        }\n        key\n      }\n      type\n      isLocked\n      isActive\n      isPublic\n      isPersonalPublic\n      canBePersonalPublic\n      isRandom\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      createdAt\n      endAt\n    }\n  }\n`\n\nexport const Q_UNREAD_MESSAGE = gql`\n  query unreadMessages($conferenceId: ID!) {\n    unreadMessages(conferenceId: $conferenceId)\n  }\n`\n\nexport const Q_MESSAGE_LIST = gql`\n  query messageList($conferenceId: ID!) {\n    messageList(conferenceId: $conferenceId) {\n      with {\n        _id\n        name\n        imageUrl\n      }\n      type\n      latestMessage {\n        _id\n        content\n        sentAt\n      }\n      unread\n    }\n  }\n`\n\nexport const Q_MESSAGES = gql`\n  query messages($conferenceId: ID!, $withUser: ID!, $first: Int, $offset: Int) {\n    messages(conferenceId: $conferenceId, withUser: $withUser, first: $first, offset: $offset) {\n      _id\n      sender {\n        _id\n        username\n        firstname\n        lastname\n        imageUrl\n      }\n      receiver\n      content\n      sentAt\n    }\n  }\n`\n\nexport const Q_SLIDE_SHARE = gql`\n  query hasSlideShare($conferenceId: ID!) {\n    hasSlideShare(conferenceId: $conferenceId) {\n      resources\n      _id\n      uploadedBy {\n        _id\n      }\n      partOf\n      uploadedAt\n      externalData\n      isShare\n    }\n  }\n`\n\nexport const Q_RESOURCES = gql`\n  query conferenceResource($conferenceId: ID!) {\n    conferenceResource(conferenceId: $conferenceId) {\n      resources\n      _id\n      uploadedBy {\n        _id\n      }\n      partOf\n      uploadedAt\n      externalData\n      isShare\n      isPDF\n      isSlide\n      isImage\n      filename\n      size\n    }\n  }\n`\n\nexport const Q_RECORDING_BY_CONFERENCE = gql`\n  query recordingByConference($conferenceId: String!) {\n    recordingByConference(conferenceId: $conferenceId) {\n      _id\n      name\n      conference {\n        _id\n        name\n        createdBy {\n          _id\n          username\n          firstname\n          lastname\n        }\n      }\n      url\n      state\n      createdAt\n      size\n      duration\n      lastStart\n    }\n  }\n`\n\nexport const Q_RECORDS_PRIVATE = gql`\n  query recordsPrivate($inputSearch: InputSearchRecord) {\n    recordsPrivate(inputSearch: $inputSearch) {\n      _id\n      name\n      conference {\n        _id\n        name\n        code\n        createdBy {\n          _id\n          username\n          firstname\n          lastname\n        }\n      }\n      url\n      state\n      createdAt\n      size\n      duration\n      lastStart\n      users {\n        permission\n        createdAt\n        user {\n          _id\n          username\n          firstname\n          lastname\n          email\n        }\n      }\n    }\n  }\n`\n\nexport const Q_GET_RECORD = gql`\n  query recordPrivate($recordId: String!) {\n    recordPrivate(recordId: $recordId) {\n      _id\n      name\n      conference {\n        _id\n        name\n        createdBy {\n          _id\n          username\n          firstname\n          lastname\n        }\n      }\n      url\n      state\n      createdAt\n      size\n      duration\n      lastStart\n      users {\n        permission\n        createdAt\n        user {\n          _id\n          username\n          firstname\n          lastname\n          email\n        }\n      }\n    }\n  }\n`\n\nexport const Q_SEARCH_USERS = gql`\n  query($text: String, $limit: Int) {\n    searchUsers(text: $text, limit: $limit) {\n      _id\n      username\n      firstname\n      lastname\n      email\n    }\n  }\n`\n\nexport const Q_RESOURCE = gql`\n  query resourceById($_id: ID!) {\n    resourceById(_id: $_id) {\n      resources\n      _id\n      uploadedBy {\n        _id\n      }\n      partOf\n      uploadedAt\n      externalData\n      isShare\n      isPDF\n      isSlide\n      isImage\n      filename\n      size\n    }\n  }\n`\n\nexport const Q_DRAW = gql`\n  query getDrawData($conferenceId: ID!) {\n    getDrawData(conferenceId: $conferenceId) {\n      imageUrl\n      line\n    }\n  }\n`\n// WEBINAR\n\nexport const Q_WEBINARS = gql`\n  query webinars {\n    webinars {\n      _id\n      code\n      name\n      password\n      startAt\n\n      createdBy {\n        firstname\n        lastname\n      }\n      userCount\n      hostVideo\n      panelistsVideo\n      QnA\n      startDate\n      practiceSession\n      authenticatedOnly\n      automaticallyRecord\n    }\n  }\n`\n\nexport const Q_WEBINAR_TEMPLATES = gql`\n  query webinarTemplates {\n    webinarTemplates {\n      _id\n      name\n      createdAt\n\n      mutePolicy\n      hostVideo\n      panelistsVideo\n      QnA\n      practiceSession\n      authenticatedOnly\n      automaticallyRecord\n    }\n  }\n`\n\nexport const Q_WEBINAR_TEMPLATE = gql`\n  query webinarTemplate($webinarTeamplateId: String!) {\n    webinarTemplate(webinarTeamplateId: $webinarTeamplateId) {\n      _id\n      name\n      createdAt\n\n      mutePolicy\n      hostVideo\n      panelistsVideo\n      QnA\n      practiceSession\n      authenticatedOnly\n      automaticallyRecord\n    }\n  }\n`\n\nexport const Q_WEBINAR_POLLS = gql`\n  query webinarPolls($webinarId: ID!) {\n    webinarPolls(webinarId: $webinarId) {\n      _id\n      name\n      questions {\n        question\n        type\n        answers {\n          key\n          value\n        }\n      }\n    }\n  }\n`\n\nexport const Q_CONFERENCE_ROLES = gql`\n  query conferenceRoles($conferenceId: ID!) {\n    conferenceRoles(conferenceId: $conferenceId) {\n      _id\n      name\n      description\n      permissions {\n        _id\n        description\n      }\n    }\n  }\n`\n\nexport const Q_NODES_BASIC = gql`\n  query($inputSearch: InputSearchNode) {\n    nodes(inputSearch: $inputSearch) {\n      _id\n      name\n    }\n  }\n`\n\n// Nodes\n\nexport const Q_NODES = gql`\n  query($inputSearch: InputSearchNode) {\n    nodes(inputSearch: $inputSearch) {\n      _id\n      name\n      descriptions\n      createdAt\n      createdBy {\n        _id\n        username\n      }\n      users {\n        _id\n        username\n        email\n        profiles {\n          _id\n          value\n          role {\n            type\n            _id\n            name\n            code\n            descriptions\n            permissions {\n              _id\n              code\n              descriptions\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Q_NODE = gql`\n  query($nodeId: ID!) {\n    node(nodeId: $nodeId) {\n      _id\n      name\n      descriptions\n      createdAt\n      createdBy {\n        _id\n        username\n      }\n      users {\n        _id\n        username\n        firstname\n        lastname\n        email\n        phoneNumber\n        profiles {\n          _id\n          value\n          node {\n            _id\n          }\n          role {\n            _id\n            name\n            code\n            type\n            descriptions\n            permissions {\n              _id\n              code\n              descriptions\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const Q_INVITE_EMAIL = gql`\n  query($conferenceId: ID!) {\n    getInviteEmail(conferenceId: $conferenceId) {\n      _id\n      email\n      conferenceId\n    }\n  }\n`\n\nexport const Q_USER_EMAIL = gql`\n  query($conferenceId: ID!) {\n    InviteEmail: getInviteEmail(conferenceId: $conferenceId) {\n      _id\n      email\n      conferenceId\n    }\n    UserEmail: conferenceUsers(conferenceId: $conferenceId) {\n      user {\n        _id\n        username\n        firstname\n        lastname\n        email\n      }\n    }\n  }\n`\n\nexport const Q_GET_SETTING = gql`\n  query {\n    getSetting {\n      record\n      googleAPI\n      telegramAPI\n      server\n    }\n  }\n`\n\n// NOTE: Attendances\n\nexport const Q_ATTENDANCES = gql`\n  query($conferenceId: ID!) {\n    attendances(conferenceId: $conferenceId) {\n      _id\n      # conferenceId\n      userAttendances {\n        user {\n          _id\n          username\n          firstname\n          lastname\n        }\n        createdAt\n        isAttended\n      }\n      duration\n      isActive\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n      }\n      createdAt\n    }\n  }\n`\n\n// NOTE: Q&A\n\nexport const Q_QNA_ACTIVE_SESSION = gql`\n  query($conferenceId: ID!) {\n    getActiveQNASessions(conferenceId: $conferenceId) {\n      _id\n      duration\n      isActive\n      needApproval\n      createdBy {\n        _id\n        username\n        firstname\n        lastname\n      }\n      QNA {\n        _id\n        isApproved\n        question\n        createdAt\n        isAnonymous\n        createdBy {\n          _id\n          username\n          firstname\n          lastname\n        }\n        userAnswer {\n          user {\n            _id\n            username\n            firstname\n            lastname\n          }\n          answer\n          isPrivate\n        }\n      }\n    }\n  }\n`\n\nexport const Q_EMAIL_SETTING = gql`\n  query {\n    getEmailSetting {\n      _id\n      rootEmail\n      isActive\n      deleted\n    }\n  }\n`\n\nexport const Q_GET_ONLINE_IN_CONFERENCE = gql`\n  query($conferenceCode: String!) {\n    getOnlineInConference(conferenceCode: $conferenceCode) {\n      _id\n      userId\n      conferenceId\n      createdAt\n      finishedAt\n    }\n  }\n`\n\nexport const Q_ROLES = gql`\n  query($type: EnumTypeRole) {\n    roles(type: $type) {\n      _id\n      code\n      name\n      type\n    }\n  }\n`\nexport const Q_GET_IS_ENABLE_GOOGLE_API = gql`\n  query {\n    isEnableGoogleAPI\n  }\n`\n\nexport const Q_MY_FILES = gql`\n  query($inputSearch: InputSearchFile) {\n    myFiles(inputSearch: $inputSearch) {\n      _id\n      name\n      createdBy {\n        _id\n        username\n      }\n      type\n    }\n  }\n`\n\nexport const Q_MY_FILES_CONFERENCE = gql`\n  query($conferenceId: ID!, $inputSearch: InputSearchFile) {\n    myFilesConference(conferenceId: $conferenceId, inputSearch: $inputSearch) {\n      _id\n      name\n      createdBy {\n        _id\n        username\n      }\n      type\n      isShare\n      isPresentation\n      size\n      path\n    }\n  }\n`\nexport const Q_ALL_FILES_CONFERENCE = gql`\n  query($conferenceId: ID!, $inputSearch: InputSearchFile) {\n    allFilesConference(conferenceId: $conferenceId, inputSearch: $inputSearch) {\n      _id\n      name\n      createdBy {\n        _id\n        username\n      }\n      type\n      isShare\n      isPresentation\n      size\n      path\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}