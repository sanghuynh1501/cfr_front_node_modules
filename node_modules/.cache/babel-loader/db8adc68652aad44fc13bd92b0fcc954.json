{"ast":null,"code":"import \"antd/es/modal/style\";\nimport _Modal from \"antd/es/modal\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/recordings/ModalSettingRecord.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport client, { M_UPDATE_SETTING, Q_GET_SETTING } from '@graphql';\nimport { newNotification, parseError } from '@utils';\nvar servers = [{\n  name: 'jibri1',\n  value: 'http://192.168.88.71:5000'\n}, {\n  name: 'bot1',\n  value: 'http://192.168.88.121:5000'\n}, {\n  name: 'bot2',\n  value: 'http://192.168.88.122:5000'\n}];\n\nvar ModalSettingRecord = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ModalSettingRecord, _React$PureComponent);\n\n  var _super = _createSuper(ModalSettingRecord);\n\n  function ModalSettingRecord(props) {\n    var _this;\n\n    _classCallCheck(this, ModalSettingRecord);\n\n    _this = _super.call(this, props);\n\n    _this.querySetting = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        }).then(function (_ref) {\n          var data = _ref.data;\n          resolve(data.getSetting);\n        }).catch(function (err) {\n          newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n          resolve(null);\n        });\n      });\n    };\n\n    _this.componentDidMount = function () {\n      _this.props.setRef(_this.showModal);\n    };\n\n    _this.showModal = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var setting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _this.querySetting();\n\n            case 3:\n              setting = _context.sent;\n\n              _this.setState({\n                visible: true,\n                setting: (setting === null || setting === void 0 ? void 0 : setting.record) ? JSON.parse(setting.record) : {}\n              });\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    _this.handleUpdateSetting = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.props.form.validateFields(function (err, values) {\n                  if (!err) {\n                    var linkBackend = values.linkBackend,\n                        linkPublicFile = values.linkPublicFile;\n                    var dataRecord = JSON.stringify({\n                      servers: linkBackend,\n                      linkPublicFile: linkPublicFile\n                    });\n                    client.mutate({\n                      mutation: M_UPDATE_SETTING,\n                      variables: {\n                        input: {\n                          record: dataRecord\n                        }\n                      }\n                    }).then(function (_ref4) {\n                      var data = _ref4.data;\n\n                      if (!data.updateSetting) {\n                        throw new Error('Cập nhật cấu hình thất bại.');\n                      }\n\n                      newNotification('Cập nhật cấu hình thành công.', 'success');\n\n                      _this.handleCloseModal();\n                    }).catch(function (err) {\n                      newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n                    });\n                  }\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    _this.handleCloseModal = function (e) {\n      _this.setState({\n        visible: false\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          setting: null\n        });\n      }, 200);\n    };\n\n    _this.state = {\n      visible: false,\n      setting: null\n    };\n    return _this;\n  }\n\n  _createClass(ModalSettingRecord, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var _this$state = this.state,\n          visible = _this$state.visible,\n          setting = _this$state.setting;\n      return /*#__PURE__*/React.createElement(_Modal, {\n        title: \"Setting record\",\n        visible: visible,\n        onOk: this.handleUpdateSetting,\n        onCancel: this.handleCloseModal,\n        centered: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 7\n        }\n      }, setting && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Link public files\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('linkPublicFile', {\n        initialValue: setting === null || setting === void 0 ? void 0 : setting.linkPublicFile,\n        rules: [{\n          required: true,\n          message: 'Vui lòng nhập đường dẫn công khai video record!'\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 18\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: \"Backend URL\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      }, getFieldDecorator('linkBackend', {\n        initialValue: setting === null || setting === void 0 ? void 0 : setting.servers\n      })( /*#__PURE__*/React.createElement(_Select, {\n        mode: \"tags\",\n        style: {\n          width: '100%'\n        },\n        placeholder: \"Link servers backend record\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }\n      }, servers.map(function (server) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          value: server.value,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }\n        }, server.name);\n      }))))));\n    }\n  }]);\n\n  return ModalSettingRecord;\n}(React.PureComponent);\n\nexport default withTranslation()(_Form.create({\n  name: 'updateSettingRecord'\n})(ModalSettingRecord));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/recordings/ModalSettingRecord.jsx"],"names":["React","withTranslation","client","M_UPDATE_SETTING","Q_GET_SETTING","newNotification","parseError","servers","name","value","ModalSettingRecord","props","querySetting","Promise","resolve","reject","query","fetchPolicy","then","data","getSetting","catch","err","i18n","t","componentDidMount","setRef","showModal","setting","setState","visible","record","JSON","parse","console","log","handleUpdateSetting","e","preventDefault","form","validateFields","values","linkBackend","linkPublicFile","dataRecord","stringify","mutate","mutation","variables","input","updateSetting","Error","handleCloseModal","setTimeout","state","getFieldDecorator","initialValue","rules","required","message","width","map","server","PureComponent","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Modal, Form, Input, Select } from 'antd'\nimport { withTranslation } from 'react-i18next'\nimport client, { M_UPDATE_SETTING, Q_GET_SETTING } from '@graphql'\nimport { newNotification, parseError } from '@utils'\n\n\nconst servers = [\n  {\n    name: 'jibri1',\n    value: 'http://192.168.88.71:5000'\n  },\n  {\n    name: 'bot1',\n    value: 'http://192.168.88.121:5000'\n  },\n  {\n    name: 'bot2',\n    value: 'http://192.168.88.122:5000'\n  }\n]\nclass ModalSettingRecord extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      visible: false,\n      setting: null\n    }\n  }\n\n  querySetting = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        })\n        .then(({ data }) => {\n          resolve(data.getSetting)\n        })\n        .catch(err => {\n          newNotification(this.props.i18n.t(parseError(err)), 'danger')\n          resolve(null)\n        })\n    })\n  }\n\n  componentDidMount = () => {\n    this.props.setRef(this.showModal)\n  }\n\n  showModal = async () => {\n    try {\n      const setting = await this.querySetting()\n      this.setState({\n        visible: true,\n        setting: (setting?.record) ? JSON.parse(setting.record) : {}\n      })\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  handleUpdateSetting = async e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        const { linkBackend, linkPublicFile } = values\n        const dataRecord = JSON.stringify({\n          servers: linkBackend,\n          linkPublicFile\n        })\n\n        client\n          .mutate({\n            mutation: M_UPDATE_SETTING,\n            variables: {\n              input: {\n                record: dataRecord\n              }\n            }\n          })\n          .then(({ data }) => {\n            if (!data.updateSetting) {\n              throw new Error('Cập nhật cấu hình thất bại.')\n            }\n            newNotification('Cập nhật cấu hình thành công.', 'success')\n            this.handleCloseModal()\n          })\n          .catch(err => {\n            newNotification(this.props.i18n.t(parseError(err)), 'danger')\n          })\n      }\n    })\n  }\n\n  handleCloseModal = e => {\n    this.setState({\n      visible: false\n    })\n    setTimeout(() => {\n      this.setState({\n        setting: null\n      })\n    }, 200)\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    const { visible, setting } = this.state\n    return (\n      <Modal\n        title='Setting record'\n        visible={visible}\n        onOk={this.handleUpdateSetting}\n        onCancel={this.handleCloseModal}\n        centered\n      >\n        {setting && (\n          <>\n            <Form.Item label='Link public files'>\n              {getFieldDecorator('linkPublicFile', {\n                initialValue: setting?.linkPublicFile,\n                rules: [\n                  {\n                    required: true,\n                    message: 'Vui lòng nhập đường dẫn công khai video record!'\n                  }\n                ]\n              })(<Input />)}\n            </Form.Item>\n\n            <Form.Item label='Backend URL'>\n              {getFieldDecorator('linkBackend', {\n                initialValue: setting?.servers\n              })(<Select mode='tags' style={{ width: '100%' }} placeholder='Link servers backend record'>\n                {servers.map(server => (\n                  <Select.Option value={server.value}>{server.name}</Select.Option>\n                ))}\n              </Select>)}\n            </Form.Item>\n          </>\n        )}\n      </Modal>\n    )\n  }\n}\n\nexport default withTranslation()(Form.create({ name: 'updateSettingRecord' })(ModalSettingRecord))\n"]},"metadata":{},"sourceType":"module"}