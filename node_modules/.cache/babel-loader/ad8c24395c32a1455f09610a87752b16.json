{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/login/FormLogin.jsx\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter, Link } from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport './FormLogin.less';\nimport { client, M_LOGIN } from '@graphql';\nimport { returnError, newNotification, parseError } from '@utils';\nimport ButtonLoginGoogle from '@components/ButtonLoginGoogle';\nvar LoginForm = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), withRouter(_class = _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(LoginForm, _React$Component);\n\n  var _super = _createSuper(LoginForm);\n\n  function LoginForm() {\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleSubmit = function (e) {\n      var _this$props = _this.props,\n          globalState = _this$props.globalState,\n          history = _this$props.history;\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          // MUTATION: login\n          var username = values.username,\n              password = values.password;\n          client.mutate({\n            mutation: M_LOGIN,\n            variables: {\n              loginInput: {\n                username: username,\n                password: password\n              }\n            }\n          }).then(function (_ref2) {\n            var login = _ref2.data.login;\n\n            if (login && login.token) {\n              globalState.auth(login.token);\n\n              if (globalState.redirectTo) {\n                var target = globalState.redirectTo;\n                globalState.setRedirectTo(null);\n                return history.push(target);\n              } else {\n                return history.push('/');\n              }\n            }\n\n            return newNotification(_this.props.i18n.t('loginError'), 'danger', {\n              container: 'top-right'\n            });\n          }).catch(function (errors) {\n            returnError('Error', {\n              errorMessage: _this.props.i18n.t(parseError(errors))\n            }, {\n              container: 'top-right'\n            });\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          getFieldDecorator = _this$props2.form.getFieldDecorator,\n          i18n = _this$props2.i18n;\n      return /*#__PURE__*/React.createElement(_Form, {\n        onSubmit: this.handleSubmit,\n        className: \"login-form\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, i18n.t('login.signIn')), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('login.username/email'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('username', {\n        rules: [{\n          required: true,\n          message: i18n.t('require.requireUsername')\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        prefix: /*#__PURE__*/React.createElement(_Icon, {\n          type: \"user\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 23\n          }\n        }),\n        style: {\n          border: 0\n        },\n        placeholder: i18n.t('login.username/email'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        label: i18n.t('common.password'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, getFieldDecorator('password', {\n        rules: [{\n          required: true,\n          message: i18n.t('require.requirePassword')\n        }]\n      })( /*#__PURE__*/React.createElement(_Input, {\n        prefix: /*#__PURE__*/React.createElement(_Icon, {\n          type: \"lock\",\n          style: {\n            color: 'rgba(0,0,0,.25)'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 23\n          }\n        }),\n        style: {\n          border: 0\n        },\n        type: \"password\",\n        placeholder: i18n.t('common.password'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(_Form.Item, {\n        className: \"wrapper-forgot\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        className: \"login-form-forgot\",\n        to: \"/forgot_password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, i18n.t('login.forgotPassword')), getFieldDecorator('remember', {\n        valuePropName: 'checked',\n        initialValue: true\n      })( /*#__PURE__*/React.createElement(_Checkbox, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 14\n        }\n      }, i18n.t('login.stayLogin')))), /*#__PURE__*/React.createElement(_Form.Item, {\n        style: {\n          marginBottom: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        className: \"login-form-button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }, i18n.t('login.signIn'))), this.props.globalState.isGoogleAPI && /*#__PURE__*/React.createElement(ButtonLoginGoogle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-sign-up\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, i18n.t('login.textSignUp'), \" \", /*#__PURE__*/React.createElement(Link, {\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 40\n        }\n      }, i18n.t('login.here')), \".\"));\n    }\n  }]);\n\n  return LoginForm;\n}(React.Component), _temp)) || _class) || _class) || _class);\nexport default _Form.create()(withTranslation()(LoginForm));","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/login/FormLogin.jsx"],"names":["React","withTranslation","withRouter","Link","inject","observer","client","M_LOGIN","returnError","newNotification","parseError","ButtonLoginGoogle","LoginForm","stores","handleSubmit","e","props","globalState","history","preventDefault","form","validateFields","err","values","username","password","mutate","mutation","variables","loginInput","then","login","data","token","auth","redirectTo","target","setRedirectTo","push","i18n","t","container","catch","errors","errorMessage","getFieldDecorator","rules","required","message","color","border","valuePropName","initialValue","marginBottom","isGoogleAPI","Component","create"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\nimport { inject, observer } from 'mobx-react'\nimport './FormLogin.less'\n\nimport { client, M_LOGIN } from '@graphql'\nimport { returnError, newNotification, parseError } from '@utils'\nimport ButtonLoginGoogle from '@components/ButtonLoginGoogle'\n\n@withRouter\n@inject(({ stores }) => stores)\n@observer\nclass LoginForm extends React.Component {\n  handleSubmit = e => {\n    const { globalState, history } = this.props\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        // MUTATION: login\n        const { username, password } = values\n        client\n          .mutate({\n            mutation: M_LOGIN,\n            variables: {\n              loginInput: {\n                username,\n                password\n              }\n            }\n          })\n          .then(({ data: { login } }) => {\n            if (login && login.token) {\n              globalState.auth(login.token)\n              if (globalState.redirectTo) {\n                const target = globalState.redirectTo\n                globalState.setRedirectTo(null)\n                return history.push(target)\n              } else {\n                return history.push('/')\n              }\n            }\n            return newNotification(this.props.i18n.t('loginError'), 'danger', {\n              container: 'top-right'\n            })\n          })\n          .catch(errors => {\n            returnError(\n              'Error',\n              { errorMessage: this.props.i18n.t(parseError(errors)) },\n              { container: 'top-right' }\n            )\n          })\n      }\n    })\n  }\n\n  render() {\n    const {\n      form: { getFieldDecorator },\n      i18n\n    } = this.props\n    return (\n      <Form onSubmit={this.handleSubmit} className='login-form'>\n        <h1>{i18n.t('login.signIn')}</h1>\n        <Form.Item label={i18n.t('login.username/email')}>\n          {getFieldDecorator('username', {\n            rules: [{ required: true, message: i18n.t('require.requireUsername') }]\n          })(\n            <Input\n              prefix={<Icon type='user' style={{ color: 'rgba(0,0,0,.25)' }} />}\n              style={{ border: 0 }}\n              placeholder={i18n.t('login.username/email')}\n            />\n          )}\n        </Form.Item>\n        <Form.Item label={i18n.t('common.password')}>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: i18n.t('require.requirePassword') }]\n          })(\n            <Input\n              prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n              style={{ border: 0 }}\n              type='password'\n              placeholder={i18n.t('common.password')}\n            />\n          )}\n        </Form.Item>\n        <Form.Item className='wrapper-forgot'>\n          <Link className='login-form-forgot' to='/forgot_password'>\n            {i18n.t('login.forgotPassword')}\n          </Link>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true\n          })(<Checkbox>{i18n.t('login.stayLogin')}</Checkbox>)}\n        </Form.Item>\n        <Form.Item style={{ marginBottom: '20px' }}>\n          <Button\n            type='primary'\n            htmlType='submit'\n            className='login-form-button'\n          >\n            {i18n.t('login.signIn')}\n          </Button>\n        </Form.Item>\n\n        {this.props.globalState.isGoogleAPI && (\n          <ButtonLoginGoogle />\n        )}\n\n        <p className='text-sign-up'>\n          {i18n.t('login.textSignUp')} <Link to='/signup'>{i18n.t('login.here')}</Link>.\n        </p>\n      </Form>\n    )\n  }\n}\n\nexport default Form.create()(withTranslation()(LoginForm))\n"]},"metadata":{},"sourceType":"module"}