{"ast":null,"code":"import \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport _objectSpread from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport \"antd/es/popconfirm/style\";\nimport _Popconfirm from \"antd/es/popconfirm\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/radio/style\";\nimport _Radio from \"antd/es/radio\";\nimport _objectWithoutProperties from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/dashboard/settings/ServerSetting/index.jsx\";\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { client, Q_SERVERS, M_UPDATE_SERVER, M_DELETE_SERVER, Q_GET_SETTING, M_UPDATE_SETTING } from '@graphql';\nimport EditableCell from './EditableCell';\nimport ModalAddServer from './AddServer';\nimport './table.less';\nimport { returnError, newNotification, parseError } from '@utils';\n\nvar ServerSetting = /*#__PURE__*/function (_React$Component) {\n  _inherits(ServerSetting, _React$Component);\n\n  var _super = _createSuper(ServerSetting);\n\n  function ServerSetting(props) {\n    var _this;\n\n    _classCallCheck(this, ServerSetting);\n\n    _this = _super.call(this, props);\n\n    _this.querySetting = function () {\n      return new Promise(function (resolve, reject) {\n        client.query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        }).then(function (_ref) {\n          var data = _ref.data;\n          resolve(data.getSetting);\n        }).catch(function (err) {\n          newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n          resolve(null);\n        });\n      });\n    };\n\n    _this.refetchData = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var setting, obj;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.querySetting();\n\n            case 2:\n              setting = _context.sent;\n              obj = (setting === null || setting === void 0 ? void 0 : setting.server) ? JSON.parse(setting.server) : {};\n\n              _this.setState({\n                defaultServer: obj === null || obj === void 0 ? void 0 : obj.defaultServer\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.componentDidMount = function () {\n      _this.refetchData();\n\n      _this.queryServers();\n    };\n\n    _this.queryServers = function () {\n      client.query({\n        query: Q_SERVERS,\n        fetchPolicy: 'network-only'\n      }).then(function (_ref3) {\n        var servers = _ref3.data.servers;\n\n        _this.setState({\n          servers: servers\n        });\n      }).catch(function (error) {\n        returnError('queryServers', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.queryServersError')\n        });\n      });\n    };\n\n    _this.mutationUpdateServer = function (_ref4) {\n      var _id = _ref4._id,\n          rest = _objectWithoutProperties(_ref4, [\"_id\"]);\n\n      return client.mutate({\n        mutation: M_UPDATE_SERVER,\n        variables: {\n          serverId: _id,\n          update: rest\n        }\n      }).then(function (_ref5) {\n        var updateServer = _ref5.data.updateServer;\n        if (updateServer) newNotification(_this.props.i18n.t('notification.updateServerSuccess'), 'success');\n      }).catch(function (error) {\n        returnError('updateServer', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.updateServerError')\n        });\n      });\n    };\n\n    _this.mutationDeleteServer = function (_ref6) {\n      var _id = _ref6._id;\n      return client.mutate({\n        mutation: M_DELETE_SERVER,\n        variables: {\n          serverId: _id\n        }\n      }).then(function (_ref7) {\n        var deleteServer = _ref7.data.deleteServer;\n        if (deleteServer) newNotification(_this.props.i18n.t('notification.deleteServerSuccess'), 'success');\n      }).catch(function (error) {\n        returnError('deleteServer', {\n          error: error,\n          errorMessage: _this.props.i18n.t('notification.deleteServerError')\n        });\n      });\n    };\n\n    _this.onChangeRadio = function (record) {\n      delete record.__typename;\n      delete record.hosts.__typename;\n\n      _this.mutationUpdateServer({\n        _id: record._id,\n        isActive: !record.isActive\n      }).then(function () {\n        _this.queryServers();\n      });\n    };\n\n    _this.handleSave = function (row) {\n      delete row.__typename;\n      delete row.hosts.__typename;\n\n      _this.mutationUpdateServer(row).then(function () {\n        _this.queryServers();\n      });\n    };\n\n    _this.handleUpdateSetting = /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                data = JSON.stringify({\n                  defaultServer: value\n                });\n                client.mutate({\n                  mutation: M_UPDATE_SETTING,\n                  variables: {\n                    input: {\n                      server: data\n                    }\n                  }\n                }).then(function (_ref9) {\n                  var data = _ref9.data;\n\n                  if (!data.updateSetting) {\n                    throw new Error('Cập nhật cấu hình thất bại.');\n                  }\n\n                  newNotification('Cập nhật cấu hình thành công.', 'success');\n\n                  _this.refetchData();\n                }).catch(function (err) {\n                  newNotification(_this.props.i18n.t(parseError(err)), 'danger');\n                });\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSaveDefaultServer = function (row) {\n      var defaultServer = {\n        code: row.code,\n        name: row.name,\n        bosh: row.bosh,\n        hosts: {\n          domain: row.domain,\n          muc: row.muc\n        }\n      };\n\n      _this.handleUpdateSetting(defaultServer);\n    };\n\n    _this.onClickDelete = function (record) {\n      _this.mutationDeleteServer(record).then(function () {\n        _this.queryServers();\n      });\n    };\n\n    _this.state = {\n      servers: [],\n      defaultServer: {}\n    };\n    _this.columns = [{\n      title: _this.props.i18n.t('setting.code'),\n      dataIndex: 'code',\n      width: '12%',\n      editable: true\n    }, {\n      title: _this.props.i18n.t('setting.name'),\n      dataIndex: 'name',\n      width: '12%',\n      editable: true\n    }, {\n      title: _this.props.i18n.t('setting.domain'),\n      dataIndex: 'hosts.domain',\n      key: 'number',\n      width: '10%',\n      editable: true\n    }, {\n      title: 'Muc',\n      dataIndex: 'hosts.muc',\n      key: 'xnumber',\n      width: '15%',\n      editable: true\n    }, {\n      title: 'Bosh',\n      dataIndex: 'bosh',\n      width: '19%',\n      editable: true\n    }, {\n      title: 'Weight From',\n      key: 'rangex',\n      dataIndex: 'range[0]',\n      width: '8%',\n      editable: true\n    }, {\n      title: 'Weight To',\n      key: 'rangey',\n      dataIndex: 'range[1]',\n      width: '8%',\n      editable: true\n    }, {\n      title: _this.props.i18n.t('setting.active'),\n      dataIndex: 'isActive',\n      width: '6%',\n      render: function render(_text, record) {\n        return /*#__PURE__*/React.createElement(_Radio, {\n          checked: record.isActive,\n          onClick: function onClick() {\n            return _this.onChangeRadio(record);\n          },\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 36\n          }\n        });\n      }\n    }, {\n      title: 'Operation',\n      dataIndex: '_',\n      width: '10%',\n      render: function render(_text, record) {\n        return /*#__PURE__*/React.createElement(_Popconfirm, {\n          title: _this.props.i18n.t('setting.titleDelete'),\n          onConfirm: function onConfirm() {\n            return _this.onClickDelete(record);\n          },\n          onCancel: function onCancel() {},\n          okText: _this.props.i18n.t('common.yes'),\n          cancelText: _this.props.i18n.t('common.no'),\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(_Button, {\n          type: \"danger\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, _this.props.i18n.t('common.delete')));\n      }\n    }];\n    _this.columnsDefaultServer = [{\n      title: _this.props.i18n.t('setting.code'),\n      dataIndex: 'code',\n      width: '12%',\n      editable: true\n    }, {\n      title: _this.props.i18n.t('setting.name'),\n      dataIndex: 'name',\n      width: '12%',\n      editable: true\n    }, {\n      title: _this.props.i18n.t('setting.domain'),\n      dataIndex: 'domain',\n      key: 'number',\n      width: '10%',\n      editable: true\n    }, {\n      title: 'Muc',\n      dataIndex: 'muc',\n      key: 'xnumber',\n      width: '15%',\n      editable: true\n    }, {\n      title: 'Bosh',\n      dataIndex: 'bosh',\n      width: '19%',\n      editable: true\n    }];\n    return _this;\n  }\n\n  _createClass(ServerSetting, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var columns = this.columns.map(function (col) {\n        if (!col.editable) return col;\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSave\n            };\n          }\n        });\n      });\n      var columnsDefaultServer = this.columnsDefaultServer.map(function (col) {\n        if (!col.editable) return col;\n        return _objectSpread({}, col, {\n          onCell: function onCell(record) {\n            return {\n              record: record,\n              editable: col.editable,\n              dataIndex: col.dataIndex,\n              title: col.title,\n              handleSave: _this2.handleSaveDefaultServer\n            };\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginBottom: 10,\n          fontWeight: 600\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 9\n        }\n      }, \"Default Server\"), /*#__PURE__*/React.createElement(_Table, {\n        components: {\n          body: {\n            cell: EditableCell\n          }\n        },\n        rowClassName: function rowClassName() {\n          return 'editable-row';\n        },\n        bordered: true,\n        columns: columnsDefaultServer,\n        rowKey: \"code\",\n        dataSource: [this.state.defaultServer].map(function (obj) {\n          var _obj$hosts, _obj$hosts2;\n\n          return _objectSpread({}, obj, {\n            domain: obj === null || obj === void 0 ? void 0 : (_obj$hosts = obj.hosts) === null || _obj$hosts === void 0 ? void 0 : _obj$hosts.domain,\n            muc: obj === null || obj === void 0 ? void 0 : (_obj$hosts2 = obj.hosts) === null || _obj$hosts2 === void 0 ? void 0 : _obj$hosts2.muc\n          });\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(ModalAddServer, {\n        queryServer: this.queryServers,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(_Table, {\n        components: {\n          body: {\n            cell: EditableCell\n          }\n        },\n        rowClassName: function rowClassName() {\n          return 'editable-row';\n        },\n        bordered: true,\n        dataSource: this.state.servers,\n        columns: columns,\n        rowKey: \"code\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ServerSetting;\n}(React.Component);\n\nexport default withTranslation()(ServerSetting);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/dashboard/settings/ServerSetting/index.jsx"],"names":["React","withTranslation","client","Q_SERVERS","M_UPDATE_SERVER","M_DELETE_SERVER","Q_GET_SETTING","M_UPDATE_SETTING","EditableCell","ModalAddServer","returnError","newNotification","parseError","ServerSetting","props","querySetting","Promise","resolve","reject","query","fetchPolicy","then","data","getSetting","catch","err","i18n","t","refetchData","setting","obj","server","JSON","parse","setState","defaultServer","componentDidMount","queryServers","servers","error","errorMessage","mutationUpdateServer","_id","rest","mutate","mutation","variables","serverId","update","updateServer","mutationDeleteServer","deleteServer","onChangeRadio","record","__typename","hosts","isActive","handleSave","row","handleUpdateSetting","value","stringify","input","updateSetting","Error","handleSaveDefaultServer","code","name","bosh","domain","muc","onClickDelete","state","columns","title","dataIndex","width","editable","key","render","_text","columnsDefaultServer","map","col","onCell","marginBottom","fontWeight","body","cell","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { withTranslation } from 'react-i18next'\nimport { Table, Radio, Button, Popconfirm } from 'antd'\n\nimport { client, Q_SERVERS, M_UPDATE_SERVER, M_DELETE_SERVER, Q_GET_SETTING, M_UPDATE_SETTING } from '@graphql'\nimport EditableCell from './EditableCell'\nimport ModalAddServer from './AddServer'\n\nimport './table.less'\nimport { returnError, newNotification, parseError } from '@utils'\n\nclass ServerSetting extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { servers: [], defaultServer: {} }\n\n    this.columns = [\n      {\n        title: this.props.i18n.t('setting.code'),\n        dataIndex: 'code',\n        width: '12%',\n        editable: true\n      },\n      {\n        title: this.props.i18n.t('setting.name'),\n        dataIndex: 'name',\n        width: '12%',\n        editable: true\n      },\n      {\n        title: this.props.i18n.t('setting.domain'),\n        dataIndex: 'hosts.domain',\n        key: 'number',\n        width: '10%',\n        editable: true\n      },\n      {\n        title: 'Muc',\n        dataIndex: 'hosts.muc',\n        key: 'xnumber',\n        width: '15%',\n        editable: true\n      },\n      {\n        title: 'Bosh',\n        dataIndex: 'bosh',\n        width: '19%',\n        editable: true\n      },\n      {\n        title: 'Weight From',\n        key: 'rangex',\n        dataIndex: 'range[0]',\n        width: '8%',\n        editable: true\n      },\n      {\n        title: 'Weight To',\n        key: 'rangey',\n        dataIndex: 'range[1]',\n        width: '8%',\n        editable: true\n      },\n      {\n        title: this.props.i18n.t('setting.active'),\n        dataIndex: 'isActive',\n        width: '6%',\n        render: (_text, record) => <Radio checked={record.isActive} onClick={() => this.onChangeRadio(record)} />\n      },\n      {\n        title: 'Operation',\n        dataIndex: '_',\n        width: '10%',\n        render: (_text, record) => (\n          <Popconfirm\n            title={this.props.i18n.t('setting.titleDelete')}\n            onConfirm={() => this.onClickDelete(record)}\n            onCancel={() => { }}\n            okText={this.props.i18n.t('common.yes')}\n            cancelText={this.props.i18n.t('common.no')}\n          >\n            <Button type='danger'>{this.props.i18n.t('common.delete')}</Button>\n          </Popconfirm>\n        )\n      }\n    ]\n\n\n\n    this.columnsDefaultServer = [\n      {\n        title: this.props.i18n.t('setting.code'),\n        dataIndex: 'code',\n        width: '12%',\n        editable: true\n      },\n      {\n        title: this.props.i18n.t('setting.name'),\n        dataIndex: 'name',\n        width: '12%',\n        editable: true\n      },\n      {\n        title: this.props.i18n.t('setting.domain'),\n        dataIndex: 'domain',\n        key: 'number',\n        width: '10%',\n        editable: true,\n      },\n      {\n        title: 'Muc',\n        dataIndex: 'muc',\n        key: 'xnumber',\n        width: '15%',\n        editable: true\n      },\n      {\n        title: 'Bosh',\n        dataIndex: 'bosh',\n        width: '19%',\n        editable: true\n      }\n    ]\n  }\n\n\n  querySetting = () => {\n    return new Promise((resolve, reject) => {\n      client\n        .query({\n          query: Q_GET_SETTING,\n          fetchPolicy: 'network-only'\n        })\n        .then(({ data }) => {\n          resolve(data.getSetting)\n        })\n        .catch(err => {\n          newNotification(this.props.i18n.t(parseError(err)), 'danger')\n          resolve(null)\n        })\n    })\n  }\n\n\n\n  refetchData = async () => {\n    const setting = await this.querySetting()\n    const obj = (setting?.server) ? JSON.parse(setting.server) : {}\n    this.setState({ defaultServer: obj?.defaultServer })\n  }\n\n  componentDidMount = () => {\n    this.refetchData()\n    this.queryServers()\n  }\n\n  queryServers = () => {\n    client\n      .query({\n        query: Q_SERVERS,\n        fetchPolicy: 'network-only'\n      })\n      .then(({ data: { servers } }) => {\n        this.setState({ servers })\n      })\n      .catch(error => {\n        returnError('queryServers', { error, errorMessage: this.props.i18n.t('notification.queryServersError') })\n      })\n  }\n\n  mutationUpdateServer = ({ _id, ...rest }) =>\n    client\n      .mutate({\n        mutation: M_UPDATE_SERVER,\n        variables: {\n          serverId: _id,\n          update: rest\n        }\n      })\n      .then(({ data: { updateServer } }) => {\n        if (updateServer) newNotification(this.props.i18n.t('notification.updateServerSuccess'), 'success')\n      })\n      .catch(error => {\n        returnError('updateServer', { error, errorMessage: this.props.i18n.t('notification.updateServerError') })\n      })\n\n  mutationDeleteServer = ({ _id }) =>\n    client\n      .mutate({\n        mutation: M_DELETE_SERVER,\n        variables: {\n          serverId: _id\n        }\n      })\n      .then(({ data: { deleteServer } }) => {\n        if (deleteServer) newNotification(this.props.i18n.t('notification.deleteServerSuccess'), 'success')\n      })\n      .catch(error => {\n        returnError('deleteServer', { error, errorMessage: this.props.i18n.t('notification.deleteServerError') })\n      })\n\n  onChangeRadio = record => {\n    delete record.__typename\n    delete record.hosts.__typename\n    this.mutationUpdateServer({ _id: record._id, isActive: !record.isActive }).then(() => {\n      this.queryServers()\n    })\n  }\n\n  handleSave = row => {\n    delete row.__typename\n    delete row.hosts.__typename\n    this.mutationUpdateServer(row).then(() => {\n      this.queryServers()\n    })\n  }\n\n\n  handleUpdateSetting = async value => {\n    const data = JSON.stringify({\n      defaultServer: value\n    })\n\n    client\n      .mutate({\n        mutation: M_UPDATE_SETTING,\n        variables: {\n          input: {\n            server: data\n          }\n        }\n      })\n      .then(({ data }) => {\n        if (!data.updateSetting) {\n          throw new Error('Cập nhật cấu hình thất bại.')\n        }\n        newNotification('Cập nhật cấu hình thành công.', 'success')\n        this.refetchData()\n      })\n      .catch(err => {\n        newNotification(this.props.i18n.t(parseError(err)), 'danger')\n      })\n\n  }\n\n\n\n  handleSaveDefaultServer = row => {\n    const defaultServer = {\n      code: row.code,\n      name: row.name,\n      bosh: row.bosh,\n      hosts: {\n        domain: row.domain,\n        muc: row.muc\n      }\n    }\n\n    this.handleUpdateSetting(defaultServer)\n  }\n\n  onClickDelete = record => {\n    this.mutationDeleteServer(record).then(() => {\n      this.queryServers()\n    })\n  }\n\n  render() {\n    const columns = this.columns.map(col => {\n      if (!col.editable) return col\n\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSave\n        })\n      }\n    })\n\n\n    const columnsDefaultServer = this.columnsDefaultServer.map(col => {\n      if (!col.editable) return col\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          editable: col.editable,\n          dataIndex: col.dataIndex,\n          title: col.title,\n          handleSave: this.handleSaveDefaultServer\n        })\n      }\n    })\n\n    return (\n      <>\n        <div style={{ marginBottom: 10, fontWeight: 600 }}>Default Server</div>\n        <Table\n          components={{ body: { cell: EditableCell } }}\n          rowClassName={() => 'editable-row'}\n          bordered\n          columns={columnsDefaultServer}\n          rowKey='code'\n          dataSource={[this.state.defaultServer].map(obj => ({\n            ...obj,\n            domain: obj?.hosts?.domain,\n            muc: obj?.hosts?.muc,\n          }))}\n        />\n\n        <ModalAddServer queryServer={this.queryServers} />\n        <Table\n          components={{ body: { cell: EditableCell } }}\n          rowClassName={() => 'editable-row'}\n          bordered\n          dataSource={this.state.servers}\n          columns={columns}\n          rowKey='code'\n        />\n      </>\n    )\n  }\n}\n\nexport default withTranslation()(ServerSetting)\n"]},"metadata":{},"sourceType":"module"}