{"ast":null,"code":"import _defineProperty from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/resetPassword/index.js\";\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nimport './index.less';\nimport FormResetPassword from './FormResetPassword';\nimport { client, M_CONFIRM_RESET_PASSWORD, M_RESET_PASSWORD_NOT_LOGIN } from '@graphql';\nimport logo from \"@misc/logo/asset9.svg\";\nimport errorIcon from \"@misc/images/toolbar/error.svg\";\nvar STATUS = {\n  INPUT: \"INPUT\",\n  SENDING: \"SENDING\",\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\"\n};\n\nvar ResetPassowrd = withRouter(_class = (_temp = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(ResetPassowrd, _React$PureComponent);\n\n  var _super = _createSuper(ResetPassowrd);\n\n  function ResetPassowrd() {\n    var _this;\n\n    _classCallCheck(this, ResetPassowrd);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      status: STATUS.INPUT,\n      name: ''\n    };\n\n    _this.handleConfirmToken = function () {\n      client.mutate({\n        mutation: M_CONFIRM_RESET_PASSWORD,\n        variables: {\n          token: _this.props.match.params.ID\n        }\n      }).then(function (_ref) {\n        var confirmResetPassword = _ref.data.confirmResetPassword;\n\n        if (confirmResetPassword) {\n          _this.setState({\n            status: STATUS.INPUT,\n            name: confirmResetPassword\n          });\n        }\n      }).catch(function (error) {\n        _this.setState({\n          status: STATUS.ERROR\n        });\n      });\n    };\n\n    _this.handleResetPassword = function (password) {\n      client.mutate({\n        mutation: M_RESET_PASSWORD_NOT_LOGIN,\n        variables: {\n          newPassword: password,\n          token: _this.props.match.params.ID\n        }\n      }).then(function (_ref2) {\n        var resetPassword = _ref2.data.resetPassword;\n\n        if (resetPassword) {\n          _this.setState({\n            status: STATUS.SUCCESS\n          });\n        }\n      }).catch(function (error) {\n        _this.setState({\n          status: STATUS.ERROR\n        });\n      });\n    };\n\n    _this.backLogin = function () {\n      _this.props.history.push('/login');\n    };\n\n    _this.componentDidMount = function () {\n      _this.handleConfirmToken();\n    };\n\n    return _this;\n  }\n\n  _createClass(ResetPassowrd, [{\n    key: \"render\",\n    value: function render() {\n      var _renderElement;\n\n      var i18n = this.props.i18n;\n      var renderElement = (_renderElement = {}, _defineProperty(_renderElement, STATUS.INPUT, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"reset-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, i18n.t('forgotPassword.titleReset')), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, i18n.t('forgotPassword.hi'), \" \", this.state.name, i18n.t('forgotPassword.inputPassword')), /*#__PURE__*/React.createElement(FormResetPassword, {\n        handleResetPassword: this.handleResetPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }))), _defineProperty(_renderElement, STATUS.SENDING, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-sending\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"loading\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-lodding\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }, i18n.t('verify.beingVerified')))), _defineProperty(_renderElement, STATUS.ERROR, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }\n      }, i18n.t('forgotPassword.titleReset')), /*#__PURE__*/React.createElement(\"img\", {\n        src: errorIcon,\n        alt: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, i18n.t('verify.confirmFailed')))), _defineProperty(_renderElement, STATUS.SUCCESS, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }, i18n.t('forgotPassword.titleReset')), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"description\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      }, i18n.t('forgotPassword.hi'), \" \", this.state.name, i18n.t('forgotPassword.changePasswordSuccess')), /*#__PURE__*/React.createElement(_Button, {\n        type: \"primary\",\n        onClick: this.backLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, i18n.t('forgotPassword.goToLogin')))), _renderElement);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"wrapper-reset-password\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }\n      }), renderElement[this.state.status]);\n    }\n  }]);\n\n  return ResetPassowrd;\n}(React.PureComponent), _temp)) || _class;\n\nexport default withTranslation()(ResetPassowrd);","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/resetPassword/index.js"],"names":["React","withTranslation","withRouter","FormResetPassword","client","M_CONFIRM_RESET_PASSWORD","M_RESET_PASSWORD_NOT_LOGIN","STATUS","INPUT","SENDING","ERROR","SUCCESS","ResetPassowrd","state","status","name","handleConfirmToken","mutate","mutation","variables","token","props","match","params","ID","then","confirmResetPassword","data","setState","catch","error","handleResetPassword","password","newPassword","resetPassword","backLogin","history","push","componentDidMount","i18n","renderElement","t","errorIcon","logo","PureComponent"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Button } from 'antd'\nimport { withTranslation } from 'react-i18next'\nimport { withRouter } from 'react-router-dom'\nimport './index.less'\n\nimport FormResetPassword from './FormResetPassword'\n\nimport { client, M_CONFIRM_RESET_PASSWORD, M_RESET_PASSWORD_NOT_LOGIN } from '@graphql'\n\nimport logo from '@misc/logo/asset9.svg' \nimport errorIcon from '@misc/images/toolbar/error.svg'\n\nconst STATUS = {\n  INPUT: \"INPUT\",\n  SENDING: \"SENDING\",\n  ERROR: \"ERROR\",\n  SUCCESS: \"SUCCESS\"\n}\n\n@withRouter\nclass ResetPassowrd extends React.PureComponent {\n  state = {\n    status: STATUS.INPUT,\n    name: ''\n  }\n\n  handleConfirmToken = () => {\n    client\n      .mutate({\n        mutation: M_CONFIRM_RESET_PASSWORD,\n        variables: {\n          token: this.props.match.params.ID\n        }\n      })\n      .then(({ data: { confirmResetPassword } }) => {\n        if (confirmResetPassword) {\n          this.setState({ status: STATUS.INPUT, name: confirmResetPassword})\n        }\n      })\n      .catch(error => {\n        this.setState({ status: STATUS.ERROR })\n      })\n  }\n\n  handleResetPassword = (password) => {\n    client\n      .mutate({\n        mutation: M_RESET_PASSWORD_NOT_LOGIN,\n        variables: {\n          newPassword: password,\n          token: this.props.match.params.ID\n        }\n      })\n      .then(({ data: { resetPassword } }) => {\n        if (resetPassword) {\n          this.setState({ status: STATUS.SUCCESS})\n        }\n      })\n      .catch(error => {\n        this.setState({ status: STATUS.ERROR })\n      })\n  }\n\n  backLogin = () => {\n    this.props.history.push('/login')\n  }\n\n  componentDidMount = () => {\n    this.handleConfirmToken()\n  }\n\n  render() {\n\n    const { i18n } = this.props\n\n    const renderElement = {\n      [STATUS.INPUT]: (\n        <div className='reset-password'>\n          <p className='title'>{i18n.t('forgotPassword.titleReset')}</p>\n          <p className='description'>{i18n.t('forgotPassword.hi')} {this.state.name}{i18n.t('forgotPassword.inputPassword')}</p>\n          <FormResetPassword handleResetPassword={this.handleResetPassword} />\n        </div>\n      ),\n      [STATUS.SENDING]: (\n        <div className='wrapper-sending'>\n          <div className='loading'></div>\n          <p className='text-lodding'>{i18n.t('verify.beingVerified')}</p>\n\n        </div>\n      ),\n      [STATUS.ERROR]: (\n        <div className='wrapper-error'>\n          <p className='title'>{i18n.t('forgotPassword.titleReset')}</p>\n          <img src={errorIcon} alt='icon' />\n          <p>{i18n.t('verify.confirmFailed')}</p>\n        </div>\n      ),\n      [STATUS.SUCCESS]: (\n        <div className='wrapper-success'>\n          <p className='title'>{i18n.t('forgotPassword.titleReset')}</p>\n      <p className='description'>{i18n.t('forgotPassword.hi')} {this.state.name}{i18n.t('forgotPassword.changePasswordSuccess')}</p>\n          <Button type='primary' onClick={this.backLogin}>{i18n.t('forgotPassword.goToLogin')}</Button>\n        </div>\n      ),\n    }\n\n    return (\n      <div className='wrapper-reset-password'>\n        <img src={logo} alt='logo' />\n        {\n          renderElement[this.state.status]\n        }\n      </div>\n    )\n  }\n}\n\nexport default withTranslation()(ResetPassowrd)"]},"metadata":{},"sourceType":"module"}