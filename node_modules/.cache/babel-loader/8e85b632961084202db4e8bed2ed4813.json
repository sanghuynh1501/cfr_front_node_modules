{"ast":null,"code":"import \"antd/es/upload/style\";\nimport _Upload from \"antd/es/upload\";\nimport \"antd/es/tooltip/style\";\nimport _Tooltip from \"antd/es/tooltip\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/checkbox/style\";\nimport _Checkbox from \"antd/es/checkbox\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/switch/style\";\nimport _Switch from \"antd/es/switch\";\nimport _toConsumableArray from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createForOfIteratorHelper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport \"antd/es/select/style\";\nimport _Select from \"antd/es/select\";\nimport _classCallCheck from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/sang/js/cfr-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _dec,\n    _class,\n    _temp,\n    _jsxFileName = \"/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/index.jsx\";\n\nimport React from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { M_CREATE_VOTE, client, M_END_POLL, M_TOGGLE_PUBLIC, M_TOGGLE_LOCK_POLL } from '@graphql';\nimport { newNotification, returnError } from '@utils';\nimport { generateHTML } from './_funcs.jsx';\nimport moment from 'moment';\nimport NewQuestionForm from './NewQuestionForm';\nimport UserView from './UserView';\nimport ResultView from './ResultView';\nimport ReportView from './ReportView';\nimport TimerView from './TimerView';\nimport PublicView from './PublicView';\nimport AdBlockDetect from './AdBlockDetect'; // @withRouter\n\nvar PollCollapse = (_dec = inject(function (_ref) {\n  var stores = _ref.stores;\n  return stores;\n}), _dec(_class = observer(_class = (_temp = /*#__PURE__*/function (_React$Component) {\n  _inherits(PollCollapse, _React$Component);\n\n  var _super = _createSuper(PollCollapse);\n\n  function PollCollapse(props) {\n    var _this;\n\n    _classCallCheck(this, PollCollapse);\n\n    _this = _super.call(this, props);\n\n    _this._renderMinutes = function () {\n      var minutes = [];\n\n      for (var i = 0; i <= 60; i++) {\n        minutes.push(i);\n      }\n\n      return minutes.map(function (item) {\n        return /*#__PURE__*/React.createElement(_Select.Option, {\n          key: item,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 32\n          }\n        }, item);\n      });\n    };\n\n    _this._onSelectMinute = function (e) {\n      _this.setState({\n        minute: Number(e)\n      });\n\n      if (Number(e) === 0 && _this.state.second === 0) {\n        _this.setState({\n          second: 15\n        });\n      }\n    };\n\n    _this._onSelectSecond = function (e) {\n      _this.setState({\n        second: Number(e)\n      });\n    };\n\n    _this.handleClear = function () {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          current = _assertThisInitialize.formRef.current;\n\n      if (current) {\n        current.setState({\n          questionsPack: []\n        });\n      }\n    };\n\n    _this.handleOpenForm = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this),\n          current = _assertThisInitialize2.formRef.current;\n\n      if (current) {\n        current.packData();\n      }\n    };\n\n    _this.handleSubmitPoll = function () {\n      var _assertThisInitialize3 = _assertThisInitialized(_this),\n          _assertThisInitialize4 = _assertThisInitialize3.state,\n          questionCollection = _assertThisInitialize4.questionCollection,\n          setDuration = _assertThisInitialize4.setDuration,\n          minute = _assertThisInitialize4.minute,\n          second = _assertThisInitialize4.second,\n          canBePersonalPublic = _assertThisInitialize4.canBePersonalPublic,\n          isRandom = _assertThisInitialize4.isRandom,\n          _id = _assertThisInitialize3.props.conferenceState.conference._id;\n\n      var duration = null;\n\n      if (setDuration) {\n        duration = (minute * 60 + second) * 1000;\n      }\n\n      var _iterator = _createForOfIteratorHelper(questionCollection),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var question = _step.value;\n          question.duration = duration;\n          question.conferenceId = _id;\n          question.answers = question.answers.map(function (e, i) {\n            return {\n              key: String.fromCharCode(i + 65),\n              value: e\n            };\n          });\n          question.canBePersonalPublic = canBePersonalPublic;\n          question.isRandom = isRandom;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      client.mutate({\n        mutation: M_CREATE_VOTE,\n        variables: {\n          newPollInput: questionCollection\n        }\n      }).then(function (e) {\n        if (e.data.createPoll) {\n          _this.props.conferenceState.setState({\n            hasPolling: true\n          });\n        }\n      }).catch(function (error) {\n        return newNotification('Please try again later!', 'danger');\n      });\n    };\n\n    _this.handleEndPoll = function () {\n      client.mutate({\n        mutation: M_END_POLL,\n        variables: {\n          pollIds: _this.props.conferenceState.pollsInfo.map(function (pollInfo) {\n            return pollInfo._id;\n          })\n        }\n      }).then(function (e) {\n        if (e.data.endPoll) {\n          _this.props.conferenceState.setState({\n            hasPolling: false\n          });\n\n          _this.setState({\n            minute: 1,\n            second: 0,\n            setDuration: false,\n            isAddQuestionDisable: false,\n            publicPoll: false,\n            personalPublicPoll: false\n          });\n        }\n      }).catch(function (error) {\n        return returnError('endPoll', {\n          error: error,\n          errorMessage: 'Please try again later!'\n        });\n      });\n    };\n\n    _this.handleCreatePoll = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _assertThisInitialize5, current;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _assertThisInitialize5 = _assertThisInitialized(_this), current = _assertThisInitialize5.formRef.current;\n\n              if (current) {\n                _this.setState({\n                  questionCollection: current.state.questionsPack\n                }, function () {\n                  _this.handleSubmitPoll();\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.calculateStatus = function () {\n      return _toConsumableArray(new Set(_this.props.conferenceState.pollsInfo.map(function (e) {\n        return e.userVotes;\n      }).flat(1).map(function (e) {\n        return e.user._id;\n      }))).length;\n    };\n\n    _this.mutationHandlePublic = function (publicState) {\n      var pollIds = _this.props.conferenceState.pollsInfo.map(function (pollInfo) {\n        return pollInfo._id;\n      });\n\n      client.mutate({\n        mutation: M_TOGGLE_PUBLIC,\n        variables: {\n          pollIds: pollIds,\n          publicState: publicState\n        }\n      }).catch(function (error) {\n        return returnError('togglePublic', {\n          error: error,\n          errorMessage: 'Please try again later!'\n        });\n      });\n    };\n\n    _this.mutationHandleLock = function () {\n      var pollIds = _this.props.conferenceState.pollsInfo.map(function (pollInfo) {\n        return pollInfo._id;\n      });\n\n      client.mutate({\n        mutation: M_TOGGLE_LOCK_POLL,\n        variables: {\n          pollIds: pollIds\n        }\n      }).catch(function (error) {\n        return returnError('toggleLock', {\n          error: error,\n          errorMessage: 'Please try again later!'\n        });\n      });\n    };\n\n    _this.handleGenerateFile = function () {\n      var _assertThisInitialize6 = _assertThisInitialized(_this),\n          conferenceState = _assertThisInitialize6.props.conferenceState;\n\n      var fileName = moment(conferenceState.conference.createdAt).format('MMMM Do YYYY') + ' - ' + conferenceState.conference.name + '.html';\n\n      _this.generateFile(fileName, generateHTML(conferenceState));\n    };\n\n    _this.generateFile = function (name, body) {\n      //NOTE: for downloading\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(body));\n      element.setAttribute('download', name);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element); //NOTE: for temporary view, only work when adBlock is disabled\n\n      _this.checkAdBlock();\n\n      var myBlob = new Blob([\"\\uFEFF\", body], {\n        type: 'text/html'\n      });\n      var url = URL.createObjectURL(myBlob);\n      window.open(url, '_blank');\n    };\n\n    _this.checkAdBlock = function () {\n      _this.adBlockDetectRef.current.detectAdBlocker(true);\n    };\n\n    _this.returnState = function (e) {\n      if (e) {\n        return newNotification('Cannot display temporary view because of adBlock!', 'warning');\n      }\n    };\n\n    _this.identicalArrays = function (a, b) {\n      return JSON.stringify(a.sort()) === JSON.stringify(b.sort());\n    };\n\n    _this.handleSavePolls = function (e) {\n      var _assertThisInitialize7 = _assertThisInitialized(_this),\n          questionsPack = _assertThisInitialize7.formRef.current.state.questionsPack,\n          conferenceState = _assertThisInitialize7.props.conferenceState,\n          _assertThisInitialize8 = _assertThisInitialize7.state,\n          canBePersonalPublic = _assertThisInitialize8.canBePersonalPublic,\n          isRandom = _assertThisInitialize8.isRandom;\n\n      var name = moment(conferenceState.conference.createdAt).format('MMMM Do YYYY') + '.txt';\n      var element = document.createElement('a');\n      var dataToSave = {\n        questionsPack: questionsPack,\n        canBePersonalPublic: canBePersonalPublic,\n        isRandom: isRandom\n      };\n      if (questionsPack.length === 0) return newNotification('Vui lòng thử lại!', 'warning', {\n        container: 'top-right'\n      });\n      var body = JSON.stringify(dataToSave);\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(body));\n      element.setAttribute('download', name);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    };\n\n    _this.handleLoadPolls = function (file) {\n      var reader = new FileReader();\n      var objectKeys = ['questionsPack', 'canBePersonalPublic', 'isRandom'];\n      var pollKeysCond = \"[\\\"question\\\",\\\"answers\\\",\\\"type\\\"]\";\n\n      reader.onload = function (e) {\n        var _assertThisInitialize9 = _assertThisInitialized(_this),\n            current = _assertThisInitialize9.formRef.current;\n\n        var gotData = JSON.parse(e.target.result);\n\n        var validKeys = _this.identicalArrays(objectKeys, Object.keys(gotData));\n\n        var validPollKeys = false;\n\n        if (validKeys) {\n          validPollKeys = gotData.questionsPack.map(function (poll) {\n            return JSON.stringify(Object.keys(poll));\n          }) // .join(',')\n          .every(function (e) {\n            console.log(e, pollKeysCond);\n            return e === pollKeysCond;\n          });\n        }\n\n        var validInput = validKeys && validPollKeys;\n        if (validInput) current.setState({\n          questionsPack: gotData.questionsPack\n        }, function () {\n          return _this.setState({\n            canBePersonalPublic: gotData.canBePersonalPublic,\n            isRandom: gotData.isRandom\n          });\n        });\n      };\n\n      reader.readAsText(file);\n      return false;\n    };\n\n    _this.state = {\n      questionCollection: [],\n      donePolls: [],\n      showReport: false,\n      minute: 1,\n      second: 0,\n      setDuration: false,\n      currentType: 'Single',\n      publicPoll: props.conferenceState.pollsInfo.length ? props.conferenceState.pollsInfo[0].isPublic : false,\n      canBePersonalPublic: false,\n      isRandom: false,\n      adblockDetected: false\n    };\n    _this.formRef = React.createRef();\n    _this.adBlockDetectRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(PollCollapse, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          pollManagement = _this$props.pollManagement,\n          conferenceState = _this$props.conferenceState,\n          _this$props$conferenc = _this$props.conferenceState,\n          pollsInfo = _this$props$conferenc.pollsInfo,\n          donePolls = _this$props$conferenc.donePolls,\n          conferenceUsers = _this$props$conferenc.conferenceUsers,\n          _this$state = this.state,\n          questionCollection = _this$state.questionCollection,\n          showReport = _this$state.showReport,\n          currentType = _this$state.currentType,\n          canBePersonalPublic = _this$state.canBePersonalPublic,\n          isRandom = _this$state.isRandom;\n      var selectedTabs = [conferenceState.isShowPoll, conferenceState.isShowPollManagement, conferenceState.isShowParticipants, conferenceState.isShowMessages, conferenceState.isShowAttendancesManagement, conferenceState.isShowQnAManagement, conferenceState.isShowQnA].filter(function (e) {\n        return e;\n      }).length;\n      var disabledGenerateFileBtn = pollsInfo.length ? !pollsInfo[0].isPublic || !pollsInfo[0].canBePersonalPublic : false;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"poll-container\",\n        style: {\n          height: \"calc(100vh - \".concat(selectedTabs * 20 + 1, \"px)\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 9\n        }\n      }, showReport ? donePolls.length > 0 &&\n      /*#__PURE__*/\n      //NOTE: ReportView is not available\n      React.createElement(ReportView, {\n        queryPolls: this.queryPolls,\n        pollsInfo: pollsInfo,\n        donePolls: donePolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 15\n        }\n      }) : pollManagement ?\n      /*#__PURE__*/\n      // <div className='poll-sub-container'>\n      React.createElement(React.Fragment, null, pollsInfo.length ? /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          height: '70%',\n          overflowY: 'scroll'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(ResultView, {\n        conferenceState: this.props.conferenceState,\n        handleEndPoll: this.handleEndPoll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 19\n        }\n      })) : /*#__PURE__*/React.createElement(NewQuestionForm, {\n        ref: this.formRef,\n        questionCollection: questionCollection,\n        currentType: currentType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"questionSelect\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 15\n        }\n      }, pollsInfo.length === 0 ? /*#__PURE__*/React.createElement(React.Fragment, null) :\n      /*#__PURE__*/\n      // <div className='questionSelectMenu'>\n      //   <div className='footer-new-options'>\n      //     <Checkbox onChange={e => this.setState({ setDuration: e.target.checked })}>\n      //       Giới hạn thời gian\n      //     </Checkbox>\n      //     {this.state.setDuration && (\n      //       <div>\n      //         <Select value={this.state.minute} onChange={this._onSelectMinute}>\n      //           {this._renderMinutes()}\n      //         </Select>\n      //         <span>&nbsp;Phút&nbsp;</span>\n      //         <Select value={this.state.second} onChange={this._onSelectSecond}>\n      //           {this.state.minute !== 0 && <Select.Option key={0}>0</Select.Option>}\n      //           <Select.Option key={15}>15</Select.Option>\n      //           <Select.Option key={30}>30</Select.Option>\n      //           <Select.Option key={45}>45</Select.Option>\n      //         </Select>\n      //         <span>&nbsp;Giây&nbsp;</span>\n      //       </div>\n      //     )}\n      //   </div>\n      // </div>\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"optionMenu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 25\n        }\n      }, \"Tr\\u1EA1ng th\\xE1i kh\\u1EA3o s\\xE1t:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"status\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 25\n        }\n      }, this.calculateStatus(), \" trong s\\u1ED1 \", conferenceUsers.length, \" ng\\u01B0\\u1EDDi \\u0111\\u0103ng k\\xFD \\u0111\\xE3 tr\\u1EA3 l\\u1EDDi\"), /*#__PURE__*/React.createElement(TimerView, {\n        conferenceState: this.props.conferenceState,\n        handleEndPoll: this.handleEndPoll,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"publicMenu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 25\n        }\n      }, \"Chia s\\u1EBB v\\u1EDBi ng\\u01B0\\u1EDDi tham d\\u1EF1:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"public\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 25\n        }\n      }, \"Hi\\u1EC3n th\\u1ECB k\\u1EBFt qu\\u1EA3:\", ' ', /*#__PURE__*/React.createElement(_Switch, {\n        checked: pollsInfo[0].isPublic,\n        onChange: function onChange(publicState) {\n          return _this2.mutationHandlePublic(publicState);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"lock\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 25\n        }\n      }, \"Kh\\xF3a th\\u0103m d\\xF2 \\xFD ki\\u1EBFn:\", ' ', /*#__PURE__*/React.createElement(_Switch, {\n        checked: pollsInfo[0].isLocked,\n        onChange: this.mutationHandleLock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 27\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"personalPublic\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 25\n        }\n      }, \"K\\u1EBFt qu\\u1EA3 chi ti\\u1EBFt theo c\\xE1 nh\\xE2n:\", ' ', /*#__PURE__*/React.createElement(_Button, {\n        //  onClick={this.mutationHandlePublic}\n        disabled: disabledGenerateFileBtn,\n        onClick: this.handleGenerateFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 27\n        }\n      }, \"Xu\\u1EA5t file\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"footer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 17\n        }\n      }, pollsInfo.length === 0 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(_Button, {\n        onClick: this.handleOpenForm,\n        style: {\n          width: '30%'\n        },\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 23\n        }\n      }, \"M\\u1EDBi\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"addAnswerSection\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"checkboxesHolder\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(_Checkbox, {\n        checked: canBePersonalPublic,\n        onChange: function onChange(_ref3) {\n          var checked = _ref3.target.checked;\n          return _this2.setState({\n            canBePersonalPublic: checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 27\n        }\n      }, \"Ghi l\\u1EA1i c\\xE2u tr\\u1EA3 l\\u1EDDi c\\xE1 nh\\xE2n\"), /*#__PURE__*/React.createElement(_Checkbox, {\n        checked: isRandom,\n        onChange: function onChange(_ref4) {\n          var checked = _ref4.target.checked;\n          return _this2.setState({\n            isRandom: checked\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 27\n        }\n      }, \"Tr\\u1ED9n c\\xE2u h\\u1ECFi v\\xE0 c\\xE2u tr\\u1EA3 l\\u1EDDi\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"savePollBtn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(_Tooltip, {\n        title: \"L\\u01B0u\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        onClick: this.handleSavePolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"save\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 33\n        }\n      })))), /*#__PURE__*/React.createElement(_Upload, {\n        accept: \".txt\",\n        showUploadList: false,\n        beforeUpload: this.handleLoadPolls,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(_Tooltip, {\n        title: \"T\\u1EA3i l\\xEAn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(_Icon, {\n        type: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 33\n        }\n      }))))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"conFirmWrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(_Button, {\n        disabled: pollsInfo.length,\n        onClick: this.handleClear,\n        style: {\n          width: '30%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }\n      }, \"Xo\\xE1 T\\u1EA5t C\\u1EA3\"), /*#__PURE__*/React.createElement(_Button, {\n        disabled: !pollsInfo.length,\n        onClick: this.handleEndPoll,\n        style: {\n          width: '30%'\n        },\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }\n      }, \"K\\u1EBFt Th\\xFAc\"), /*#__PURE__*/React.createElement(_Button, {\n        disabled: pollsInfo.length,\n        onClick: this.handleCreatePoll,\n        style: {\n          width: '30%'\n        },\n        type: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 21\n        }\n      }, \"B\\u1EAFt \\u0110\\u1EA7u\"))))) : // </div>\n      pollsInfo.length ? /*#__PURE__*/React.createElement(UserView, {\n        pollsInfo: pollsInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(PublicView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(AdBlockDetect, {\n        returnState: this.returnState,\n        pathname: window.location.pathname,\n        ref: this.adBlockDetectRef,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return PollCollapse;\n}(React.Component), _temp)) || _class) || _class);\nexport default PollCollapse;","map":{"version":3,"sources":["/home/sang/js/cfr-frontend/src/pages/conference2/collab-panel/PollCollapse/index.jsx"],"names":["React","inject","observer","M_CREATE_VOTE","client","M_END_POLL","M_TOGGLE_PUBLIC","M_TOGGLE_LOCK_POLL","newNotification","returnError","generateHTML","moment","NewQuestionForm","UserView","ResultView","ReportView","TimerView","PublicView","AdBlockDetect","PollCollapse","stores","props","_renderMinutes","minutes","i","push","map","item","_onSelectMinute","e","setState","minute","Number","state","second","_onSelectSecond","handleClear","current","formRef","questionsPack","handleOpenForm","packData","handleSubmitPoll","questionCollection","setDuration","canBePersonalPublic","isRandom","_id","conferenceState","conference","duration","question","conferenceId","answers","key","String","fromCharCode","value","mutate","mutation","variables","newPollInput","then","data","createPoll","hasPolling","catch","error","handleEndPoll","pollIds","pollsInfo","pollInfo","endPoll","isAddQuestionDisable","publicPoll","personalPublicPoll","errorMessage","handleCreatePoll","calculateStatus","Set","userVotes","flat","user","length","mutationHandlePublic","publicState","mutationHandleLock","handleGenerateFile","fileName","createdAt","format","name","generateFile","body","element","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","checkAdBlock","myBlob","Blob","type","url","URL","createObjectURL","window","open","adBlockDetectRef","detectAdBlocker","returnState","identicalArrays","a","b","JSON","stringify","sort","handleSavePolls","dataToSave","container","handleLoadPolls","file","reader","FileReader","objectKeys","pollKeysCond","onload","gotData","parse","target","result","validKeys","Object","keys","validPollKeys","poll","every","console","log","validInput","readAsText","donePolls","showReport","currentType","isPublic","adblockDetected","createRef","pollManagement","conferenceUsers","selectedTabs","isShowPoll","isShowPollManagement","isShowParticipants","isShowMessages","isShowAttendancesManagement","isShowQnAManagement","isShowQnA","filter","disabledGenerateFileBtn","height","queryPolls","overflowY","isLocked","width","checked","location","pathname","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { inject, observer } from 'mobx-react'\nimport { Select, Button, Checkbox, Switch, Icon, Upload, Tooltip } from 'antd'\nimport { M_CREATE_VOTE, client, M_END_POLL, M_TOGGLE_PUBLIC, M_TOGGLE_LOCK_POLL } from '@graphql'\nimport { newNotification, returnError } from '@utils'\nimport { generateHTML } from './_funcs.jsx'\nimport moment from 'moment'\n\nimport NewQuestionForm from './NewQuestionForm'\nimport UserView from './UserView'\nimport ResultView from './ResultView'\nimport ReportView from './ReportView'\nimport TimerView from './TimerView'\nimport PublicView from './PublicView'\nimport AdBlockDetect from './AdBlockDetect'\n// @withRouter\n@inject(({ stores }) => stores)\n@observer\nclass PollCollapse extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      questionCollection: [],\n      donePolls: [],\n      showReport: false,\n      minute: 1,\n      second: 0,\n      setDuration: false,\n      currentType: 'Single',\n\n      publicPoll: props.conferenceState.pollsInfo.length ? props.conferenceState.pollsInfo[0].isPublic : false,\n\n      canBePersonalPublic: false,\n      isRandom: false,\n\n      adblockDetected: false\n    }\n\n    this.formRef = React.createRef()\n    this.adBlockDetectRef = React.createRef()\n  }\n\n  _renderMinutes = () => {\n    let minutes = []\n    for (let i = 0; i <= 60; i++) {\n      minutes.push(i)\n    }\n    return minutes.map(item => <Select.Option key={item}>{item}</Select.Option>)\n  }\n\n  _onSelectMinute = e => {\n    this.setState({ minute: Number(e) })\n    if (Number(e) === 0 && this.state.second === 0) {\n      this.setState({ second: 15 })\n    }\n  }\n\n  _onSelectSecond = e => {\n    this.setState({ second: Number(e) })\n  }\n\n  // NOTE: clear input\n  handleClear = () => {\n    const {\n      formRef: { current }\n    } = this\n    if (current) {\n      current.setState({ questionsPack: [] })\n    }\n  }\n\n  // NOTE: open form\n  handleOpenForm = () => {\n    const {\n      formRef: { current }\n    } = this\n    if (current) {\n      current.packData()\n    }\n  }\n\n  // NOTE: mutation create polls\n  handleSubmitPoll = () => {\n    const {\n      state: { questionCollection, setDuration, minute, second, canBePersonalPublic, isRandom },\n      props: {\n        conferenceState: {\n          conference: { _id }\n        }\n      }\n    } = this\n\n    let duration = null\n\n    if (setDuration) {\n      duration = (minute * 60 + second) * 1000\n    }\n\n    for (let question of questionCollection) {\n      question.duration = duration\n      question.conferenceId = _id\n      question.answers = question.answers.map((e, i) => ({\n        key: String.fromCharCode(i + 65),\n        value: e\n      }))\n      question.canBePersonalPublic = canBePersonalPublic\n      question.isRandom = isRandom\n    }\n\n    client\n      .mutate({\n        mutation: M_CREATE_VOTE,\n        variables: {\n          newPollInput: questionCollection\n        }\n      })\n      .then(e => {\n        if (e.data.createPoll) {\n          this.props.conferenceState.setState({ hasPolling: true })\n        }\n      })\n      .catch(error => {\n        return newNotification('Please try again later!', 'danger')\n      })\n  }\n\n  // NOTE: mutation end polls\n  handleEndPoll = () => {\n    client\n      .mutate({\n        mutation: M_END_POLL,\n        variables: {\n          pollIds: this.props.conferenceState.pollsInfo.map(pollInfo => pollInfo._id)\n        }\n      })\n      .then(e => {\n        if (e.data.endPoll) {\n          this.props.conferenceState.setState({ hasPolling: false })\n          this.setState({\n            minute: 1,\n            second: 0,\n            setDuration: false,\n            isAddQuestionDisable: false,\n            publicPoll: false,\n            personalPublicPoll: false\n          })\n        }\n      })\n      .catch(error =>\n        returnError('endPoll', {\n          error,\n          errorMessage: 'Please try again later!'\n        })\n      )\n  }\n\n  // NOTE: handle create polls\n  handleCreatePoll = async () => {\n    const {\n      formRef: { current }\n    } = this\n    if (current) {\n      this.setState({ questionCollection: current.state.questionsPack }, () => {\n        this.handleSubmitPoll()\n      })\n    }\n  }\n\n  calculateStatus = () =>\n    [\n      ...new Set(\n        this.props.conferenceState.pollsInfo\n          .map(e => e.userVotes)\n          .flat(1)\n          .map(e => e.user._id)\n      )\n    ].length\n\n  mutationHandlePublic = publicState => {\n    const pollIds = this.props.conferenceState.pollsInfo.map(pollInfo => pollInfo._id)\n    client\n      .mutate({\n        mutation: M_TOGGLE_PUBLIC,\n        variables: {\n          pollIds,\n          publicState\n        }\n      })\n      .catch(error =>\n        returnError('togglePublic', {\n          error,\n          errorMessage: 'Please try again later!'\n        })\n      )\n  }\n\n  mutationHandleLock = () => {\n    const pollIds = this.props.conferenceState.pollsInfo.map(pollInfo => pollInfo._id)\n    client\n      .mutate({\n        mutation: M_TOGGLE_LOCK_POLL,\n        variables: {\n          pollIds\n        }\n      })\n      .catch(error =>\n        returnError('toggleLock', {\n          error,\n          errorMessage: 'Please try again later!'\n        })\n      )\n  }\n\n  handleGenerateFile = () => {\n    const {\n      props: { conferenceState }\n    } = this\n    const fileName =\n      moment(conferenceState.conference.createdAt).format('MMMM Do YYYY') +\n      ' - ' +\n      conferenceState.conference.name +\n      '.html'\n\n    this.generateFile(fileName, generateHTML(conferenceState))\n  }\n\n  generateFile = (name, body) => {\n    //NOTE: for downloading\n    let element = document.createElement('a')\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(body))\n    element.setAttribute('download', name)\n\n    element.style.display = 'none'\n    document.body.appendChild(element)\n    element.click()\n    document.body.removeChild(element)\n\n    //NOTE: for temporary view, only work when adBlock is disabled\n    this.checkAdBlock()\n    let myBlob = new Blob(['\\ufeff', body], { type: 'text/html' })\n    let url = URL.createObjectURL(myBlob)\n    window.open(url, '_blank')\n  }\n\n  checkAdBlock = () => {\n    this.adBlockDetectRef.current.detectAdBlocker(true)\n  }\n\n  returnState = e => {\n    if (e) {\n      return newNotification('Cannot display temporary view because of adBlock!', 'warning')\n    }\n  }\n\n  identicalArrays = (a, b) => JSON.stringify(a.sort()) === JSON.stringify(b.sort())\n\n  handleSavePolls = e => {\n    const {\n      formRef: {\n        current: {\n          state: { questionsPack }\n        }\n      },\n      props: { conferenceState },\n      state: { canBePersonalPublic, isRandom }\n    } = this\n\n    const name = moment(conferenceState.conference.createdAt).format('MMMM Do YYYY') + '.txt'\n\n    let element = document.createElement('a')\n\n    let dataToSave = {\n      questionsPack,\n      canBePersonalPublic,\n      isRandom\n    }\n\n    if (questionsPack.length === 0)\n      return newNotification('Vui lòng thử lại!', 'warning', {\n        container: 'top-right'\n      })\n    let body = JSON.stringify(dataToSave)\n\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(body))\n    element.setAttribute('download', name)\n\n    element.style.display = 'none'\n    document.body.appendChild(element)\n    element.click()\n    document.body.removeChild(element)\n  }\n\n  handleLoadPolls = file => {\n    const reader = new FileReader()\n    const objectKeys = ['questionsPack', 'canBePersonalPublic', 'isRandom']\n    const pollKeysCond = `[\"question\",\"answers\",\"type\"]`\n\n    reader.onload = e => {\n      const {\n        formRef: { current }\n      } = this\n      const gotData = JSON.parse(e.target.result)\n      const validKeys = this.identicalArrays(objectKeys, Object.keys(gotData))\n      let validPollKeys = false\n      if (validKeys) {\n        validPollKeys = gotData.questionsPack\n          .map(poll => JSON.stringify(Object.keys(poll)))\n          // .join(',')\n          .every(e => {\n            console.log(e, pollKeysCond)\n            return e === pollKeysCond\n          })\n      }\n      const validInput = validKeys && validPollKeys\n      if (validInput)\n        current.setState({ questionsPack: gotData.questionsPack }, () =>\n          this.setState({ canBePersonalPublic: gotData.canBePersonalPublic, isRandom: gotData.isRandom })\n        )\n    }\n    reader.readAsText(file)\n\n    return false\n  }\n\n  render() {\n    const {\n      props: {\n        pollManagement,\n        conferenceState,\n        conferenceState: { pollsInfo, donePolls, conferenceUsers }\n      },\n      state: { questionCollection, showReport, currentType, canBePersonalPublic, isRandom }\n    } = this\n\n    const selectedTabs = [\n      conferenceState.isShowPoll,\n      conferenceState.isShowPollManagement,\n      conferenceState.isShowParticipants,\n      conferenceState.isShowMessages,\n      conferenceState.isShowAttendancesManagement,\n      conferenceState.isShowQnAManagement,\n      conferenceState.isShowQnA\n    ].filter(e => e).length\n\n    const disabledGenerateFileBtn = pollsInfo.length\n      ? !pollsInfo[0].isPublic || !pollsInfo[0].canBePersonalPublic\n      : false\n\n    return (\n      <>\n        <div className='poll-container' style={{ height: `calc(100vh - ${selectedTabs * 20 + 1}px)` }}>\n          {showReport ? (\n            donePolls.length > 0 && (\n              //NOTE: ReportView is not available\n              <ReportView queryPolls={this.queryPolls} pollsInfo={pollsInfo} donePolls={donePolls} />\n            )\n          ) : pollManagement ? (\n            // <div className='poll-sub-container'>\n            <>\n              {pollsInfo.length ? (\n                <div style={{ height: '70%', overflowY: 'scroll' }}>\n                  <ResultView conferenceState={this.props.conferenceState} handleEndPoll={this.handleEndPoll} />\n                </div>\n              ) : (\n                  <NewQuestionForm ref={this.formRef} questionCollection={questionCollection} currentType={currentType} />\n                )}\n              <div className='questionSelect'>\n                {pollsInfo.length === 0 ? (\n                  <></>\n                ) : (\n                    // <div className='questionSelectMenu'>\n                    //   <div className='footer-new-options'>\n                    //     <Checkbox onChange={e => this.setState({ setDuration: e.target.checked })}>\n                    //       Giới hạn thời gian\n                    //     </Checkbox>\n                    //     {this.state.setDuration && (\n                    //       <div>\n                    //         <Select value={this.state.minute} onChange={this._onSelectMinute}>\n                    //           {this._renderMinutes()}\n                    //         </Select>\n                    //         <span>&nbsp;Phút&nbsp;</span>\n                    //         <Select value={this.state.second} onChange={this._onSelectSecond}>\n                    //           {this.state.minute !== 0 && <Select.Option key={0}>0</Select.Option>}\n                    //           <Select.Option key={15}>15</Select.Option>\n                    //           <Select.Option key={30}>30</Select.Option>\n                    //           <Select.Option key={45}>45</Select.Option>\n                    //         </Select>\n                    //         <span>&nbsp;Giây&nbsp;</span>\n                    //       </div>\n                    //     )}\n                    //   </div>\n                    // </div>\n                    <>\n                      <div className='optionMenu'>\n                        <span className='title'>Trạng thái khảo sát:</span>\n                        <div className='status'>\n                          {this.calculateStatus()} trong số {conferenceUsers.length} người đăng ký đã trả lời\n                      </div>\n                        <TimerView conferenceState={this.props.conferenceState} handleEndPoll={this.handleEndPoll} />\n                      </div>\n                      <div className='publicMenu'>\n                        <span className='title'>Chia sẻ với người tham dự:</span>\n                        <div className='public'>\n                          Hiển thị kết quả:{' '}\n                          <Switch\n                            checked={pollsInfo[0].isPublic}\n                            onChange={publicState => this.mutationHandlePublic(publicState)}\n                          />\n                        </div>\n\n                        <div className='lock'>\n                          Khóa thăm dò ý kiến:{' '}\n                          <Switch checked={pollsInfo[0].isLocked} onChange={this.mutationHandleLock} />\n                        </div>\n\n                        <div className='personalPublic'>\n                          Kết quả chi tiết theo cá nhân:{' '}\n                          <Button\n                            //  onClick={this.mutationHandlePublic}\n                            disabled={disabledGenerateFileBtn}\n                            onClick={this.handleGenerateFile}\n                          >\n                            Xuất file\n                        </Button>\n                        </div>\n                      </div>\n                    </>\n                  )}\n\n                <div className='footer'>\n                  {pollsInfo.length === 0 && (\n                    <>\n                      <Button onClick={this.handleOpenForm} style={{ width: '30%' }} type='primary'>\n                        Mới\n                      </Button>\n\n                      <div className='addAnswerSection'>\n                        <div className='checkboxesHolder'>\n                          <Checkbox\n                            checked={canBePersonalPublic}\n                            onChange={({ target: { checked } }) => this.setState({ canBePersonalPublic: checked })}\n                          >\n                            Ghi lại câu trả lời cá nhân\n                          </Checkbox>\n\n                          <Checkbox\n                            checked={isRandom}\n                            onChange={({ target: { checked } }) => this.setState({ isRandom: checked })}\n                          >\n                            Trộn câu hỏi và câu trả lời\n                          </Checkbox>\n                        </div>\n\n                        <div className='savePollBtn'>\n                          <Tooltip title='Lưu'>\n                            <span>\n                              <Button onClick={this.handleSavePolls}>\n                                <Icon type='save' />\n                              </Button>\n                            </span>\n                          </Tooltip>\n\n                          <Upload accept='.txt' showUploadList={false} beforeUpload={this.handleLoadPolls}>\n                            <Tooltip title='Tải lên'>\n                              <Button>\n                                <Icon type='upload' />\n                              </Button>\n                            </Tooltip>\n                          </Upload>\n                        </div>\n                      </div>\n                    </>\n                  )}\n                  <div className='conFirmWrapper'>\n                    <Button disabled={pollsInfo.length} onClick={this.handleClear} style={{ width: '30%' }}>\n                      Xoá Tất Cả\n                    </Button>\n\n                    <Button\n                      disabled={!pollsInfo.length}\n                      onClick={this.handleEndPoll}\n                      style={{ width: '30%' }}\n                      type='danger'\n                    >\n                      Kết Thúc\n                    </Button>\n                    <Button\n                      disabled={pollsInfo.length}\n                      onClick={this.handleCreatePoll}\n                      style={{ width: '30%' }}\n                      type='primary'\n                    >\n                      Bắt Đầu\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </>\n          ) : // </div>\n              pollsInfo.length ? (\n                <UserView pollsInfo={pollsInfo} />\n              ) : (\n                  <PublicView />\n                )}\n        </div>\n        <AdBlockDetect returnState={this.returnState} pathname={window.location.pathname} ref={this.adBlockDetectRef} />\n      </>\n    )\n  }\n}\n\nexport default PollCollapse\n"]},"metadata":{},"sourceType":"module"}